import {
  EMPTY_OBJ,
  NO,
  NOOP,
  PatchFlagNames,
  camelize,
  capitalize,
  extend,
  generateCodeFrame,
  hyphenate,
  init_runtime_dom_esm_bundler,
  init_shared_esm_bundler,
  isArray,
  isBuiltInDirective,
  isHTMLTag,
  isObject,
  isOn,
  isReservedProp,
  isSVGTag,
  isString,
  isSymbol,
  isVoidTag,
  makeMap,
  parseStringStyle,
  runtime_dom_esm_bundler_exports,
  shared_esm_bundler_exports,
  slotFlagsText,
  toHandlerKey
} from "./chunk-PTUCGQPZ.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-7NEK6ARH.js";

// node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js
function defaultOnError(error) {
  throw error;
}
function defaultOnWarn(msg) {
  console.warn(`[Vue warn] ${msg.message}`);
}
function createCompilerError(code, loc, messages, additionalMessage) {
  const msg = true ? (messages || errorMessages)[code] + (additionalMessage || ``) : code;
  const error = new SyntaxError(String(msg));
  error.code = code;
  error.loc = loc;
  return error;
}
function registerRuntimeHelpers(helpers) {
  Object.getOwnPropertySymbols(helpers).forEach((s) => {
    helperNameMap[s] = helpers[s];
  });
}
function createRoot(children, loc = locStub) {
  return {
    type: 0,
    children,
    helpers: [],
    components: [],
    directives: [],
    hoists: [],
    imports: [],
    cached: 0,
    temps: 0,
    codegenNode: void 0,
    loc
  };
}
function createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent2 = false, loc = locStub) {
  if (context) {
    if (isBlock) {
      context.helper(OPEN_BLOCK);
      context.helper(getVNodeBlockHelper(context.inSSR, isComponent2));
    } else {
      context.helper(getVNodeHelper(context.inSSR, isComponent2));
    }
    if (directives) {
      context.helper(WITH_DIRECTIVES);
    }
  }
  return {
    type: 13,
    tag,
    props,
    children,
    patchFlag,
    dynamicProps,
    directives,
    isBlock,
    disableTracking,
    isComponent: isComponent2,
    loc
  };
}
function createArrayExpression(elements, loc = locStub) {
  return {
    type: 17,
    loc,
    elements
  };
}
function createObjectExpression(properties, loc = locStub) {
  return {
    type: 15,
    loc,
    properties
  };
}
function createObjectProperty(key, value) {
  return {
    type: 16,
    loc: locStub,
    key: isString(key) ? createSimpleExpression(key, true) : key,
    value
  };
}
function createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {
  return {
    type: 4,
    loc,
    content,
    isStatic,
    constType: isStatic ? 3 : constType
  };
}
function createInterpolation(content, loc) {
  return {
    type: 5,
    loc,
    content: isString(content) ? createSimpleExpression(content, false, loc) : content
  };
}
function createCompoundExpression(children, loc = locStub) {
  return {
    type: 8,
    loc,
    children
  };
}
function createCallExpression(callee, args = [], loc = locStub) {
  return {
    type: 14,
    loc,
    callee,
    arguments: args
  };
}
function createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {
  return {
    type: 18,
    params,
    returns,
    newline,
    isSlot,
    loc
  };
}
function createConditionalExpression(test, consequent, alternate, newline = true) {
  return {
    type: 19,
    test,
    consequent,
    alternate,
    newline,
    loc: locStub
  };
}
function createCacheExpression(index, value, isVNode = false) {
  return {
    type: 20,
    index,
    value,
    isVNode,
    loc: locStub
  };
}
function createBlockStatement(body) {
  return {
    type: 21,
    body,
    loc: locStub
  };
}
function createTemplateLiteral(elements) {
  return {
    type: 22,
    elements,
    loc: locStub
  };
}
function createIfStatement(test, consequent, alternate) {
  return {
    type: 23,
    test,
    consequent,
    alternate,
    loc: locStub
  };
}
function createAssignmentExpression(left, right) {
  return {
    type: 24,
    left,
    right,
    loc: locStub
  };
}
function createSequenceExpression(expressions) {
  return {
    type: 25,
    expressions,
    loc: locStub
  };
}
function createReturnStatement(returns) {
  return {
    type: 26,
    returns,
    loc: locStub
  };
}
function isCoreComponent(tag) {
  if (isBuiltInType(tag, "Teleport")) {
    return TELEPORT;
  } else if (isBuiltInType(tag, "Suspense")) {
    return SUSPENSE;
  } else if (isBuiltInType(tag, "KeepAlive")) {
    return KEEP_ALIVE;
  } else if (isBuiltInType(tag, "BaseTransition")) {
    return BASE_TRANSITION;
  }
}
function getInnerRange(loc, offset, length) {
  const source = loc.source.slice(offset, offset + length);
  const newLoc = {
    source,
    start: advancePositionWithClone(loc.start, loc.source, offset),
    end: loc.end
  };
  if (length != null) {
    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);
  }
  return newLoc;
}
function advancePositionWithClone(pos, source, numberOfCharacters = source.length) {
  return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);
}
function advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {
  let linesCount = 0;
  let lastNewLinePos = -1;
  for (let i = 0; i < numberOfCharacters; i++) {
    if (source.charCodeAt(i) === 10) {
      linesCount++;
      lastNewLinePos = i;
    }
  }
  pos.offset += numberOfCharacters;
  pos.line += linesCount;
  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;
  return pos;
}
function assert(condition, msg) {
  if (!condition) {
    throw new Error(msg || `unexpected compiler condition`);
  }
}
function findDir(node, name, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 7 && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {
      return p;
    }
  }
}
function findProp(node, name, dynamicOnly = false, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 6) {
      if (dynamicOnly)
        continue;
      if (p.name === name && (p.value || allowEmpty)) {
        return p;
      }
    } else if (p.name === "bind" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {
      return p;
    }
  }
}
function isStaticArgOf(arg, name) {
  return !!(arg && isStaticExp(arg) && arg.content === name);
}
function hasDynamicKeyVBind(node) {
  return node.props.some(
    (p) => p.type === 7 && p.name === "bind" && (!p.arg || p.arg.type !== 4 || !p.arg.isStatic)
  );
}
function isText(node) {
  return node.type === 5 || node.type === 2;
}
function isVSlot(p) {
  return p.type === 7 && p.name === "slot";
}
function isTemplateNode(node) {
  return node.type === 1 && node.tagType === 3;
}
function isSlotOutlet(node) {
  return node.type === 1 && node.tagType === 2;
}
function getVNodeHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_VNODE : CREATE_ELEMENT_VNODE;
}
function getVNodeBlockHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;
}
function getUnnormalizedProps(props, callPath = []) {
  if (props && !isString(props) && props.type === 14) {
    const callee = props.callee;
    if (!isString(callee) && propsHelperSet.has(callee)) {
      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));
    }
  }
  return [props, callPath];
}
function injectProp(node, prop, context) {
  let propsWithInjection;
  let props = node.type === 13 ? node.props : node.arguments[2];
  let callPath = [];
  let parentCall;
  if (props && !isString(props) && props.type === 14) {
    const ret = getUnnormalizedProps(props);
    props = ret[0];
    callPath = ret[1];
    parentCall = callPath[callPath.length - 1];
  }
  if (props == null || isString(props)) {
    propsWithInjection = createObjectExpression([prop]);
  } else if (props.type === 14) {
    const first = props.arguments[0];
    if (!isString(first) && first.type === 15) {
      if (!hasProp(prop, first)) {
        first.properties.unshift(prop);
      }
    } else {
      if (props.callee === TO_HANDLERS) {
        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
          createObjectExpression([prop]),
          props
        ]);
      } else {
        props.arguments.unshift(createObjectExpression([prop]));
      }
    }
    !propsWithInjection && (propsWithInjection = props);
  } else if (props.type === 15) {
    if (!hasProp(prop, props)) {
      props.properties.unshift(prop);
    }
    propsWithInjection = props;
  } else {
    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
      createObjectExpression([prop]),
      props
    ]);
    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {
      parentCall = callPath[callPath.length - 2];
    }
  }
  if (node.type === 13) {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.props = propsWithInjection;
    }
  } else {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.arguments[2] = propsWithInjection;
    }
  }
}
function hasProp(prop, props) {
  let result = false;
  if (prop.key.type === 4) {
    const propKeyName = prop.key.content;
    result = props.properties.some((p) => p.key.type === 4 && p.key.content === propKeyName);
  }
  return result;
}
function toValidAssetId(name, type) {
  return `_${type}_${name.replace(/[^\w]/g, (searchValue, replaceValue) => {
    return searchValue === "-" ? "_" : name.charCodeAt(replaceValue).toString();
  })}`;
}
function hasScopeRef(node, ids) {
  if (!node || Object.keys(ids).length === 0) {
    return false;
  }
  switch (node.type) {
    case 1:
      for (let i = 0; i < node.props.length; i++) {
        const p = node.props[i];
        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {
          return true;
        }
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 11:
      if (hasScopeRef(node.source, ids)) {
        return true;
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 9:
      return node.branches.some((b) => hasScopeRef(b, ids));
    case 10:
      if (hasScopeRef(node.condition, ids)) {
        return true;
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 4:
      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];
    case 8:
      return node.children.some((c) => isObject(c) && hasScopeRef(c, ids));
    case 5:
    case 12:
      return hasScopeRef(node.content, ids);
    case 2:
    case 3:
      return false;
    default:
      if (true)
        ;
      return false;
  }
}
function getMemoedVNodeCall(node) {
  if (node.type === 14 && node.callee === WITH_MEMO) {
    return node.arguments[1].returns;
  } else {
    return node;
  }
}
function makeBlock(node, { helper, removeHelper, inSSR }) {
  if (!node.isBlock) {
    node.isBlock = true;
    removeHelper(getVNodeHelper(inSSR, node.isComponent));
    helper(OPEN_BLOCK);
    helper(getVNodeBlockHelper(inSSR, node.isComponent));
  }
}
function getCompatValue(key, context) {
  const config = context.options ? context.options.compatConfig : context.compatConfig;
  const value = config && config[key];
  if (key === "MODE") {
    return value || 3;
  } else {
    return value;
  }
}
function isCompatEnabled(key, context) {
  const mode = getCompatValue("MODE", context);
  const value = getCompatValue(key, context);
  return mode === 3 ? value === true : value !== false;
}
function checkCompatEnabled(key, context, loc, ...args) {
  const enabled = isCompatEnabled(key, context);
  if (enabled) {
    warnDeprecation(key, context, loc, ...args);
  }
  return enabled;
}
function warnDeprecation(key, context, loc, ...args) {
  const val = getCompatValue(key, context);
  if (val === "suppress-warning") {
    return;
  }
  const { message, link } = deprecationData[key];
  const msg = `(deprecation ${key}) ${typeof message === "function" ? message(...args) : message}${link ? `
  Details: ${link}` : ``}`;
  const err = new SyntaxError(msg);
  err.code = key;
  if (loc)
    err.loc = loc;
  context.onWarn(err);
}
function baseParse(content, options = {}) {
  const context = createParserContext(content, options);
  const start = getCursor(context);
  return createRoot(parseChildren(context, 0, []), getSelection(context, start));
}
function createParserContext(content, rawOptions) {
  const options = extend({}, defaultParserOptions);
  let key;
  for (key in rawOptions) {
    options[key] = rawOptions[key] === void 0 ? defaultParserOptions[key] : rawOptions[key];
  }
  return {
    options,
    column: 1,
    line: 1,
    offset: 0,
    originalSource: content,
    source: content,
    inPre: false,
    inVPre: false,
    onWarn: options.onWarn
  };
}
function parseChildren(context, mode, ancestors) {
  const parent = last(ancestors);
  const ns = parent ? parent.ns : 0;
  const nodes = [];
  while (!isEnd(context, mode, ancestors)) {
    const s = context.source;
    let node = void 0;
    if (mode === 0 || mode === 1) {
      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {
        node = parseInterpolation(context, mode);
      } else if (mode === 0 && s[0] === "<") {
        if (s.length === 1) {
          emitError(context, 5, 1);
        } else if (s[1] === "!") {
          if (startsWith(s, "<!--")) {
            node = parseComment(context);
          } else if (startsWith(s, "<!DOCTYPE")) {
            node = parseBogusComment(context);
          } else if (startsWith(s, "<![CDATA[")) {
            if (ns !== 0) {
              node = parseCDATA(context, ancestors);
            } else {
              emitError(context, 1);
              node = parseBogusComment(context);
            }
          } else {
            emitError(context, 11);
            node = parseBogusComment(context);
          }
        } else if (s[1] === "/") {
          if (s.length === 2) {
            emitError(context, 5, 2);
          } else if (s[2] === ">") {
            emitError(context, 14, 2);
            advanceBy(context, 3);
            continue;
          } else if (/[a-z]/i.test(s[2])) {
            emitError(context, 23);
            parseTag(context, 1, parent);
            continue;
          } else {
            emitError(context, 12, 2);
            node = parseBogusComment(context);
          }
        } else if (/[a-z]/i.test(s[1])) {
          node = parseElement(context, ancestors);
          if (isCompatEnabled("COMPILER_NATIVE_TEMPLATE", context) && node && node.tag === "template" && !node.props.some((p) => p.type === 7 && isSpecialTemplateDirective(p.name))) {
            warnDeprecation("COMPILER_NATIVE_TEMPLATE", context, node.loc);
            node = node.children;
          }
        } else if (s[1] === "?") {
          emitError(context, 21, 1);
          node = parseBogusComment(context);
        } else {
          emitError(context, 12, 1);
        }
      }
    }
    if (!node) {
      node = parseText(context, mode);
    }
    if (isArray(node)) {
      for (let i = 0; i < node.length; i++) {
        pushNode(nodes, node[i]);
      }
    } else {
      pushNode(nodes, node);
    }
  }
  let removedWhitespace = false;
  if (mode !== 2 && mode !== 1) {
    const shouldCondense = context.options.whitespace !== "preserve";
    for (let i = 0; i < nodes.length; i++) {
      const node = nodes[i];
      if (node.type === 2) {
        if (!context.inPre) {
          if (!/[^\t\r\n\f ]/.test(node.content)) {
            const prev = nodes[i - 1];
            const next = nodes[i + 1];
            if (!prev || !next || shouldCondense && (prev.type === 3 && next.type === 3 || prev.type === 3 && next.type === 1 || prev.type === 1 && next.type === 3 || prev.type === 1 && next.type === 1 && /[\r\n]/.test(node.content))) {
              removedWhitespace = true;
              nodes[i] = null;
            } else {
              node.content = " ";
            }
          } else if (shouldCondense) {
            node.content = node.content.replace(/[\t\r\n\f ]+/g, " ");
          }
        } else {
          node.content = node.content.replace(/\r\n/g, "\n");
        }
      } else if (node.type === 3 && !context.options.comments) {
        removedWhitespace = true;
        nodes[i] = null;
      }
    }
    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {
      const first = nodes[0];
      if (first && first.type === 2) {
        first.content = first.content.replace(/^\r?\n/, "");
      }
    }
  }
  return removedWhitespace ? nodes.filter(Boolean) : nodes;
}
function pushNode(nodes, node) {
  if (node.type === 2) {
    const prev = last(nodes);
    if (prev && prev.type === 2 && prev.loc.end.offset === node.loc.start.offset) {
      prev.content += node.content;
      prev.loc.end = node.loc.end;
      prev.loc.source += node.loc.source;
      return;
    }
  }
  nodes.push(node);
}
function parseCDATA(context, ancestors) {
  advanceBy(context, 9);
  const nodes = parseChildren(context, 3, ancestors);
  if (context.source.length === 0) {
    emitError(context, 6);
  } else {
    advanceBy(context, 3);
  }
  return nodes;
}
function parseComment(context) {
  const start = getCursor(context);
  let content;
  const match = /--(\!)?>/.exec(context.source);
  if (!match) {
    content = context.source.slice(4);
    advanceBy(context, context.source.length);
    emitError(context, 7);
  } else {
    if (match.index <= 3) {
      emitError(context, 0);
    }
    if (match[1]) {
      emitError(context, 10);
    }
    content = context.source.slice(4, match.index);
    const s = context.source.slice(0, match.index);
    let prevIndex = 1, nestedIndex = 0;
    while ((nestedIndex = s.indexOf("<!--", prevIndex)) !== -1) {
      advanceBy(context, nestedIndex - prevIndex + 1);
      if (nestedIndex + 4 < s.length) {
        emitError(context, 16);
      }
      prevIndex = nestedIndex + 1;
    }
    advanceBy(context, match.index + match[0].length - prevIndex + 1);
  }
  return {
    type: 3,
    content,
    loc: getSelection(context, start)
  };
}
function parseBogusComment(context) {
  const start = getCursor(context);
  const contentStart = context.source[1] === "?" ? 1 : 2;
  let content;
  const closeIndex = context.source.indexOf(">");
  if (closeIndex === -1) {
    content = context.source.slice(contentStart);
    advanceBy(context, context.source.length);
  } else {
    content = context.source.slice(contentStart, closeIndex);
    advanceBy(context, closeIndex + 1);
  }
  return {
    type: 3,
    content,
    loc: getSelection(context, start)
  };
}
function parseElement(context, ancestors) {
  const wasInPre = context.inPre;
  const wasInVPre = context.inVPre;
  const parent = last(ancestors);
  const element = parseTag(context, 0, parent);
  const isPreBoundary = context.inPre && !wasInPre;
  const isVPreBoundary = context.inVPre && !wasInVPre;
  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {
    if (isPreBoundary) {
      context.inPre = false;
    }
    if (isVPreBoundary) {
      context.inVPre = false;
    }
    return element;
  }
  ancestors.push(element);
  const mode = context.options.getTextMode(element, parent);
  const children = parseChildren(context, mode, ancestors);
  ancestors.pop();
  {
    const inlineTemplateProp = element.props.find((p) => p.type === 6 && p.name === "inline-template");
    if (inlineTemplateProp && checkCompatEnabled("COMPILER_INLINE_TEMPLATE", context, inlineTemplateProp.loc)) {
      const loc = getSelection(context, element.loc.end);
      inlineTemplateProp.value = {
        type: 2,
        content: loc.source,
        loc
      };
    }
  }
  element.children = children;
  if (startsWithEndTagOpen(context.source, element.tag)) {
    parseTag(context, 1, parent);
  } else {
    emitError(context, 24, 0, element.loc.start);
    if (context.source.length === 0 && element.tag.toLowerCase() === "script") {
      const first = children[0];
      if (first && startsWith(first.loc.source, "<!--")) {
        emitError(context, 8);
      }
    }
  }
  element.loc = getSelection(context, element.loc.start);
  if (isPreBoundary) {
    context.inPre = false;
  }
  if (isVPreBoundary) {
    context.inVPre = false;
  }
  return element;
}
function parseTag(context, type, parent) {
  const start = getCursor(context);
  const match = /^<\/?([a-z][^\t\r\n\f />]*)/i.exec(context.source);
  const tag = match[1];
  const ns = context.options.getNamespace(tag, parent);
  advanceBy(context, match[0].length);
  advanceSpaces(context);
  const cursor = getCursor(context);
  const currentSource = context.source;
  if (context.options.isPreTag(tag)) {
    context.inPre = true;
  }
  let props = parseAttributes(context, type);
  if (type === 0 && !context.inVPre && props.some((p) => p.type === 7 && p.name === "pre")) {
    context.inVPre = true;
    extend(context, cursor);
    context.source = currentSource;
    props = parseAttributes(context, type).filter((p) => p.name !== "v-pre");
  }
  let isSelfClosing = false;
  if (context.source.length === 0) {
    emitError(context, 9);
  } else {
    isSelfClosing = startsWith(context.source, "/>");
    if (type === 1 && isSelfClosing) {
      emitError(context, 4);
    }
    advanceBy(context, isSelfClosing ? 2 : 1);
  }
  if (type === 1) {
    return;
  }
  if (isCompatEnabled("COMPILER_V_IF_V_FOR_PRECEDENCE", context)) {
    let hasIf = false;
    let hasFor = false;
    for (let i = 0; i < props.length; i++) {
      const p = props[i];
      if (p.type === 7) {
        if (p.name === "if") {
          hasIf = true;
        } else if (p.name === "for") {
          hasFor = true;
        }
      }
      if (hasIf && hasFor) {
        warnDeprecation("COMPILER_V_IF_V_FOR_PRECEDENCE", context, getSelection(context, start));
        break;
      }
    }
  }
  let tagType = 0;
  if (!context.inVPre) {
    if (tag === "slot") {
      tagType = 2;
    } else if (tag === "template") {
      if (props.some((p) => p.type === 7 && isSpecialTemplateDirective(p.name))) {
        tagType = 3;
      }
    } else if (isComponent(tag, props, context)) {
      tagType = 1;
    }
  }
  return {
    type: 1,
    ns,
    tag,
    tagType,
    props,
    isSelfClosing,
    children: [],
    loc: getSelection(context, start),
    codegenNode: void 0
  };
}
function isComponent(tag, props, context) {
  const options = context.options;
  if (options.isCustomElement(tag)) {
    return false;
  }
  if (tag === "component" || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {
    return true;
  }
  for (let i = 0; i < props.length; i++) {
    const p = props[i];
    if (p.type === 6) {
      if (p.name === "is" && p.value) {
        if (p.value.content.startsWith("vue:")) {
          return true;
        } else if (checkCompatEnabled("COMPILER_IS_ON_ELEMENT", context, p.loc)) {
          return true;
        }
      }
    } else {
      if (p.name === "is") {
        return true;
      } else if (p.name === "bind" && isStaticArgOf(p.arg, "is") && true && checkCompatEnabled("COMPILER_IS_ON_ELEMENT", context, p.loc)) {
        return true;
      }
    }
  }
}
function parseAttributes(context, type) {
  const props = [];
  const attributeNames = /* @__PURE__ */ new Set();
  while (context.source.length > 0 && !startsWith(context.source, ">") && !startsWith(context.source, "/>")) {
    if (startsWith(context.source, "/")) {
      emitError(context, 22);
      advanceBy(context, 1);
      advanceSpaces(context);
      continue;
    }
    if (type === 1) {
      emitError(context, 3);
    }
    const attr = parseAttribute(context, attributeNames);
    if (attr.type === 6 && attr.value && attr.name === "class") {
      attr.value.content = attr.value.content.replace(/\s+/g, " ").trim();
    }
    if (type === 0) {
      props.push(attr);
    }
    if (/^[^\t\r\n\f />]/.test(context.source)) {
      emitError(context, 15);
    }
    advanceSpaces(context);
  }
  return props;
}
function parseAttribute(context, nameSet) {
  const start = getCursor(context);
  const match = /^[^\t\r\n\f />][^\t\r\n\f />=]*/.exec(context.source);
  const name = match[0];
  if (nameSet.has(name)) {
    emitError(context, 2);
  }
  nameSet.add(name);
  if (name[0] === "=") {
    emitError(context, 19);
  }
  {
    const pattern = /["'<]/g;
    let m;
    while (m = pattern.exec(name)) {
      emitError(context, 17, m.index);
    }
  }
  advanceBy(context, name.length);
  let value = void 0;
  if (/^[\t\r\n\f ]*=/.test(context.source)) {
    advanceSpaces(context);
    advanceBy(context, 1);
    advanceSpaces(context);
    value = parseAttributeValue(context);
    if (!value) {
      emitError(context, 13);
    }
  }
  const loc = getSelection(context, start);
  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\.|@|#)/.test(name)) {
    const match2 = /(?:^v-([a-z0-9-]+))?(?:(?::|^\.|^@|^#)(\[[^\]]+\]|[^\.]+))?(.+)?$/i.exec(name);
    let isPropShorthand = startsWith(name, ".");
    let dirName = match2[1] || (isPropShorthand || startsWith(name, ":") ? "bind" : startsWith(name, "@") ? "on" : "slot");
    let arg;
    if (match2[2]) {
      const isSlot = dirName === "slot";
      const startOffset = name.lastIndexOf(match2[2]);
      const loc2 = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match2[2].length + (isSlot && match2[3] || "").length));
      let content = match2[2];
      let isStatic = true;
      if (content.startsWith("[")) {
        isStatic = false;
        if (!content.endsWith("]")) {
          emitError(context, 27);
          content = content.slice(1);
        } else {
          content = content.slice(1, content.length - 1);
        }
      } else if (isSlot) {
        content += match2[3] || "";
      }
      arg = {
        type: 4,
        content,
        isStatic,
        constType: isStatic ? 3 : 0,
        loc: loc2
      };
    }
    if (value && value.isQuoted) {
      const valueLoc = value.loc;
      valueLoc.start.offset++;
      valueLoc.start.column++;
      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);
      valueLoc.source = valueLoc.source.slice(1, -1);
    }
    const modifiers = match2[3] ? match2[3].slice(1).split(".") : [];
    if (isPropShorthand)
      modifiers.push("prop");
    if (dirName === "bind" && arg) {
      if (modifiers.includes("sync") && checkCompatEnabled("COMPILER_V_BIND_SYNC", context, loc, arg.loc.source)) {
        dirName = "model";
        modifiers.splice(modifiers.indexOf("sync"), 1);
      }
      if (modifiers.includes("prop")) {
        checkCompatEnabled("COMPILER_V_BIND_PROP", context, loc);
      }
    }
    return {
      type: 7,
      name: dirName,
      exp: value && {
        type: 4,
        content: value.content,
        isStatic: false,
        constType: 0,
        loc: value.loc
      },
      arg,
      modifiers,
      loc
    };
  }
  if (!context.inVPre && startsWith(name, "v-")) {
    emitError(context, 26);
  }
  return {
    type: 6,
    name,
    value: value && {
      type: 2,
      content: value.content,
      loc: value.loc
    },
    loc
  };
}
function parseAttributeValue(context) {
  const start = getCursor(context);
  let content;
  const quote = context.source[0];
  const isQuoted = quote === `"` || quote === `'`;
  if (isQuoted) {
    advanceBy(context, 1);
    const endIndex = context.source.indexOf(quote);
    if (endIndex === -1) {
      content = parseTextData(context, context.source.length, 4);
    } else {
      content = parseTextData(context, endIndex, 4);
      advanceBy(context, 1);
    }
  } else {
    const match = /^[^\t\r\n\f >]+/.exec(context.source);
    if (!match) {
      return void 0;
    }
    const unexpectedChars = /["'<=`]/g;
    let m;
    while (m = unexpectedChars.exec(match[0])) {
      emitError(context, 18, m.index);
    }
    content = parseTextData(context, match[0].length, 4);
  }
  return { content, isQuoted, loc: getSelection(context, start) };
}
function parseInterpolation(context, mode) {
  const [open, close] = context.options.delimiters;
  const closeIndex = context.source.indexOf(close, open.length);
  if (closeIndex === -1) {
    emitError(context, 25);
    return void 0;
  }
  const start = getCursor(context);
  advanceBy(context, open.length);
  const innerStart = getCursor(context);
  const innerEnd = getCursor(context);
  const rawContentLength = closeIndex - open.length;
  const rawContent = context.source.slice(0, rawContentLength);
  const preTrimContent = parseTextData(context, rawContentLength, mode);
  const content = preTrimContent.trim();
  const startOffset = preTrimContent.indexOf(content);
  if (startOffset > 0) {
    advancePositionWithMutation(innerStart, rawContent, startOffset);
  }
  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);
  advancePositionWithMutation(innerEnd, rawContent, endOffset);
  advanceBy(context, close.length);
  return {
    type: 5,
    content: {
      type: 4,
      isStatic: false,
      constType: 0,
      content,
      loc: getSelection(context, innerStart, innerEnd)
    },
    loc: getSelection(context, start)
  };
}
function parseText(context, mode) {
  const endTokens = mode === 3 ? ["]]>"] : ["<", context.options.delimiters[0]];
  let endIndex = context.source.length;
  for (let i = 0; i < endTokens.length; i++) {
    const index = context.source.indexOf(endTokens[i], 1);
    if (index !== -1 && endIndex > index) {
      endIndex = index;
    }
  }
  const start = getCursor(context);
  const content = parseTextData(context, endIndex, mode);
  return {
    type: 2,
    content,
    loc: getSelection(context, start)
  };
}
function parseTextData(context, length, mode) {
  const rawText = context.source.slice(0, length);
  advanceBy(context, length);
  if (mode === 2 || mode === 3 || !rawText.includes("&")) {
    return rawText;
  } else {
    return context.options.decodeEntities(rawText, mode === 4);
  }
}
function getCursor(context) {
  const { column, line, offset } = context;
  return { column, line, offset };
}
function getSelection(context, start, end) {
  end = end || getCursor(context);
  return {
    start,
    end,
    source: context.originalSource.slice(start.offset, end.offset)
  };
}
function last(xs) {
  return xs[xs.length - 1];
}
function startsWith(source, searchString) {
  return source.startsWith(searchString);
}
function advanceBy(context, numberOfCharacters) {
  const { source } = context;
  advancePositionWithMutation(context, source, numberOfCharacters);
  context.source = source.slice(numberOfCharacters);
}
function advanceSpaces(context) {
  const match = /^[\t\r\n\f ]+/.exec(context.source);
  if (match) {
    advanceBy(context, match[0].length);
  }
}
function getNewPosition(context, start, numberOfCharacters) {
  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);
}
function emitError(context, code, offset, loc = getCursor(context)) {
  if (offset) {
    loc.offset += offset;
    loc.column += offset;
  }
  context.options.onError(createCompilerError(code, {
    start: loc,
    end: loc,
    source: ""
  }));
}
function isEnd(context, mode, ancestors) {
  const s = context.source;
  switch (mode) {
    case 0:
      if (startsWith(s, "</")) {
        for (let i = ancestors.length - 1; i >= 0; --i) {
          if (startsWithEndTagOpen(s, ancestors[i].tag)) {
            return true;
          }
        }
      }
      break;
    case 1:
    case 2: {
      const parent = last(ancestors);
      if (parent && startsWithEndTagOpen(s, parent.tag)) {
        return true;
      }
      break;
    }
    case 3:
      if (startsWith(s, "]]>")) {
        return true;
      }
      break;
  }
  return !s;
}
function startsWithEndTagOpen(source, tag) {
  return startsWith(source, "</") && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\t\r\n\f />]/.test(source[2 + tag.length] || ">");
}
function hoistStatic(root, context) {
  walk(
    root,
    context,
    isSingleElementRoot(root, root.children[0])
  );
}
function isSingleElementRoot(root, child) {
  const { children } = root;
  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);
}
function walk(node, context, doNotHoistNode = false) {
  const { children } = node;
  const originalCount = children.length;
  let hoistedCount = 0;
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    if (child.type === 1 && child.tagType === 0) {
      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);
      if (constantType > 0) {
        if (constantType >= 2) {
          child.codegenNode.patchFlag = -1 + (true ? ` /* HOISTED */` : ``);
          child.codegenNode = context.hoist(child.codegenNode);
          hoistedCount++;
          continue;
        }
      } else {
        const codegenNode = child.codegenNode;
        if (codegenNode.type === 13) {
          const flag = getPatchFlag(codegenNode);
          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {
            const props = getNodeProps(child);
            if (props) {
              codegenNode.props = context.hoist(props);
            }
          }
          if (codegenNode.dynamicProps) {
            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);
          }
        }
      }
    }
    if (child.type === 1) {
      const isComponent2 = child.tagType === 1;
      if (isComponent2) {
        context.scopes.vSlot++;
      }
      walk(child, context);
      if (isComponent2) {
        context.scopes.vSlot--;
      }
    } else if (child.type === 11) {
      walk(child, context, child.children.length === 1);
    } else if (child.type === 9) {
      for (let i2 = 0; i2 < child.branches.length; i2++) {
        walk(child.branches[i2], context, child.branches[i2].children.length === 1);
      }
    }
  }
  if (hoistedCount && context.transformHoist) {
    context.transformHoist(children, context, node);
  }
  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray(node.codegenNode.children)) {
    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));
  }
}
function getConstantType(node, context) {
  const { constantCache } = context;
  switch (node.type) {
    case 1:
      if (node.tagType !== 0) {
        return 0;
      }
      const cached = constantCache.get(node);
      if (cached !== void 0) {
        return cached;
      }
      const codegenNode = node.codegenNode;
      if (codegenNode.type !== 13) {
        return 0;
      }
      if (codegenNode.isBlock && node.tag !== "svg" && node.tag !== "foreignObject") {
        return 0;
      }
      const flag = getPatchFlag(codegenNode);
      if (!flag) {
        let returnType2 = 3;
        const generatedPropsType = getGeneratedPropsConstantType(node, context);
        if (generatedPropsType === 0) {
          constantCache.set(node, 0);
          return 0;
        }
        if (generatedPropsType < returnType2) {
          returnType2 = generatedPropsType;
        }
        for (let i = 0; i < node.children.length; i++) {
          const childType = getConstantType(node.children[i], context);
          if (childType === 0) {
            constantCache.set(node, 0);
            return 0;
          }
          if (childType < returnType2) {
            returnType2 = childType;
          }
        }
        if (returnType2 > 1) {
          for (let i = 0; i < node.props.length; i++) {
            const p = node.props[i];
            if (p.type === 7 && p.name === "bind" && p.exp) {
              const expType = getConstantType(p.exp, context);
              if (expType === 0) {
                constantCache.set(node, 0);
                return 0;
              }
              if (expType < returnType2) {
                returnType2 = expType;
              }
            }
          }
        }
        if (codegenNode.isBlock) {
          for (let i = 0; i < node.props.length; i++) {
            const p = node.props[i];
            if (p.type === 7) {
              constantCache.set(node, 0);
              return 0;
            }
          }
          context.removeHelper(OPEN_BLOCK);
          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));
          codegenNode.isBlock = false;
          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));
        }
        constantCache.set(node, returnType2);
        return returnType2;
      } else {
        constantCache.set(node, 0);
        return 0;
      }
    case 2:
    case 3:
      return 3;
    case 9:
    case 11:
    case 10:
      return 0;
    case 5:
    case 12:
      return getConstantType(node.content, context);
    case 4:
      return node.constType;
    case 8:
      let returnType = 3;
      for (let i = 0; i < node.children.length; i++) {
        const child = node.children[i];
        if (isString(child) || isSymbol(child)) {
          continue;
        }
        const childType = getConstantType(child, context);
        if (childType === 0) {
          return 0;
        } else if (childType < returnType) {
          returnType = childType;
        }
      }
      return returnType;
    default:
      if (true)
        ;
      return 0;
  }
}
function getConstantTypeOfHelperCall(value, context) {
  if (value.type === 14 && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {
    const arg = value.arguments[0];
    if (arg.type === 4) {
      return getConstantType(arg, context);
    } else if (arg.type === 14) {
      return getConstantTypeOfHelperCall(arg, context);
    }
  }
  return 0;
}
function getGeneratedPropsConstantType(node, context) {
  let returnType = 3;
  const props = getNodeProps(node);
  if (props && props.type === 15) {
    const { properties } = props;
    for (let i = 0; i < properties.length; i++) {
      const { key, value } = properties[i];
      const keyType = getConstantType(key, context);
      if (keyType === 0) {
        return keyType;
      }
      if (keyType < returnType) {
        returnType = keyType;
      }
      let valueType;
      if (value.type === 4) {
        valueType = getConstantType(value, context);
      } else if (value.type === 14) {
        valueType = getConstantTypeOfHelperCall(value, context);
      } else {
        valueType = 0;
      }
      if (valueType === 0) {
        return valueType;
      }
      if (valueType < returnType) {
        returnType = valueType;
      }
    }
  }
  return returnType;
}
function getNodeProps(node) {
  const codegenNode = node.codegenNode;
  if (codegenNode.type === 13) {
    return codegenNode.props;
  }
}
function getPatchFlag(node) {
  const flag = node.patchFlag;
  return flag ? parseInt(flag, 10) : void 0;
}
function createTransformContext(root, { filename = "", prefixIdentifiers = false, hoistStatic: hoistStatic2 = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {
  const nameMatch = filename.replace(/\?.*$/, "").match(/([^/\\]+)\.\w+$/);
  const context = {
    selfName: nameMatch && capitalize(camelize(nameMatch[1])),
    prefixIdentifiers,
    hoistStatic: hoistStatic2,
    cacheHandlers,
    nodeTransforms,
    directiveTransforms,
    transformHoist,
    isBuiltInComponent,
    isCustomElement,
    expressionPlugins,
    scopeId,
    slotted,
    ssr,
    inSSR,
    ssrCssVars,
    bindingMetadata,
    inline,
    isTS,
    onError,
    onWarn,
    compatConfig,
    root,
    helpers: /* @__PURE__ */ new Map(),
    components: /* @__PURE__ */ new Set(),
    directives: /* @__PURE__ */ new Set(),
    hoists: [],
    imports: [],
    constantCache: /* @__PURE__ */ new Map(),
    temps: 0,
    cached: 0,
    identifiers: /* @__PURE__ */ Object.create(null),
    scopes: {
      vFor: 0,
      vSlot: 0,
      vPre: 0,
      vOnce: 0
    },
    parent: null,
    currentNode: root,
    childIndex: 0,
    inVOnce: false,
    helper(name) {
      const count = context.helpers.get(name) || 0;
      context.helpers.set(name, count + 1);
      return name;
    },
    removeHelper(name) {
      const count = context.helpers.get(name);
      if (count) {
        const currentCount = count - 1;
        if (!currentCount) {
          context.helpers.delete(name);
        } else {
          context.helpers.set(name, currentCount);
        }
      }
    },
    helperString(name) {
      return `_${helperNameMap[context.helper(name)]}`;
    },
    replaceNode(node) {
      if (true) {
        if (!context.currentNode) {
          throw new Error(`Node being replaced is already removed.`);
        }
        if (!context.parent) {
          throw new Error(`Cannot replace root node.`);
        }
      }
      context.parent.children[context.childIndex] = context.currentNode = node;
    },
    removeNode(node) {
      if (!context.parent) {
        throw new Error(`Cannot remove root node.`);
      }
      const list = context.parent.children;
      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;
      if (removalIndex < 0) {
        throw new Error(`node being removed is not a child of current parent`);
      }
      if (!node || node === context.currentNode) {
        context.currentNode = null;
        context.onNodeRemoved();
      } else {
        if (context.childIndex > removalIndex) {
          context.childIndex--;
          context.onNodeRemoved();
        }
      }
      context.parent.children.splice(removalIndex, 1);
    },
    onNodeRemoved: () => {
    },
    addIdentifiers(exp) {
    },
    removeIdentifiers(exp) {
    },
    hoist(exp) {
      if (isString(exp))
        exp = createSimpleExpression(exp);
      context.hoists.push(exp);
      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2);
      identifier.hoisted = exp;
      return identifier;
    },
    cache(exp, isVNode = false) {
      return createCacheExpression(context.cached++, exp, isVNode);
    }
  };
  {
    context.filters = /* @__PURE__ */ new Set();
  }
  return context;
}
function transform(root, options) {
  const context = createTransformContext(root, options);
  traverseNode(root, context);
  if (options.hoistStatic) {
    hoistStatic(root, context);
  }
  if (!options.ssr) {
    createRootCodegen(root, context);
  }
  root.helpers = [...context.helpers.keys()];
  root.components = [...context.components];
  root.directives = [...context.directives];
  root.imports = context.imports;
  root.hoists = context.hoists;
  root.temps = context.temps;
  root.cached = context.cached;
  {
    root.filters = [...context.filters];
  }
}
function createRootCodegen(root, context) {
  const { helper } = context;
  const { children } = root;
  if (children.length === 1) {
    const child = children[0];
    if (isSingleElementRoot(root, child) && child.codegenNode) {
      const codegenNode = child.codegenNode;
      if (codegenNode.type === 13) {
        makeBlock(codegenNode, context);
      }
      root.codegenNode = codegenNode;
    } else {
      root.codegenNode = child;
    }
  } else if (children.length > 1) {
    let patchFlag = 64;
    let patchFlagText = PatchFlagNames[64];
    if (children.filter((c) => c.type !== 3).length === 1) {
      patchFlag |= 2048;
      patchFlagText += `, ${PatchFlagNames[2048]}`;
    }
    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, root.children, patchFlag + (true ? ` /* ${patchFlagText} */` : ``), void 0, void 0, true, void 0, false);
  } else
    ;
}
function traverseChildren(parent, context) {
  let i = 0;
  const nodeRemoved = () => {
    i--;
  };
  for (; i < parent.children.length; i++) {
    const child = parent.children[i];
    if (isString(child))
      continue;
    context.parent = parent;
    context.childIndex = i;
    context.onNodeRemoved = nodeRemoved;
    traverseNode(child, context);
  }
}
function traverseNode(node, context) {
  context.currentNode = node;
  const { nodeTransforms } = context;
  const exitFns = [];
  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {
    const onExit = nodeTransforms[i2](node, context);
    if (onExit) {
      if (isArray(onExit)) {
        exitFns.push(...onExit);
      } else {
        exitFns.push(onExit);
      }
    }
    if (!context.currentNode) {
      return;
    } else {
      node = context.currentNode;
    }
  }
  switch (node.type) {
    case 3:
      if (!context.ssr) {
        context.helper(CREATE_COMMENT);
      }
      break;
    case 5:
      if (!context.ssr) {
        context.helper(TO_DISPLAY_STRING);
      }
      break;
    case 9:
      for (let i2 = 0; i2 < node.branches.length; i2++) {
        traverseNode(node.branches[i2], context);
      }
      break;
    case 10:
    case 11:
    case 1:
    case 0:
      traverseChildren(node, context);
      break;
  }
  context.currentNode = node;
  let i = exitFns.length;
  while (i--) {
    exitFns[i]();
  }
}
function createStructuralDirectiveTransform(name, fn) {
  const matches = isString(name) ? (n) => n === name : (n) => name.test(n);
  return (node, context) => {
    if (node.type === 1) {
      const { props } = node;
      if (node.tagType === 3 && props.some(isVSlot)) {
        return;
      }
      const exitFns = [];
      for (let i = 0; i < props.length; i++) {
        const prop = props[i];
        if (prop.type === 7 && matches(prop.name)) {
          props.splice(i, 1);
          i--;
          const onExit = fn(node, prop, context);
          if (onExit)
            exitFns.push(onExit);
        }
      }
      return exitFns;
    }
  };
}
function createCodegenContext(ast, { mode = "function", prefixIdentifiers = mode === "module", sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = "vue/server-renderer", ssr = false, isTS = false, inSSR = false }) {
  const context = {
    mode,
    prefixIdentifiers,
    sourceMap,
    filename,
    scopeId,
    optimizeImports,
    runtimeGlobalName,
    runtimeModuleName,
    ssrRuntimeModuleName,
    ssr,
    isTS,
    inSSR,
    source: ast.loc.source,
    code: ``,
    column: 1,
    line: 1,
    offset: 0,
    indentLevel: 0,
    pure: false,
    map: void 0,
    helper(key) {
      return `_${helperNameMap[key]}`;
    },
    push(code, node) {
      context.code += code;
    },
    indent() {
      newline(++context.indentLevel);
    },
    deindent(withoutNewLine = false) {
      if (withoutNewLine) {
        --context.indentLevel;
      } else {
        newline(--context.indentLevel);
      }
    },
    newline() {
      newline(context.indentLevel);
    }
  };
  function newline(n) {
    context.push("\n" + `  `.repeat(n));
  }
  return context;
}
function generate(ast, options = {}) {
  const context = createCodegenContext(ast, options);
  if (options.onContextCreated)
    options.onContextCreated(context);
  const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;
  const hasHelpers = ast.helpers.length > 0;
  const useWithBlock = !prefixIdentifiers && mode !== "module";
  const preambleContext = context;
  {
    genFunctionPreamble(ast, preambleContext);
  }
  const functionName = ssr ? `ssrRender` : `render`;
  const args = ssr ? ["_ctx", "_push", "_parent", "_attrs"] : ["_ctx", "_cache"];
  const signature = args.join(", ");
  {
    push(`function ${functionName}(${signature}) {`);
  }
  indent();
  if (useWithBlock) {
    push(`with (_ctx) {`);
    indent();
    if (hasHelpers) {
      push(`const { ${ast.helpers.map(aliasHelper).join(", ")} } = _Vue`);
      push(`
`);
      newline();
    }
  }
  if (ast.components.length) {
    genAssets(ast.components, "component", context);
    if (ast.directives.length || ast.temps > 0) {
      newline();
    }
  }
  if (ast.directives.length) {
    genAssets(ast.directives, "directive", context);
    if (ast.temps > 0) {
      newline();
    }
  }
  if (ast.filters && ast.filters.length) {
    newline();
    genAssets(ast.filters, "filter", context);
    newline();
  }
  if (ast.temps > 0) {
    push(`let `);
    for (let i = 0; i < ast.temps; i++) {
      push(`${i > 0 ? `, ` : ``}_temp${i}`);
    }
  }
  if (ast.components.length || ast.directives.length || ast.temps) {
    push(`
`);
    newline();
  }
  if (!ssr) {
    push(`return `);
  }
  if (ast.codegenNode) {
    genNode(ast.codegenNode, context);
  } else {
    push(`null`);
  }
  if (useWithBlock) {
    deindent();
    push(`}`);
  }
  deindent();
  push(`}`);
  return {
    ast,
    code: context.code,
    preamble: ``,
    map: context.map ? context.map.toJSON() : void 0
  };
}
function genFunctionPreamble(ast, context) {
  const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;
  const VueBinding = runtimeGlobalName;
  if (ast.helpers.length > 0) {
    {
      push(`const _Vue = ${VueBinding}
`);
      if (ast.hoists.length) {
        const staticHelpers = [
          CREATE_VNODE,
          CREATE_ELEMENT_VNODE,
          CREATE_COMMENT,
          CREATE_TEXT,
          CREATE_STATIC
        ].filter((helper) => ast.helpers.includes(helper)).map(aliasHelper).join(", ");
        push(`const { ${staticHelpers} } = _Vue
`);
      }
    }
  }
  genHoists(ast.hoists, context);
  newline();
  push(`return `);
}
function genAssets(assets, type, { helper, push, newline, isTS }) {
  const resolver = helper(type === "filter" ? RESOLVE_FILTER : type === "component" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);
  for (let i = 0; i < assets.length; i++) {
    let id = assets[i];
    const maybeSelfReference = id.endsWith("__self");
    if (maybeSelfReference) {
      id = id.slice(0, -6);
    }
    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);
    if (i < assets.length - 1) {
      newline();
    }
  }
}
function genHoists(hoists, context) {
  if (!hoists.length) {
    return;
  }
  context.pure = true;
  const { push, newline, helper, scopeId, mode } = context;
  newline();
  for (let i = 0; i < hoists.length; i++) {
    const exp = hoists[i];
    if (exp) {
      push(`const _hoisted_${i + 1} = ${``}`);
      genNode(exp, context);
      newline();
    }
  }
  context.pure = false;
}
function isText$1(n) {
  return isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;
}
function genNodeListAsArray(nodes, context) {
  const multilines = nodes.length > 3 || nodes.some((n) => isArray(n) || !isText$1(n));
  context.push(`[`);
  multilines && context.indent();
  genNodeList(nodes, context, multilines);
  multilines && context.deindent();
  context.push(`]`);
}
function genNodeList(nodes, context, multilines = false, comma = true) {
  const { push, newline } = context;
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (isString(node)) {
      push(node);
    } else if (isArray(node)) {
      genNodeListAsArray(node, context);
    } else {
      genNode(node, context);
    }
    if (i < nodes.length - 1) {
      if (multilines) {
        comma && push(",");
        newline();
      } else {
        comma && push(", ");
      }
    }
  }
}
function genNode(node, context) {
  if (isString(node)) {
    context.push(node);
    return;
  }
  if (isSymbol(node)) {
    context.push(context.helper(node));
    return;
  }
  switch (node.type) {
    case 1:
    case 9:
    case 11:
      assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`);
      genNode(node.codegenNode, context);
      break;
    case 2:
      genText(node, context);
      break;
    case 4:
      genExpression(node, context);
      break;
    case 5:
      genInterpolation(node, context);
      break;
    case 12:
      genNode(node.codegenNode, context);
      break;
    case 8:
      genCompoundExpression(node, context);
      break;
    case 3:
      genComment(node, context);
      break;
    case 13:
      genVNodeCall(node, context);
      break;
    case 14:
      genCallExpression(node, context);
      break;
    case 15:
      genObjectExpression(node, context);
      break;
    case 17:
      genArrayExpression(node, context);
      break;
    case 18:
      genFunctionExpression(node, context);
      break;
    case 19:
      genConditionalExpression(node, context);
      break;
    case 20:
      genCacheExpression(node, context);
      break;
    case 21:
      genNodeList(node.body, context, true, false);
      break;
    case 22:
      break;
    case 23:
      break;
    case 24:
      break;
    case 25:
      break;
    case 26:
      break;
    case 10:
      break;
    default:
      if (true) {
        assert(false, `unhandled codegen node type: ${node.type}`);
        const exhaustiveCheck = node;
        return exhaustiveCheck;
      }
  }
}
function genText(node, context) {
  context.push(JSON.stringify(node.content), node);
}
function genExpression(node, context) {
  const { content, isStatic } = node;
  context.push(isStatic ? JSON.stringify(content) : content, node);
}
function genInterpolation(node, context) {
  const { push, helper, pure } = context;
  if (pure)
    push(PURE_ANNOTATION);
  push(`${helper(TO_DISPLAY_STRING)}(`);
  genNode(node.content, context);
  push(`)`);
}
function genCompoundExpression(node, context) {
  for (let i = 0; i < node.children.length; i++) {
    const child = node.children[i];
    if (isString(child)) {
      context.push(child);
    } else {
      genNode(child, context);
    }
  }
}
function genExpressionAsPropertyKey(node, context) {
  const { push } = context;
  if (node.type === 8) {
    push(`[`);
    genCompoundExpression(node, context);
    push(`]`);
  } else if (node.isStatic) {
    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);
    push(text, node);
  } else {
    push(`[${node.content}]`, node);
  }
}
function genComment(node, context) {
  const { push, helper, pure } = context;
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);
}
function genVNodeCall(node, context) {
  const { push, helper, pure } = context;
  const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent: isComponent2 } = node;
  if (directives) {
    push(helper(WITH_DIRECTIVES) + `(`);
  }
  if (isBlock) {
    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);
  }
  if (pure) {
    push(PURE_ANNOTATION);
  }
  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent2) : getVNodeHelper(context.inSSR, isComponent2);
  push(helper(callHelper) + `(`, node);
  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);
  push(`)`);
  if (isBlock) {
    push(`)`);
  }
  if (directives) {
    push(`, `);
    genNode(directives, context);
    push(`)`);
  }
}
function genNullableArgs(args) {
  let i = args.length;
  while (i--) {
    if (args[i] != null)
      break;
  }
  return args.slice(0, i + 1).map((arg) => arg || `null`);
}
function genCallExpression(node, context) {
  const { push, helper, pure } = context;
  const callee = isString(node.callee) ? node.callee : helper(node.callee);
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(callee + `(`, node);
  genNodeList(node.arguments, context);
  push(`)`);
}
function genObjectExpression(node, context) {
  const { push, indent, deindent, newline } = context;
  const { properties } = node;
  if (!properties.length) {
    push(`{}`, node);
    return;
  }
  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);
  push(multilines ? `{` : `{ `);
  multilines && indent();
  for (let i = 0; i < properties.length; i++) {
    const { key, value } = properties[i];
    genExpressionAsPropertyKey(key, context);
    push(`: `);
    genNode(value, context);
    if (i < properties.length - 1) {
      push(`,`);
      newline();
    }
  }
  multilines && deindent();
  push(multilines ? `}` : ` }`);
}
function genArrayExpression(node, context) {
  genNodeListAsArray(node.elements, context);
}
function genFunctionExpression(node, context) {
  const { push, indent, deindent } = context;
  const { params, returns, body, newline, isSlot } = node;
  if (isSlot) {
    push(`_${helperNameMap[WITH_CTX]}(`);
  }
  push(`(`, node);
  if (isArray(params)) {
    genNodeList(params, context);
  } else if (params) {
    genNode(params, context);
  }
  push(`) => `);
  if (newline || body) {
    push(`{`);
    indent();
  }
  if (returns) {
    if (newline) {
      push(`return `);
    }
    if (isArray(returns)) {
      genNodeListAsArray(returns, context);
    } else {
      genNode(returns, context);
    }
  } else if (body) {
    genNode(body, context);
  }
  if (newline || body) {
    deindent();
    push(`}`);
  }
  if (isSlot) {
    if (node.isNonScopedSlot) {
      push(`, undefined, true`);
    }
    push(`)`);
  }
}
function genConditionalExpression(node, context) {
  const { test, consequent, alternate, newline: needNewline } = node;
  const { push, indent, deindent, newline } = context;
  if (test.type === 4) {
    const needsParens = !isSimpleIdentifier(test.content);
    needsParens && push(`(`);
    genExpression(test, context);
    needsParens && push(`)`);
  } else {
    push(`(`);
    genNode(test, context);
    push(`)`);
  }
  needNewline && indent();
  context.indentLevel++;
  needNewline || push(` `);
  push(`? `);
  genNode(consequent, context);
  context.indentLevel--;
  needNewline && newline();
  needNewline || push(` `);
  push(`: `);
  const isNested = alternate.type === 19;
  if (!isNested) {
    context.indentLevel++;
  }
  genNode(alternate, context);
  if (!isNested) {
    context.indentLevel--;
  }
  needNewline && deindent(true);
}
function genCacheExpression(node, context) {
  const { push, helper, indent, deindent, newline } = context;
  push(`_cache[${node.index}] || (`);
  if (node.isVNode) {
    indent();
    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);
    newline();
  }
  push(`_cache[${node.index}] = `);
  genNode(node.value, context);
  if (node.isVNode) {
    push(`,`);
    newline();
    push(`${helper(SET_BLOCK_TRACKING)}(1),`);
    newline();
    push(`_cache[${node.index}]`);
    deindent();
  }
  push(`)`);
}
function walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {
  {
    return;
  }
}
function isReferencedIdentifier(id, parent, parentStack) {
  {
    return false;
  }
}
function isInDestructureAssignment(parent, parentStack) {
  if (parent && (parent.type === "ObjectProperty" || parent.type === "ArrayPattern")) {
    let i = parentStack.length;
    while (i--) {
      const p = parentStack[i];
      if (p.type === "AssignmentExpression") {
        return true;
      } else if (p.type !== "ObjectProperty" && !p.type.endsWith("Pattern")) {
        break;
      }
    }
  }
  return false;
}
function walkFunctionParams(node, onIdent) {
  for (const p of node.params) {
    for (const id of extractIdentifiers(p)) {
      onIdent(id);
    }
  }
}
function walkBlockDeclarations(block, onIdent) {
  for (const stmt of block.body) {
    if (stmt.type === "VariableDeclaration") {
      if (stmt.declare)
        continue;
      for (const decl of stmt.declarations) {
        for (const id of extractIdentifiers(decl.id)) {
          onIdent(id);
        }
      }
    } else if (stmt.type === "FunctionDeclaration" || stmt.type === "ClassDeclaration") {
      if (stmt.declare || !stmt.id)
        continue;
      onIdent(stmt.id);
    }
  }
}
function extractIdentifiers(param, nodes = []) {
  switch (param.type) {
    case "Identifier":
      nodes.push(param);
      break;
    case "MemberExpression":
      let object = param;
      while (object.type === "MemberExpression") {
        object = object.object;
      }
      nodes.push(object);
      break;
    case "ObjectPattern":
      for (const prop of param.properties) {
        if (prop.type === "RestElement") {
          extractIdentifiers(prop.argument, nodes);
        } else {
          extractIdentifiers(prop.value, nodes);
        }
      }
      break;
    case "ArrayPattern":
      param.elements.forEach((element) => {
        if (element)
          extractIdentifiers(element, nodes);
      });
      break;
    case "RestElement":
      extractIdentifiers(param.argument, nodes);
      break;
    case "AssignmentPattern":
      extractIdentifiers(param.left, nodes);
      break;
  }
  return nodes;
}
function validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {
  const exp = node.content;
  if (!exp.trim()) {
    return;
  }
  try {
    new Function(asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);
  } catch (e) {
    let message = e.message;
    const keywordMatch = exp.replace(stripStringRE, "").match(prohibitedKeywordRE);
    if (keywordMatch) {
      message = `avoid using JavaScript keyword as property name: "${keywordMatch[0]}"`;
    }
    context.onError(createCompilerError(45, node.loc, void 0, message));
  }
}
function processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {
  {
    if (true) {
      validateBrowserExpression(node, context, asParams, asRawStatements);
    }
    return node;
  }
}
function stringifyExpression(exp) {
  if (isString(exp)) {
    return exp;
  } else if (exp.type === 4) {
    return exp.content;
  } else {
    return exp.children.map(stringifyExpression).join("");
  }
}
function processIf(node, dir, context, processCodegen) {
  if (dir.name !== "else" && (!dir.exp || !dir.exp.content.trim())) {
    const loc = dir.exp ? dir.exp.loc : node.loc;
    context.onError(createCompilerError(28, dir.loc));
    dir.exp = createSimpleExpression(`true`, false, loc);
  }
  if (dir.exp) {
    validateBrowserExpression(dir.exp, context);
  }
  if (dir.name === "if") {
    const branch = createIfBranch(node, dir);
    const ifNode = {
      type: 9,
      loc: node.loc,
      branches: [branch]
    };
    context.replaceNode(ifNode);
    if (processCodegen) {
      return processCodegen(ifNode, branch, true);
    }
  } else {
    const siblings = context.parent.children;
    const comments = [];
    let i = siblings.indexOf(node);
    while (i-- >= -1) {
      const sibling = siblings[i];
      if (sibling && sibling.type === 3) {
        context.removeNode(sibling);
        comments.unshift(sibling);
        continue;
      }
      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {
        context.removeNode(sibling);
        continue;
      }
      if (sibling && sibling.type === 9) {
        if (dir.name === "else-if" && sibling.branches[sibling.branches.length - 1].condition === void 0) {
          context.onError(createCompilerError(30, node.loc));
        }
        context.removeNode();
        const branch = createIfBranch(node, dir);
        if (comments.length && !(context.parent && context.parent.type === 1 && isBuiltInType(context.parent.tag, "transition"))) {
          branch.children = [...comments, ...branch.children];
        }
        if (true) {
          const key = branch.userKey;
          if (key) {
            sibling.branches.forEach(({ userKey }) => {
              if (isSameKey(userKey, key)) {
                context.onError(createCompilerError(29, branch.userKey.loc));
              }
            });
          }
        }
        sibling.branches.push(branch);
        const onExit = processCodegen && processCodegen(sibling, branch, false);
        traverseNode(branch, context);
        if (onExit)
          onExit();
        context.currentNode = null;
      } else {
        context.onError(createCompilerError(30, node.loc));
      }
      break;
    }
  }
}
function createIfBranch(node, dir) {
  const isTemplateIf = node.tagType === 3;
  return {
    type: 10,
    loc: node.loc,
    condition: dir.name === "else" ? void 0 : dir.exp,
    children: isTemplateIf && !findDir(node, "for") ? node.children : [node],
    userKey: findProp(node, `key`),
    isTemplateIf
  };
}
function createCodegenNodeForBranch(branch, keyIndex, context) {
  if (branch.condition) {
    return createConditionalExpression(
      branch.condition,
      createChildrenCodegenNode(branch, keyIndex, context),
      createCallExpression(context.helper(CREATE_COMMENT), [
        true ? '"v-if"' : '""',
        "true"
      ])
    );
  } else {
    return createChildrenCodegenNode(branch, keyIndex, context);
  }
}
function createChildrenCodegenNode(branch, keyIndex, context) {
  const { helper } = context;
  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2));
  const { children } = branch;
  const firstChild = children[0];
  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;
  if (needFragmentWrapper) {
    if (children.length === 1 && firstChild.type === 11) {
      const vnodeCall = firstChild.codegenNode;
      injectProp(vnodeCall, keyProperty, context);
      return vnodeCall;
    } else {
      let patchFlag = 64;
      let patchFlagText = PatchFlagNames[64];
      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {
        patchFlag |= 2048;
        patchFlagText += `, ${PatchFlagNames[2048]}`;
      }
      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (true ? ` /* ${patchFlagText} */` : ``), void 0, void 0, true, false, false, branch.loc);
    }
  } else {
    const ret = firstChild.codegenNode;
    const vnodeCall = getMemoedVNodeCall(ret);
    if (vnodeCall.type === 13) {
      makeBlock(vnodeCall, context);
    }
    injectProp(vnodeCall, keyProperty, context);
    return ret;
  }
}
function isSameKey(a, b) {
  if (!a || a.type !== b.type) {
    return false;
  }
  if (a.type === 6) {
    if (a.value.content !== b.value.content) {
      return false;
    }
  } else {
    const exp = a.exp;
    const branchExp = b.exp;
    if (exp.type !== branchExp.type) {
      return false;
    }
    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {
      return false;
    }
  }
  return true;
}
function getParentCondition(node) {
  while (true) {
    if (node.type === 19) {
      if (node.alternate.type === 19) {
        node = node.alternate;
      } else {
        return node;
      }
    } else if (node.type === 20) {
      node = node.value;
    }
  }
}
function processFor(node, dir, context, processCodegen) {
  if (!dir.exp) {
    context.onError(createCompilerError(31, dir.loc));
    return;
  }
  const parseResult = parseForExpression(
    dir.exp,
    context
  );
  if (!parseResult) {
    context.onError(createCompilerError(32, dir.loc));
    return;
  }
  const { addIdentifiers, removeIdentifiers, scopes } = context;
  const { source, value, key, index } = parseResult;
  const forNode = {
    type: 11,
    loc: dir.loc,
    source,
    valueAlias: value,
    keyAlias: key,
    objectIndexAlias: index,
    parseResult,
    children: isTemplateNode(node) ? node.children : [node]
  };
  context.replaceNode(forNode);
  scopes.vFor++;
  const onExit = processCodegen && processCodegen(forNode);
  return () => {
    scopes.vFor--;
    if (onExit)
      onExit();
  };
}
function parseForExpression(input, context) {
  const loc = input.loc;
  const exp = input.content;
  const inMatch = exp.match(forAliasRE);
  if (!inMatch)
    return;
  const [, LHS, RHS] = inMatch;
  const result = {
    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),
    value: void 0,
    key: void 0,
    index: void 0
  };
  if (true) {
    validateBrowserExpression(result.source, context);
  }
  let valueContent = LHS.trim().replace(stripParensRE, "").trim();
  const trimmedOffset = LHS.indexOf(valueContent);
  const iteratorMatch = valueContent.match(forIteratorRE);
  if (iteratorMatch) {
    valueContent = valueContent.replace(forIteratorRE, "").trim();
    const keyContent = iteratorMatch[1].trim();
    let keyOffset;
    if (keyContent) {
      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);
      result.key = createAliasExpression(loc, keyContent, keyOffset);
      if (true) {
        validateBrowserExpression(result.key, context, true);
      }
    }
    if (iteratorMatch[2]) {
      const indexContent = iteratorMatch[2].trim();
      if (indexContent) {
        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));
        if (true) {
          validateBrowserExpression(result.index, context, true);
        }
      }
    }
  }
  if (valueContent) {
    result.value = createAliasExpression(loc, valueContent, trimmedOffset);
    if (true) {
      validateBrowserExpression(result.value, context, true);
    }
  }
  return result;
}
function createAliasExpression(range, content, offset) {
  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));
}
function createForLoopParams({ value, key, index }, memoArgs = []) {
  return createParamsList([value, key, index, ...memoArgs]);
}
function createParamsList(args) {
  let i = args.length;
  while (i--) {
    if (args[i])
      break;
  }
  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));
}
function buildSlots(node, context, buildSlotFn = buildClientSlotFn) {
  context.helper(WITH_CTX);
  const { children, loc } = node;
  const slotsProperties = [];
  const dynamicSlots = [];
  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;
  const onComponentSlot = findDir(node, "slot", true);
  if (onComponentSlot) {
    const { arg, exp } = onComponentSlot;
    if (arg && !isStaticExp(arg)) {
      hasDynamicSlots = true;
    }
    slotsProperties.push(createObjectProperty(arg || createSimpleExpression("default", true), buildSlotFn(exp, children, loc)));
  }
  let hasTemplateSlots = false;
  let hasNamedDefaultSlot = false;
  const implicitDefaultChildren = [];
  const seenSlotNames = /* @__PURE__ */ new Set();
  let conditionalBranchIndex = 0;
  for (let i = 0; i < children.length; i++) {
    const slotElement = children[i];
    let slotDir;
    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, "slot", true))) {
      if (slotElement.type !== 3) {
        implicitDefaultChildren.push(slotElement);
      }
      continue;
    }
    if (onComponentSlot) {
      context.onError(createCompilerError(37, slotDir.loc));
      break;
    }
    hasTemplateSlots = true;
    const { children: slotChildren, loc: slotLoc } = slotElement;
    const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;
    let staticSlotName;
    if (isStaticExp(slotName)) {
      staticSlotName = slotName ? slotName.content : `default`;
    } else {
      hasDynamicSlots = true;
    }
    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);
    let vIf;
    let vElse;
    let vFor;
    if (vIf = findDir(slotElement, "if")) {
      hasDynamicSlots = true;
      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));
    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true)) {
      let j = i;
      let prev;
      while (j--) {
        prev = children[j];
        if (prev.type !== 3) {
          break;
        }
      }
      if (prev && isTemplateNode(prev) && findDir(prev, "if")) {
        children.splice(i, 1);
        i--;
        let conditional = dynamicSlots[dynamicSlots.length - 1];
        while (conditional.alternate.type === 19) {
          conditional = conditional.alternate;
        }
        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);
      } else {
        context.onError(createCompilerError(30, vElse.loc));
      }
    } else if (vFor = findDir(slotElement, "for")) {
      hasDynamicSlots = true;
      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);
      if (parseResult) {
        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [
          parseResult.source,
          createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true)
        ]));
      } else {
        context.onError(createCompilerError(32, vFor.loc));
      }
    } else {
      if (staticSlotName) {
        if (seenSlotNames.has(staticSlotName)) {
          context.onError(createCompilerError(38, dirLoc));
          continue;
        }
        seenSlotNames.add(staticSlotName);
        if (staticSlotName === "default") {
          hasNamedDefaultSlot = true;
        }
      }
      slotsProperties.push(createObjectProperty(slotName, slotFunction));
    }
  }
  if (!onComponentSlot) {
    const buildDefaultSlotProperty = (props, children2) => {
      const fn = buildSlotFn(props, children2, loc);
      if (context.compatConfig) {
        fn.isNonScopedSlot = true;
      }
      return createObjectProperty(`default`, fn);
    };
    if (!hasTemplateSlots) {
      slotsProperties.push(buildDefaultSlotProperty(void 0, children));
    } else if (implicitDefaultChildren.length && implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {
      if (hasNamedDefaultSlot) {
        context.onError(createCompilerError(39, implicitDefaultChildren[0].loc));
      } else {
        slotsProperties.push(buildDefaultSlotProperty(void 0, implicitDefaultChildren));
      }
    }
  }
  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;
  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(
    `_`,
    createSimpleExpression(slotFlag + (true ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false)
  )), loc);
  if (dynamicSlots.length) {
    slots = createCallExpression(context.helper(CREATE_SLOTS), [
      slots,
      createArrayExpression(dynamicSlots)
    ]);
  }
  return {
    slots,
    hasDynamicSlots
  };
}
function buildDynamicSlot(name, fn, index) {
  const props = [
    createObjectProperty(`name`, name),
    createObjectProperty(`fn`, fn)
  ];
  if (index != null) {
    props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));
  }
  return createObjectExpression(props);
}
function hasForwardedSlots(children) {
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    switch (child.type) {
      case 1:
        if (child.tagType === 2 || hasForwardedSlots(child.children)) {
          return true;
        }
        break;
      case 9:
        if (hasForwardedSlots(child.branches))
          return true;
        break;
      case 10:
      case 11:
        if (hasForwardedSlots(child.children))
          return true;
        break;
    }
  }
  return false;
}
function isNonWhitespaceContent(node) {
  if (node.type !== 2 && node.type !== 12)
    return true;
  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);
}
function resolveComponentType(node, context, ssr = false) {
  let { tag } = node;
  const isExplicitDynamic = isComponentTag(tag);
  const isProp = findProp(node, "is");
  if (isProp) {
    if (isExplicitDynamic || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context)) {
      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;
      if (exp) {
        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
          exp
        ]);
      }
    } else if (isProp.type === 6 && isProp.value.content.startsWith("vue:")) {
      tag = isProp.value.content.slice(4);
    }
  }
  const isDir = !isExplicitDynamic && findDir(node, "is");
  if (isDir && isDir.exp) {
    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
      isDir.exp
    ]);
  }
  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);
  if (builtIn) {
    if (!ssr)
      context.helper(builtIn);
    return builtIn;
  }
  context.helper(RESOLVE_COMPONENT);
  context.components.add(tag);
  return toValidAssetId(tag, `component`);
}
function buildProps(node, context, props = node.props, isComponent2, isDynamicComponent, ssr = false) {
  const { tag, loc: elementLoc, children } = node;
  let properties = [];
  const mergeArgs = [];
  const runtimeDirectives = [];
  const hasChildren = children.length > 0;
  let shouldUseBlock = false;
  let patchFlag = 0;
  let hasRef = false;
  let hasClassBinding = false;
  let hasStyleBinding = false;
  let hasHydrationEventBinding = false;
  let hasDynamicKeys = false;
  let hasVnodeHook = false;
  const dynamicPropNames = [];
  const pushMergeArg = (arg) => {
    if (properties.length) {
      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));
      properties = [];
    }
    if (arg)
      mergeArgs.push(arg);
  };
  const analyzePatchFlag = ({ key, value }) => {
    if (isStaticExp(key)) {
      const name = key.content;
      const isEventHandler = isOn(name);
      if (isEventHandler && (!isComponent2 || isDynamicComponent) && name.toLowerCase() !== "onclick" && name !== "onUpdate:modelValue" && !isReservedProp(name)) {
        hasHydrationEventBinding = true;
      }
      if (isEventHandler && isReservedProp(name)) {
        hasVnodeHook = true;
      }
      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {
        return;
      }
      if (name === "ref") {
        hasRef = true;
      } else if (name === "class") {
        hasClassBinding = true;
      } else if (name === "style") {
        hasStyleBinding = true;
      } else if (name !== "key" && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
      if (isComponent2 && (name === "class" || name === "style") && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
    } else {
      hasDynamicKeys = true;
    }
  };
  for (let i = 0; i < props.length; i++) {
    const prop = props[i];
    if (prop.type === 6) {
      const { loc, name, value } = prop;
      let isStatic = true;
      if (name === "ref") {
        hasRef = true;
        if (context.scopes.vFor > 0) {
          properties.push(createObjectProperty(createSimpleExpression("ref_for", true), createSimpleExpression("true")));
        }
      }
      if (name === "is" && (isComponentTag(tag) || value && value.content.startsWith("vue:") || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context))) {
        continue;
      }
      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : "", isStatic, value ? value.loc : loc)));
    } else {
      const { name, arg, exp, loc } = prop;
      const isVBind = name === "bind";
      const isVOn = name === "on";
      if (name === "slot") {
        if (!isComponent2) {
          context.onError(createCompilerError(40, loc));
        }
        continue;
      }
      if (name === "once" || name === "memo") {
        continue;
      }
      if (name === "is" || isVBind && isStaticArgOf(arg, "is") && (isComponentTag(tag) || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context))) {
        continue;
      }
      if (isVOn && ssr) {
        continue;
      }
      if (isVBind && isStaticArgOf(arg, "key") || isVOn && hasChildren && isStaticArgOf(arg, "vue:before-update")) {
        shouldUseBlock = true;
      }
      if (isVBind && isStaticArgOf(arg, "ref") && context.scopes.vFor > 0) {
        properties.push(createObjectProperty(createSimpleExpression("ref_for", true), createSimpleExpression("true")));
      }
      if (!arg && (isVBind || isVOn)) {
        hasDynamicKeys = true;
        if (exp) {
          if (isVBind) {
            pushMergeArg();
            {
              if (true) {
                const hasOverridableKeys = mergeArgs.some((arg2) => {
                  if (arg2.type === 15) {
                    return arg2.properties.some(({ key }) => {
                      if (key.type !== 4 || !key.isStatic) {
                        return true;
                      }
                      return key.content !== "class" && key.content !== "style" && !isOn(key.content);
                    });
                  } else {
                    return true;
                  }
                });
                if (hasOverridableKeys) {
                  checkCompatEnabled("COMPILER_V_BIND_OBJECT_ORDER", context, loc);
                }
              }
              if (isCompatEnabled("COMPILER_V_BIND_OBJECT_ORDER", context)) {
                mergeArgs.unshift(exp);
                continue;
              }
            }
            mergeArgs.push(exp);
          } else {
            pushMergeArg({
              type: 14,
              loc,
              callee: context.helper(TO_HANDLERS),
              arguments: isComponent2 ? [exp] : [exp, `true`]
            });
          }
        } else {
          context.onError(createCompilerError(isVBind ? 34 : 35, loc));
        }
        continue;
      }
      const directiveTransform = context.directiveTransforms[name];
      if (directiveTransform) {
        const { props: props2, needRuntime } = directiveTransform(prop, node, context);
        !ssr && props2.forEach(analyzePatchFlag);
        if (isVOn && arg && !isStaticExp(arg)) {
          pushMergeArg(createObjectExpression(props2, elementLoc));
        } else {
          properties.push(...props2);
        }
        if (needRuntime) {
          runtimeDirectives.push(prop);
          if (isSymbol(needRuntime)) {
            directiveImportMap.set(prop, needRuntime);
          }
        }
      } else if (!isBuiltInDirective(name)) {
        runtimeDirectives.push(prop);
        if (hasChildren) {
          shouldUseBlock = true;
        }
      }
    }
  }
  let propsExpression = void 0;
  if (mergeArgs.length) {
    pushMergeArg();
    if (mergeArgs.length > 1) {
      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);
    } else {
      propsExpression = mergeArgs[0];
    }
  } else if (properties.length) {
    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);
  }
  if (hasDynamicKeys) {
    patchFlag |= 16;
  } else {
    if (hasClassBinding && !isComponent2) {
      patchFlag |= 2;
    }
    if (hasStyleBinding && !isComponent2) {
      patchFlag |= 4;
    }
    if (dynamicPropNames.length) {
      patchFlag |= 8;
    }
    if (hasHydrationEventBinding) {
      patchFlag |= 32;
    }
  }
  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {
    patchFlag |= 512;
  }
  if (!context.inSSR && propsExpression) {
    switch (propsExpression.type) {
      case 15:
        let classKeyIndex = -1;
        let styleKeyIndex = -1;
        let hasDynamicKey = false;
        for (let i = 0; i < propsExpression.properties.length; i++) {
          const key = propsExpression.properties[i].key;
          if (isStaticExp(key)) {
            if (key.content === "class") {
              classKeyIndex = i;
            } else if (key.content === "style") {
              styleKeyIndex = i;
            }
          } else if (!key.isHandlerKey) {
            hasDynamicKey = true;
          }
        }
        const classProp = propsExpression.properties[classKeyIndex];
        const styleProp = propsExpression.properties[styleKeyIndex];
        if (!hasDynamicKey) {
          if (classProp && !isStaticExp(classProp.value)) {
            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);
          }
          if (styleProp && (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || styleProp.value.type === 17)) {
            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);
          }
        } else {
          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);
        }
        break;
      case 14:
        break;
      default:
        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [
          createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [
            propsExpression
          ])
        ]);
        break;
    }
  }
  return {
    props: propsExpression,
    directives: runtimeDirectives,
    patchFlag,
    dynamicPropNames,
    shouldUseBlock
  };
}
function dedupeProperties(properties) {
  const knownProps = /* @__PURE__ */ new Map();
  const deduped = [];
  for (let i = 0; i < properties.length; i++) {
    const prop = properties[i];
    if (prop.key.type === 8 || !prop.key.isStatic) {
      deduped.push(prop);
      continue;
    }
    const name = prop.key.content;
    const existing = knownProps.get(name);
    if (existing) {
      if (name === "style" || name === "class" || isOn(name)) {
        mergeAsArray(existing, prop);
      }
    } else {
      knownProps.set(name, prop);
      deduped.push(prop);
    }
  }
  return deduped;
}
function mergeAsArray(existing, incoming) {
  if (existing.value.type === 17) {
    existing.value.elements.push(incoming.value);
  } else {
    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);
  }
}
function buildDirectiveArgs(dir, context) {
  const dirArgs = [];
  const runtime = directiveImportMap.get(dir);
  if (runtime) {
    dirArgs.push(context.helperString(runtime));
  } else {
    {
      context.helper(RESOLVE_DIRECTIVE);
      context.directives.add(dir.name);
      dirArgs.push(toValidAssetId(dir.name, `directive`));
    }
  }
  const { loc } = dir;
  if (dir.exp)
    dirArgs.push(dir.exp);
  if (dir.arg) {
    if (!dir.exp) {
      dirArgs.push(`void 0`);
    }
    dirArgs.push(dir.arg);
  }
  if (Object.keys(dir.modifiers).length) {
    if (!dir.arg) {
      if (!dir.exp) {
        dirArgs.push(`void 0`);
      }
      dirArgs.push(`void 0`);
    }
    const trueExpression = createSimpleExpression(`true`, false, loc);
    dirArgs.push(createObjectExpression(dir.modifiers.map((modifier) => createObjectProperty(modifier, trueExpression)), loc));
  }
  return createArrayExpression(dirArgs, dir.loc);
}
function stringifyDynamicPropNames(props) {
  let propsNamesString = `[`;
  for (let i = 0, l = props.length; i < l; i++) {
    propsNamesString += JSON.stringify(props[i]);
    if (i < l - 1)
      propsNamesString += ", ";
  }
  return propsNamesString + `]`;
}
function isComponentTag(tag) {
  return tag === "component" || tag === "Component";
}
function processSlotOutlet(node, context) {
  let slotName = `"default"`;
  let slotProps = void 0;
  const nonNameProps = [];
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 6) {
      if (p.value) {
        if (p.name === "name") {
          slotName = JSON.stringify(p.value.content);
        } else {
          p.name = camelize2(p.name);
          nonNameProps.push(p);
        }
      }
    } else {
      if (p.name === "bind" && isStaticArgOf(p.arg, "name")) {
        if (p.exp)
          slotName = p.exp;
      } else {
        if (p.name === "bind" && p.arg && isStaticExp(p.arg)) {
          p.arg.content = camelize2(p.arg.content);
        }
        nonNameProps.push(p);
      }
    }
  }
  if (nonNameProps.length > 0) {
    const { props, directives } = buildProps(node, context, nonNameProps, false, false);
    slotProps = props;
    if (directives.length) {
      context.onError(createCompilerError(36, directives[0].loc));
    }
  }
  return {
    slotName,
    slotProps
  };
}
function createTransformProps(props = []) {
  return { props };
}
function rewriteFilter(node, context) {
  if (node.type === 4) {
    parseFilter(node, context);
  } else {
    for (let i = 0; i < node.children.length; i++) {
      const child = node.children[i];
      if (typeof child !== "object")
        continue;
      if (child.type === 4) {
        parseFilter(child, context);
      } else if (child.type === 8) {
        rewriteFilter(node, context);
      } else if (child.type === 5) {
        rewriteFilter(child.content, context);
      }
    }
  }
}
function parseFilter(node, context) {
  const exp = node.content;
  let inSingle = false;
  let inDouble = false;
  let inTemplateString = false;
  let inRegex = false;
  let curly = 0;
  let square = 0;
  let paren = 0;
  let lastFilterIndex = 0;
  let c, prev, i, expression, filters = [];
  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 39 && prev !== 92)
        inSingle = false;
    } else if (inDouble) {
      if (c === 34 && prev !== 92)
        inDouble = false;
    } else if (inTemplateString) {
      if (c === 96 && prev !== 92)
        inTemplateString = false;
    } else if (inRegex) {
      if (c === 47 && prev !== 92)
        inRegex = false;
    } else if (c === 124 && exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {
      if (expression === void 0) {
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 34:
          inDouble = true;
          break;
        case 39:
          inSingle = true;
          break;
        case 96:
          inTemplateString = true;
          break;
        case 40:
          paren++;
          break;
        case 41:
          paren--;
          break;
        case 91:
          square++;
          break;
        case 93:
          square--;
          break;
        case 123:
          curly++;
          break;
        case 125:
          curly--;
          break;
      }
      if (c === 47) {
        let j = i - 1;
        let p;
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== " ")
            break;
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }
  if (expression === void 0) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }
  function pushFilter() {
    filters.push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }
  if (filters.length) {
    warnDeprecation("COMPILER_FILTER", context, node.loc);
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i], context);
    }
    node.content = expression;
  }
}
function wrapFilter(exp, filter, context) {
  context.helper(RESOLVE_FILTER);
  const i = filter.indexOf("(");
  if (i < 0) {
    context.filters.add(filter);
    return `${toValidAssetId(filter, "filter")}(${exp})`;
  } else {
    const name = filter.slice(0, i);
    const args = filter.slice(i + 1);
    context.filters.add(name);
    return `${toValidAssetId(name, "filter")}(${exp}${args !== ")" ? "," + args : args}`;
  }
}
function getBaseTransformPreset(prefixIdentifiers) {
  return [
    [
      transformOnce,
      transformIf,
      transformMemo,
      transformFor,
      ...[transformFilter],
      ...true ? [transformExpression] : [],
      transformSlotOutlet,
      transformElement,
      trackSlotScopes,
      transformText
    ],
    {
      on: transformOn,
      bind: transformBind,
      model: transformModel
    }
  ];
}
function baseCompile(template, options = {}) {
  const onError = options.onError || defaultOnError;
  const isModuleMode = options.mode === "module";
  {
    if (options.prefixIdentifiers === true) {
      onError(createCompilerError(47));
    } else if (isModuleMode) {
      onError(createCompilerError(48));
    }
  }
  const prefixIdentifiers = false;
  if (options.cacheHandlers) {
    onError(createCompilerError(49));
  }
  if (options.scopeId && !isModuleMode) {
    onError(createCompilerError(50));
  }
  const ast = isString(template) ? baseParse(template, options) : template;
  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();
  transform(ast, extend({}, options, {
    prefixIdentifiers,
    nodeTransforms: [
      ...nodeTransforms,
      ...options.nodeTransforms || []
    ],
    directiveTransforms: extend(
      {},
      directiveTransforms,
      options.directiveTransforms || {}
    )
  }));
  return generate(ast, extend({}, options, {
    prefixIdentifiers
  }));
}
var errorMessages, FRAGMENT, TELEPORT, SUSPENSE, KEEP_ALIVE, BASE_TRANSITION, OPEN_BLOCK, CREATE_BLOCK, CREATE_ELEMENT_BLOCK, CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC, RESOLVE_COMPONENT, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_FILTER, WITH_DIRECTIVES, RENDER_LIST, RENDER_SLOT, CREATE_SLOTS, TO_DISPLAY_STRING, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS, TO_HANDLERS, CAMELIZE, CAPITALIZE, TO_HANDLER_KEY, SET_BLOCK_TRACKING, PUSH_SCOPE_ID, POP_SCOPE_ID, WITH_CTX, UNREF, IS_REF, WITH_MEMO, IS_MEMO_SAME, helperNameMap, locStub, isStaticExp, isBuiltInType, nonIdentifierRE, isSimpleIdentifier, validFirstIdentCharRE, validIdentCharRE, whitespaceRE, isMemberExpressionBrowser, isMemberExpressionNode, isMemberExpression, propsHelperSet, deprecationData, decodeRE, decodeMap, defaultParserOptions, isSpecialTemplateDirective, allowHoistedHelperSet, PURE_ANNOTATION, aliasHelper, isFunctionType, isStaticProperty, isStaticPropertyKey, prohibitedKeywordRE, stripStringRE, transformExpression, transformIf, transformFor, forAliasRE, forIteratorRE, stripParensRE, defaultFallback, trackSlotScopes, trackVForSlotScopes, buildClientSlotFn, directiveImportMap, transformElement, cacheStringFunction, camelizeRE, camelize2, transformSlotOutlet, fnExpRE, transformOn, transformBind, injectPrefix, transformText, seen, transformOnce, transformModel, validDivisionCharRE, transformFilter, seen$1, transformMemo, noopDirectiveTransform;
var init_compiler_core_esm_bundler = __esm({
  "node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js"() {
    init_shared_esm_bundler();
    init_shared_esm_bundler();
    errorMessages = {
      [0]: "Illegal comment.",
      [1]: "CDATA section is allowed only in XML context.",
      [2]: "Duplicate attribute.",
      [3]: "End tag cannot have attributes.",
      [4]: "Illegal '/' in tags.",
      [5]: "Unexpected EOF in tag.",
      [6]: "Unexpected EOF in CDATA section.",
      [7]: "Unexpected EOF in comment.",
      [8]: "Unexpected EOF in script.",
      [9]: "Unexpected EOF in tag.",
      [10]: "Incorrectly closed comment.",
      [11]: "Incorrectly opened comment.",
      [12]: "Illegal tag name. Use '&lt;' to print '<'.",
      [13]: "Attribute value was expected.",
      [14]: "End tag name was expected.",
      [15]: "Whitespace was expected.",
      [16]: "Unexpected '<!--' in comment.",
      [17]: `Attribute name cannot contain U+0022 ("), U+0027 ('), and U+003C (<).`,
      [18]: "Unquoted attribute value cannot contain U+0022 (\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).",
      [19]: "Attribute name cannot start with '='.",
      [21]: "'<?' is allowed only in XML context.",
      [20]: `Unexpected null character.`,
      [22]: "Illegal '/' in tags.",
      [23]: "Invalid end tag.",
      [24]: "Element is missing end tag.",
      [25]: "Interpolation end sign was not found.",
      [27]: "End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.",
      [26]: "Legal directive name was expected.",
      [28]: `v-if/v-else-if is missing expression.`,
      [29]: `v-if/else branches must use unique keys.`,
      [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,
      [31]: `v-for is missing expression.`,
      [32]: `v-for has invalid expression.`,
      [33]: `<template v-for> key should be placed on the <template> tag.`,
      [34]: `v-bind is missing expression.`,
      [35]: `v-on is missing expression.`,
      [36]: `Unexpected custom directive on <slot> outlet.`,
      [37]: `Mixed v-slot usage on both the component and nested <template>.When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,
      [38]: `Duplicate slot names found. `,
      [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,
      [40]: `v-slot can only be used on components or <template> tags.`,
      [41]: `v-model is missing expression.`,
      [42]: `v-model value must be a valid JavaScript member expression.`,
      [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,
      [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.
Use a v-bind binding combined with a v-on listener that emits update:x event instead.`,
      [45]: `Error parsing JavaScript expression: `,
      [46]: `<KeepAlive> expects exactly one child component.`,
      [47]: `"prefixIdentifiers" option is not supported in this build of compiler.`,
      [48]: `ES module mode is not supported in this build of compiler.`,
      [49]: `"cacheHandlers" option is only supported when the "prefixIdentifiers" option is enabled.`,
      [50]: `"scopeId" option is only supported in module mode.`,
      [51]: ``
    };
    FRAGMENT = Symbol(true ? `Fragment` : ``);
    TELEPORT = Symbol(true ? `Teleport` : ``);
    SUSPENSE = Symbol(true ? `Suspense` : ``);
    KEEP_ALIVE = Symbol(true ? `KeepAlive` : ``);
    BASE_TRANSITION = Symbol(true ? `BaseTransition` : ``);
    OPEN_BLOCK = Symbol(true ? `openBlock` : ``);
    CREATE_BLOCK = Symbol(true ? `createBlock` : ``);
    CREATE_ELEMENT_BLOCK = Symbol(true ? `createElementBlock` : ``);
    CREATE_VNODE = Symbol(true ? `createVNode` : ``);
    CREATE_ELEMENT_VNODE = Symbol(true ? `createElementVNode` : ``);
    CREATE_COMMENT = Symbol(true ? `createCommentVNode` : ``);
    CREATE_TEXT = Symbol(true ? `createTextVNode` : ``);
    CREATE_STATIC = Symbol(true ? `createStaticVNode` : ``);
    RESOLVE_COMPONENT = Symbol(true ? `resolveComponent` : ``);
    RESOLVE_DYNAMIC_COMPONENT = Symbol(true ? `resolveDynamicComponent` : ``);
    RESOLVE_DIRECTIVE = Symbol(true ? `resolveDirective` : ``);
    RESOLVE_FILTER = Symbol(true ? `resolveFilter` : ``);
    WITH_DIRECTIVES = Symbol(true ? `withDirectives` : ``);
    RENDER_LIST = Symbol(true ? `renderList` : ``);
    RENDER_SLOT = Symbol(true ? `renderSlot` : ``);
    CREATE_SLOTS = Symbol(true ? `createSlots` : ``);
    TO_DISPLAY_STRING = Symbol(true ? `toDisplayString` : ``);
    MERGE_PROPS = Symbol(true ? `mergeProps` : ``);
    NORMALIZE_CLASS = Symbol(true ? `normalizeClass` : ``);
    NORMALIZE_STYLE = Symbol(true ? `normalizeStyle` : ``);
    NORMALIZE_PROPS = Symbol(true ? `normalizeProps` : ``);
    GUARD_REACTIVE_PROPS = Symbol(true ? `guardReactiveProps` : ``);
    TO_HANDLERS = Symbol(true ? `toHandlers` : ``);
    CAMELIZE = Symbol(true ? `camelize` : ``);
    CAPITALIZE = Symbol(true ? `capitalize` : ``);
    TO_HANDLER_KEY = Symbol(true ? `toHandlerKey` : ``);
    SET_BLOCK_TRACKING = Symbol(true ? `setBlockTracking` : ``);
    PUSH_SCOPE_ID = Symbol(true ? `pushScopeId` : ``);
    POP_SCOPE_ID = Symbol(true ? `popScopeId` : ``);
    WITH_CTX = Symbol(true ? `withCtx` : ``);
    UNREF = Symbol(true ? `unref` : ``);
    IS_REF = Symbol(true ? `isRef` : ``);
    WITH_MEMO = Symbol(true ? `withMemo` : ``);
    IS_MEMO_SAME = Symbol(true ? `isMemoSame` : ``);
    helperNameMap = {
      [FRAGMENT]: `Fragment`,
      [TELEPORT]: `Teleport`,
      [SUSPENSE]: `Suspense`,
      [KEEP_ALIVE]: `KeepAlive`,
      [BASE_TRANSITION]: `BaseTransition`,
      [OPEN_BLOCK]: `openBlock`,
      [CREATE_BLOCK]: `createBlock`,
      [CREATE_ELEMENT_BLOCK]: `createElementBlock`,
      [CREATE_VNODE]: `createVNode`,
      [CREATE_ELEMENT_VNODE]: `createElementVNode`,
      [CREATE_COMMENT]: `createCommentVNode`,
      [CREATE_TEXT]: `createTextVNode`,
      [CREATE_STATIC]: `createStaticVNode`,
      [RESOLVE_COMPONENT]: `resolveComponent`,
      [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,
      [RESOLVE_DIRECTIVE]: `resolveDirective`,
      [RESOLVE_FILTER]: `resolveFilter`,
      [WITH_DIRECTIVES]: `withDirectives`,
      [RENDER_LIST]: `renderList`,
      [RENDER_SLOT]: `renderSlot`,
      [CREATE_SLOTS]: `createSlots`,
      [TO_DISPLAY_STRING]: `toDisplayString`,
      [MERGE_PROPS]: `mergeProps`,
      [NORMALIZE_CLASS]: `normalizeClass`,
      [NORMALIZE_STYLE]: `normalizeStyle`,
      [NORMALIZE_PROPS]: `normalizeProps`,
      [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,
      [TO_HANDLERS]: `toHandlers`,
      [CAMELIZE]: `camelize`,
      [CAPITALIZE]: `capitalize`,
      [TO_HANDLER_KEY]: `toHandlerKey`,
      [SET_BLOCK_TRACKING]: `setBlockTracking`,
      [PUSH_SCOPE_ID]: `pushScopeId`,
      [POP_SCOPE_ID]: `popScopeId`,
      [WITH_CTX]: `withCtx`,
      [UNREF]: `unref`,
      [IS_REF]: `isRef`,
      [WITH_MEMO]: `withMemo`,
      [IS_MEMO_SAME]: `isMemoSame`
    };
    locStub = {
      source: "",
      start: { line: 1, column: 1, offset: 0 },
      end: { line: 1, column: 1, offset: 0 }
    };
    isStaticExp = (p) => p.type === 4 && p.isStatic;
    isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);
    nonIdentifierRE = /^\d|[^\$\w]/;
    isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);
    validFirstIdentCharRE = /[A-Za-z_$\xA0-\uFFFF]/;
    validIdentCharRE = /[\.\?\w$\xA0-\uFFFF]/;
    whitespaceRE = /\s+[.[]\s*|\s*[.[]\s+/g;
    isMemberExpressionBrowser = (path) => {
      path = path.trim().replace(whitespaceRE, (s) => s.trim());
      let state = 0;
      let stateStack = [];
      let currentOpenBracketCount = 0;
      let currentOpenParensCount = 0;
      let currentStringType = null;
      for (let i = 0; i < path.length; i++) {
        const char = path.charAt(i);
        switch (state) {
          case 0:
            if (char === "[") {
              stateStack.push(state);
              state = 1;
              currentOpenBracketCount++;
            } else if (char === "(") {
              stateStack.push(state);
              state = 2;
              currentOpenParensCount++;
            } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {
              return false;
            }
            break;
          case 1:
            if (char === `'` || char === `"` || char === "`") {
              stateStack.push(state);
              state = 3;
              currentStringType = char;
            } else if (char === `[`) {
              currentOpenBracketCount++;
            } else if (char === `]`) {
              if (!--currentOpenBracketCount) {
                state = stateStack.pop();
              }
            }
            break;
          case 2:
            if (char === `'` || char === `"` || char === "`") {
              stateStack.push(state);
              state = 3;
              currentStringType = char;
            } else if (char === `(`) {
              currentOpenParensCount++;
            } else if (char === `)`) {
              if (i === path.length - 1) {
                return false;
              }
              if (!--currentOpenParensCount) {
                state = stateStack.pop();
              }
            }
            break;
          case 3:
            if (char === currentStringType) {
              state = stateStack.pop();
              currentStringType = null;
            }
            break;
        }
      }
      return !currentOpenBracketCount && !currentOpenParensCount;
    };
    isMemberExpressionNode = NOOP;
    isMemberExpression = isMemberExpressionBrowser;
    propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);
    deprecationData = {
      ["COMPILER_IS_ON_ELEMENT"]: {
        message: `Platform-native elements with "is" prop will no longer be treated as components in Vue 3 unless the "is" value is explicitly prefixed with "vue:".`,
        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`
      },
      ["COMPILER_V_BIND_SYNC"]: {
        message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \`v-bind:${key}.sync\` should be changed to \`v-model:${key}\`.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`
      },
      ["COMPILER_V_BIND_PROP"]: {
        message: `.prop modifier for v-bind has been removed and no longer necessary. Vue 3 will automatically set a binding as DOM property when appropriate.`
      },
      ["COMPILER_V_BIND_OBJECT_ORDER"]: {
        message: `v-bind="obj" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`
      },
      ["COMPILER_V_ON_NATIVE"]: {
        message: `.native modifier for v-on has been removed as is no longer necessary.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`
      },
      ["COMPILER_V_IF_V_FOR_PRECEDENCE"]: {
        message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`
      },
      ["COMPILER_NATIVE_TEMPLATE"]: {
        message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`
      },
      ["COMPILER_INLINE_TEMPLATE"]: {
        message: `"inline-template" has been removed in Vue 3.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`
      },
      ["COMPILER_FILTER"]: {
        message: `filters have been removed in Vue 3. The "|" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`
      }
    };
    decodeRE = /&(gt|lt|amp|apos|quot);/g;
    decodeMap = {
      gt: ">",
      lt: "<",
      amp: "&",
      apos: "'",
      quot: '"'
    };
    defaultParserOptions = {
      delimiters: [`{{`, `}}`],
      getNamespace: () => 0,
      getTextMode: () => 0,
      isVoidTag: NO,
      isPreTag: NO,
      isCustomElement: NO,
      decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),
      onError: defaultOnError,
      onWarn: defaultOnWarn,
      comments: true
    };
    isSpecialTemplateDirective = makeMap(`if,else,else-if,for,slot`);
    allowHoistedHelperSet = /* @__PURE__ */ new Set([
      NORMALIZE_CLASS,
      NORMALIZE_STYLE,
      NORMALIZE_PROPS,
      GUARD_REACTIVE_PROPS
    ]);
    PURE_ANNOTATION = `/*#__PURE__*/`;
    aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;
    isFunctionType = (node) => {
      return /Function(?:Expression|Declaration)$|Method$/.test(node.type);
    };
    isStaticProperty = (node) => node && (node.type === "ObjectProperty" || node.type === "ObjectMethod") && !node.computed;
    isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;
    prohibitedKeywordRE = new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments,typeof,void".split(",").join("\\b|\\b") + "\\b");
    stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;
    transformExpression = (node, context) => {
      if (node.type === 5) {
        node.content = processExpression(node.content, context);
      } else if (node.type === 1) {
        for (let i = 0; i < node.props.length; i++) {
          const dir = node.props[i];
          if (dir.type === 7 && dir.name !== "for") {
            const exp = dir.exp;
            const arg = dir.arg;
            if (exp && exp.type === 4 && !(dir.name === "on" && arg)) {
              dir.exp = processExpression(
                exp,
                context,
                dir.name === "slot"
              );
            }
            if (arg && arg.type === 4 && !arg.isStatic) {
              dir.arg = processExpression(arg, context);
            }
          }
        }
      }
    };
    transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {
      return processIf(node, dir, context, (ifNode, branch, isRoot) => {
        const siblings = context.parent.children;
        let i = siblings.indexOf(ifNode);
        let key = 0;
        while (i-- >= 0) {
          const sibling = siblings[i];
          if (sibling && sibling.type === 9) {
            key += sibling.branches.length;
          }
        }
        return () => {
          if (isRoot) {
            ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);
          } else {
            const parentCondition = getParentCondition(ifNode.codegenNode);
            parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);
          }
        };
      });
    });
    transformFor = createStructuralDirectiveTransform("for", (node, dir, context) => {
      const { helper, removeHelper } = context;
      return processFor(node, dir, context, (forNode) => {
        const renderExp = createCallExpression(helper(RENDER_LIST), [
          forNode.source
        ]);
        const isTemplate = isTemplateNode(node);
        const memo = findDir(node, "memo");
        const keyProp = findProp(node, `key`);
        const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);
        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;
        const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;
        const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;
        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, renderExp, fragmentFlag + (true ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), void 0, void 0, true, !isStableFragment, false, node.loc);
        return () => {
          let childBlock;
          const { children } = forNode;
          if (isTemplate) {
            node.children.some((c) => {
              if (c.type === 1) {
                const key = findProp(c, "key");
                if (key) {
                  context.onError(createCompilerError(33, key.loc));
                  return true;
                }
              }
            });
          }
          const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;
          const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;
          if (slotOutlet) {
            childBlock = slotOutlet.codegenNode;
            if (isTemplate && keyProperty) {
              injectProp(childBlock, keyProperty, context);
            }
          } else if (needFragmentWrapper) {
            childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : void 0, node.children, 64 + (true ? ` /* ${PatchFlagNames[64]} */` : ``), void 0, void 0, true, void 0, false);
          } else {
            childBlock = children[0].codegenNode;
            if (isTemplate && keyProperty) {
              injectProp(childBlock, keyProperty, context);
            }
            if (childBlock.isBlock !== !isStableFragment) {
              if (childBlock.isBlock) {
                removeHelper(OPEN_BLOCK);
                removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
              } else {
                removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));
              }
            }
            childBlock.isBlock = !isStableFragment;
            if (childBlock.isBlock) {
              helper(OPEN_BLOCK);
              helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
            } else {
              helper(getVNodeHelper(context.inSSR, childBlock.isComponent));
            }
          }
          if (memo) {
            const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [
              createSimpleExpression(`_cached`)
            ]));
            loop.body = createBlockStatement([
              createCompoundExpression([`const _memo = (`, memo.exp, `)`]),
              createCompoundExpression([
                `if (_cached`,
                ...keyExp ? [` && _cached.key === `, keyExp] : [],
                ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`
              ]),
              createCompoundExpression([`const _item = `, childBlock]),
              createSimpleExpression(`_item.memo = _memo`),
              createSimpleExpression(`return _item`)
            ]);
            renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));
          } else {
            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true));
          }
        };
      });
    });
    forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
    forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
    stripParensRE = /^\(|\)$/g;
    defaultFallback = createSimpleExpression(`undefined`, false);
    trackSlotScopes = (node, context) => {
      if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {
        const vSlot = findDir(node, "slot");
        if (vSlot) {
          vSlot.exp;
          context.scopes.vSlot++;
          return () => {
            context.scopes.vSlot--;
          };
        }
      }
    };
    trackVForSlotScopes = (node, context) => {
      let vFor;
      if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, "for"))) {
        const result = vFor.parseResult = parseForExpression(vFor.exp, context);
        if (result) {
          const { value, key, index } = result;
          const { addIdentifiers, removeIdentifiers } = context;
          value && addIdentifiers(value);
          key && addIdentifiers(key);
          index && addIdentifiers(index);
          return () => {
            value && removeIdentifiers(value);
            key && removeIdentifiers(key);
            index && removeIdentifiers(index);
          };
        }
      }
    };
    buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false, true, children.length ? children[0].loc : loc);
    directiveImportMap = /* @__PURE__ */ new WeakMap();
    transformElement = (node, context) => {
      return function postTransformElement() {
        node = context.currentNode;
        if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {
          return;
        }
        const { tag, props } = node;
        const isComponent2 = node.tagType === 1;
        let vnodeTag = isComponent2 ? resolveComponentType(node, context) : `"${tag}"`;
        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;
        let vnodeProps;
        let vnodeChildren;
        let vnodePatchFlag;
        let patchFlag = 0;
        let vnodeDynamicProps;
        let dynamicPropNames;
        let vnodeDirectives;
        let shouldUseBlock = isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent2 && (tag === "svg" || tag === "foreignObject");
        if (props.length > 0) {
          const propsBuildResult = buildProps(node, context, void 0, isComponent2, isDynamicComponent);
          vnodeProps = propsBuildResult.props;
          patchFlag = propsBuildResult.patchFlag;
          dynamicPropNames = propsBuildResult.dynamicPropNames;
          const directives = propsBuildResult.directives;
          vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map((dir) => buildDirectiveArgs(dir, context))) : void 0;
          if (propsBuildResult.shouldUseBlock) {
            shouldUseBlock = true;
          }
        }
        if (node.children.length > 0) {
          if (vnodeTag === KEEP_ALIVE) {
            shouldUseBlock = true;
            patchFlag |= 1024;
            if (node.children.length > 1) {
              context.onError(createCompilerError(46, {
                start: node.children[0].loc.start,
                end: node.children[node.children.length - 1].loc.end,
                source: ""
              }));
            }
          }
          const shouldBuildAsSlots = isComponent2 && vnodeTag !== TELEPORT && vnodeTag !== KEEP_ALIVE;
          if (shouldBuildAsSlots) {
            const { slots, hasDynamicSlots } = buildSlots(node, context);
            vnodeChildren = slots;
            if (hasDynamicSlots) {
              patchFlag |= 1024;
            }
          } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {
            const child = node.children[0];
            const type = child.type;
            const hasDynamicTextChild = type === 5 || type === 8;
            if (hasDynamicTextChild && getConstantType(child, context) === 0) {
              patchFlag |= 1;
            }
            if (hasDynamicTextChild || type === 2) {
              vnodeChildren = child;
            } else {
              vnodeChildren = node.children;
            }
          } else {
            vnodeChildren = node.children;
          }
        }
        if (patchFlag !== 0) {
          if (true) {
            if (patchFlag < 0) {
              vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;
            } else {
              const flagNames = Object.keys(PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => PatchFlagNames[n]).join(`, `);
              vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;
            }
          } else {
            vnodePatchFlag = String(patchFlag);
          }
          if (dynamicPropNames && dynamicPropNames.length) {
            vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);
          }
        }
        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false, isComponent2, node.loc);
      };
    };
    true ? Object.freeze({}) : {};
    true ? Object.freeze([]) : [];
    cacheStringFunction = (fn) => {
      const cache = /* @__PURE__ */ Object.create(null);
      return (str) => {
        const hit = cache[str];
        return hit || (cache[str] = fn(str));
      };
    };
    camelizeRE = /-(\w)/g;
    camelize2 = cacheStringFunction((str) => {
      return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : "");
    });
    transformSlotOutlet = (node, context) => {
      if (isSlotOutlet(node)) {
        const { children, loc } = node;
        const { slotName, slotProps } = processSlotOutlet(node, context);
        const slotArgs = [
          context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,
          slotName,
          "{}",
          "undefined",
          "true"
        ];
        let expectedLen = 2;
        if (slotProps) {
          slotArgs[2] = slotProps;
          expectedLen = 3;
        }
        if (children.length) {
          slotArgs[3] = createFunctionExpression([], children, false, false, loc);
          expectedLen = 4;
        }
        if (context.scopeId && !context.slotted) {
          expectedLen = 5;
        }
        slotArgs.splice(expectedLen);
        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);
      }
    };
    fnExpRE = /^\s*([\w$_]+|(async\s*)?\([^)]*?\))\s*(:[^=]+)?=>|^\s*(async\s+)?function(?:\s+[\w$]+)?\s*\(/;
    transformOn = (dir, node, context, augmentor) => {
      const { loc, modifiers, arg } = dir;
      if (!dir.exp && !modifiers.length) {
        context.onError(createCompilerError(35, loc));
      }
      let eventName;
      if (arg.type === 4) {
        if (arg.isStatic) {
          let rawName = arg.content;
          if (rawName.startsWith("vue:")) {
            rawName = `vnode-${rawName.slice(4)}`;
          }
          const eventString = node.tagType !== 0 || rawName.startsWith("vnode") || !/[A-Z]/.test(rawName) ? toHandlerKey(camelize(rawName)) : `on:${rawName}`;
          eventName = createSimpleExpression(eventString, true, arg.loc);
        } else {
          eventName = createCompoundExpression([
            `${context.helperString(TO_HANDLER_KEY)}(`,
            arg,
            `)`
          ]);
        }
      } else {
        eventName = arg;
        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);
        eventName.children.push(`)`);
      }
      let exp = dir.exp;
      if (exp && !exp.content.trim()) {
        exp = void 0;
      }
      let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;
      if (exp) {
        const isMemberExp = isMemberExpression(exp.content);
        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));
        const hasMultipleStatements = exp.content.includes(`;`);
        if (true) {
          validateBrowserExpression(exp, context, false, hasMultipleStatements);
        }
        if (isInlineStatement || shouldCache && isMemberExp) {
          exp = createCompoundExpression([
            `${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,
            exp,
            hasMultipleStatements ? `}` : `)`
          ]);
        }
      }
      let ret = {
        props: [
          createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))
        ]
      };
      if (augmentor) {
        ret = augmentor(ret);
      }
      if (shouldCache) {
        ret.props[0].value = context.cache(ret.props[0].value);
      }
      ret.props.forEach((p) => p.key.isHandlerKey = true);
      return ret;
    };
    transformBind = (dir, _node, context) => {
      const { exp, modifiers, loc } = dir;
      const arg = dir.arg;
      if (arg.type !== 4) {
        arg.children.unshift(`(`);
        arg.children.push(`) || ""`);
      } else if (!arg.isStatic) {
        arg.content = `${arg.content} || ""`;
      }
      if (modifiers.includes("camel")) {
        if (arg.type === 4) {
          if (arg.isStatic) {
            arg.content = camelize(arg.content);
          } else {
            arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;
          }
        } else {
          arg.children.unshift(`${context.helperString(CAMELIZE)}(`);
          arg.children.push(`)`);
        }
      }
      if (!context.inSSR) {
        if (modifiers.includes("prop")) {
          injectPrefix(arg, ".");
        }
        if (modifiers.includes("attr")) {
          injectPrefix(arg, "^");
        }
      }
      if (!exp || exp.type === 4 && !exp.content.trim()) {
        context.onError(createCompilerError(34, loc));
        return {
          props: [createObjectProperty(arg, createSimpleExpression("", true, loc))]
        };
      }
      return {
        props: [createObjectProperty(arg, exp)]
      };
    };
    injectPrefix = (arg, prefix) => {
      if (arg.type === 4) {
        if (arg.isStatic) {
          arg.content = prefix + arg.content;
        } else {
          arg.content = `\`${prefix}\${${arg.content}}\``;
        }
      } else {
        arg.children.unshift(`'${prefix}' + (`);
        arg.children.push(`)`);
      }
    };
    transformText = (node, context) => {
      if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {
        return () => {
          const children = node.children;
          let currentContainer = void 0;
          let hasText = false;
          for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (isText(child)) {
              hasText = true;
              for (let j = i + 1; j < children.length; j++) {
                const next = children[j];
                if (isText(next)) {
                  if (!currentContainer) {
                    currentContainer = children[i] = createCompoundExpression([child], child.loc);
                  }
                  currentContainer.children.push(` + `, next);
                  children.splice(j, 1);
                  j--;
                } else {
                  currentContainer = void 0;
                  break;
                }
              }
            }
          }
          if (!hasText || children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && !node.props.find((p) => p.type === 7 && !context.directiveTransforms[p.name]) && !(node.tag === "template"))) {
            return;
          }
          for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (isText(child) || child.type === 8) {
              const callArgs = [];
              if (child.type !== 2 || child.content !== " ") {
                callArgs.push(child);
              }
              if (!context.ssr && getConstantType(child, context) === 0) {
                callArgs.push(1 + (true ? ` /* ${PatchFlagNames[1]} */` : ``));
              }
              children[i] = {
                type: 12,
                content: child,
                loc: child.loc,
                codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)
              };
            }
          }
        };
      }
    };
    seen = /* @__PURE__ */ new WeakSet();
    transformOnce = (node, context) => {
      if (node.type === 1 && findDir(node, "once", true)) {
        if (seen.has(node) || context.inVOnce) {
          return;
        }
        seen.add(node);
        context.inVOnce = true;
        context.helper(SET_BLOCK_TRACKING);
        return () => {
          context.inVOnce = false;
          const cur = context.currentNode;
          if (cur.codegenNode) {
            cur.codegenNode = context.cache(cur.codegenNode, true);
          }
        };
      }
    };
    transformModel = (dir, node, context) => {
      const { exp, arg } = dir;
      if (!exp) {
        context.onError(createCompilerError(41, dir.loc));
        return createTransformProps();
      }
      const rawExp = exp.loc.source;
      const expString = exp.type === 4 ? exp.content : rawExp;
      const bindingType = context.bindingMetadata[rawExp];
      if (bindingType === "props" || bindingType === "props-aliased") {
        context.onError(createCompilerError(44, exp.loc));
        return createTransformProps();
      }
      const maybeRef = false;
      if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {
        context.onError(createCompilerError(42, exp.loc));
        return createTransformProps();
      }
      const propName = arg ? arg : createSimpleExpression("modelValue", true);
      const eventName = arg ? isStaticExp(arg) ? `onUpdate:${arg.content}` : createCompoundExpression(['"onUpdate:" + ', arg]) : `onUpdate:modelValue`;
      let assignmentExp;
      const eventArg = context.isTS ? `($event: any)` : `$event`;
      {
        assignmentExp = createCompoundExpression([
          `${eventArg} => ((`,
          exp,
          `) = $event)`
        ]);
      }
      const props = [
        createObjectProperty(propName, dir.exp),
        createObjectProperty(eventName, assignmentExp)
      ];
      if (dir.modifiers.length && node.tagType === 1) {
        const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);
        const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + "Modifiers"']) : `modelModifiers`;
        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2)));
      }
      return createTransformProps(props);
    };
    validDivisionCharRE = /[\w).+\-_$\]]/;
    transformFilter = (node, context) => {
      if (!isCompatEnabled("COMPILER_FILTER", context)) {
        return;
      }
      if (node.type === 5) {
        rewriteFilter(node.content, context);
      }
      if (node.type === 1) {
        node.props.forEach((prop) => {
          if (prop.type === 7 && prop.name !== "for" && prop.exp) {
            rewriteFilter(prop.exp, context);
          }
        });
      }
    };
    seen$1 = /* @__PURE__ */ new WeakSet();
    transformMemo = (node, context) => {
      if (node.type === 1) {
        const dir = findDir(node, "memo");
        if (!dir || seen$1.has(node)) {
          return;
        }
        seen$1.add(node);
        return () => {
          const codegenNode = node.codegenNode || context.currentNode.codegenNode;
          if (codegenNode && codegenNode.type === 13) {
            if (node.tagType !== 1) {
              makeBlock(codegenNode, context);
            }
            node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [
              dir.exp,
              createFunctionExpression(void 0, codegenNode),
              `_cache`,
              String(context.cached++)
            ]);
          }
        };
      }
    };
    noopDirectiveTransform = () => ({ props: [] });
  }
});

// node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js
var compiler_dom_esm_bundler_exports = {};
__export(compiler_dom_esm_bundler_exports, {
  BASE_TRANSITION: () => BASE_TRANSITION,
  CAMELIZE: () => CAMELIZE,
  CAPITALIZE: () => CAPITALIZE,
  CREATE_BLOCK: () => CREATE_BLOCK,
  CREATE_COMMENT: () => CREATE_COMMENT,
  CREATE_ELEMENT_BLOCK: () => CREATE_ELEMENT_BLOCK,
  CREATE_ELEMENT_VNODE: () => CREATE_ELEMENT_VNODE,
  CREATE_SLOTS: () => CREATE_SLOTS,
  CREATE_STATIC: () => CREATE_STATIC,
  CREATE_TEXT: () => CREATE_TEXT,
  CREATE_VNODE: () => CREATE_VNODE,
  DOMDirectiveTransforms: () => DOMDirectiveTransforms,
  DOMNodeTransforms: () => DOMNodeTransforms,
  FRAGMENT: () => FRAGMENT,
  GUARD_REACTIVE_PROPS: () => GUARD_REACTIVE_PROPS,
  IS_MEMO_SAME: () => IS_MEMO_SAME,
  IS_REF: () => IS_REF,
  KEEP_ALIVE: () => KEEP_ALIVE,
  MERGE_PROPS: () => MERGE_PROPS,
  NORMALIZE_CLASS: () => NORMALIZE_CLASS,
  NORMALIZE_PROPS: () => NORMALIZE_PROPS,
  NORMALIZE_STYLE: () => NORMALIZE_STYLE,
  OPEN_BLOCK: () => OPEN_BLOCK,
  POP_SCOPE_ID: () => POP_SCOPE_ID,
  PUSH_SCOPE_ID: () => PUSH_SCOPE_ID,
  RENDER_LIST: () => RENDER_LIST,
  RENDER_SLOT: () => RENDER_SLOT,
  RESOLVE_COMPONENT: () => RESOLVE_COMPONENT,
  RESOLVE_DIRECTIVE: () => RESOLVE_DIRECTIVE,
  RESOLVE_DYNAMIC_COMPONENT: () => RESOLVE_DYNAMIC_COMPONENT,
  RESOLVE_FILTER: () => RESOLVE_FILTER,
  SET_BLOCK_TRACKING: () => SET_BLOCK_TRACKING,
  SUSPENSE: () => SUSPENSE,
  TELEPORT: () => TELEPORT,
  TO_DISPLAY_STRING: () => TO_DISPLAY_STRING,
  TO_HANDLERS: () => TO_HANDLERS,
  TO_HANDLER_KEY: () => TO_HANDLER_KEY,
  TRANSITION: () => TRANSITION,
  TRANSITION_GROUP: () => TRANSITION_GROUP,
  UNREF: () => UNREF,
  V_MODEL_CHECKBOX: () => V_MODEL_CHECKBOX,
  V_MODEL_DYNAMIC: () => V_MODEL_DYNAMIC,
  V_MODEL_RADIO: () => V_MODEL_RADIO,
  V_MODEL_SELECT: () => V_MODEL_SELECT,
  V_MODEL_TEXT: () => V_MODEL_TEXT,
  V_ON_WITH_KEYS: () => V_ON_WITH_KEYS,
  V_ON_WITH_MODIFIERS: () => V_ON_WITH_MODIFIERS,
  V_SHOW: () => V_SHOW,
  WITH_CTX: () => WITH_CTX,
  WITH_DIRECTIVES: () => WITH_DIRECTIVES,
  WITH_MEMO: () => WITH_MEMO,
  advancePositionWithClone: () => advancePositionWithClone,
  advancePositionWithMutation: () => advancePositionWithMutation,
  assert: () => assert,
  baseCompile: () => baseCompile,
  baseParse: () => baseParse,
  buildDirectiveArgs: () => buildDirectiveArgs,
  buildProps: () => buildProps,
  buildSlots: () => buildSlots,
  checkCompatEnabled: () => checkCompatEnabled,
  compile: () => compile,
  createArrayExpression: () => createArrayExpression,
  createAssignmentExpression: () => createAssignmentExpression,
  createBlockStatement: () => createBlockStatement,
  createCacheExpression: () => createCacheExpression,
  createCallExpression: () => createCallExpression,
  createCompilerError: () => createCompilerError,
  createCompoundExpression: () => createCompoundExpression,
  createConditionalExpression: () => createConditionalExpression,
  createDOMCompilerError: () => createDOMCompilerError,
  createForLoopParams: () => createForLoopParams,
  createFunctionExpression: () => createFunctionExpression,
  createIfStatement: () => createIfStatement,
  createInterpolation: () => createInterpolation,
  createObjectExpression: () => createObjectExpression,
  createObjectProperty: () => createObjectProperty,
  createReturnStatement: () => createReturnStatement,
  createRoot: () => createRoot,
  createSequenceExpression: () => createSequenceExpression,
  createSimpleExpression: () => createSimpleExpression,
  createStructuralDirectiveTransform: () => createStructuralDirectiveTransform,
  createTemplateLiteral: () => createTemplateLiteral,
  createTransformContext: () => createTransformContext,
  createVNodeCall: () => createVNodeCall,
  extractIdentifiers: () => extractIdentifiers,
  findDir: () => findDir,
  findProp: () => findProp,
  generate: () => generate,
  generateCodeFrame: () => generateCodeFrame,
  getBaseTransformPreset: () => getBaseTransformPreset,
  getConstantType: () => getConstantType,
  getInnerRange: () => getInnerRange,
  getMemoedVNodeCall: () => getMemoedVNodeCall,
  getVNodeBlockHelper: () => getVNodeBlockHelper,
  getVNodeHelper: () => getVNodeHelper,
  hasDynamicKeyVBind: () => hasDynamicKeyVBind,
  hasScopeRef: () => hasScopeRef,
  helperNameMap: () => helperNameMap,
  injectProp: () => injectProp,
  isBuiltInType: () => isBuiltInType,
  isCoreComponent: () => isCoreComponent,
  isFunctionType: () => isFunctionType,
  isInDestructureAssignment: () => isInDestructureAssignment,
  isMemberExpression: () => isMemberExpression,
  isMemberExpressionBrowser: () => isMemberExpressionBrowser,
  isMemberExpressionNode: () => isMemberExpressionNode,
  isReferencedIdentifier: () => isReferencedIdentifier,
  isSimpleIdentifier: () => isSimpleIdentifier,
  isSlotOutlet: () => isSlotOutlet,
  isStaticArgOf: () => isStaticArgOf,
  isStaticExp: () => isStaticExp,
  isStaticProperty: () => isStaticProperty,
  isStaticPropertyKey: () => isStaticPropertyKey,
  isTemplateNode: () => isTemplateNode,
  isText: () => isText,
  isVSlot: () => isVSlot,
  locStub: () => locStub,
  makeBlock: () => makeBlock,
  noopDirectiveTransform: () => noopDirectiveTransform,
  parse: () => parse,
  parserOptions: () => parserOptions,
  processExpression: () => processExpression,
  processFor: () => processFor,
  processIf: () => processIf,
  processSlotOutlet: () => processSlotOutlet,
  registerRuntimeHelpers: () => registerRuntimeHelpers,
  resolveComponentType: () => resolveComponentType,
  stringifyExpression: () => stringifyExpression,
  toValidAssetId: () => toValidAssetId,
  trackSlotScopes: () => trackSlotScopes,
  trackVForSlotScopes: () => trackVForSlotScopes,
  transform: () => transform,
  transformBind: () => transformBind,
  transformElement: () => transformElement,
  transformExpression: () => transformExpression,
  transformModel: () => transformModel,
  transformOn: () => transformOn,
  transformStyle: () => transformStyle,
  traverseNode: () => traverseNode,
  walkBlockDeclarations: () => walkBlockDeclarations,
  walkFunctionParams: () => walkFunctionParams,
  walkIdentifiers: () => walkIdentifiers,
  warnDeprecation: () => warnDeprecation
});
function decodeHtmlBrowser(raw, asAttr = false) {
  if (!decoder) {
    decoder = document.createElement("div");
  }
  if (asAttr) {
    decoder.innerHTML = `<div foo="${raw.replace(/"/g, "&quot;")}">`;
    return decoder.children[0].getAttribute("foo");
  } else {
    decoder.innerHTML = raw;
    return decoder.textContent;
  }
}
function createDOMCompilerError(code, loc) {
  return createCompilerError(code, loc, true ? DOMErrorMessages : void 0);
}
function hasMultipleChildren(node) {
  const children = node.children = node.children.filter((c) => c.type !== 3 && !(c.type === 2 && !c.content.trim()));
  const child = children[0];
  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);
}
function compile(template, options = {}) {
  return baseCompile(template, extend({}, parserOptions, options, {
    nodeTransforms: [
      ignoreSideEffectTags,
      ...DOMNodeTransforms,
      ...options.nodeTransforms || []
    ],
    directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),
    transformHoist: null
  }));
}
function parse(template, options = {}) {
  return baseParse(template, extend({}, parserOptions, options));
}
var V_MODEL_RADIO, V_MODEL_CHECKBOX, V_MODEL_TEXT, V_MODEL_SELECT, V_MODEL_DYNAMIC, V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS, V_SHOW, TRANSITION, TRANSITION_GROUP, decoder, isRawTextContainer, parserOptions, transformStyle, parseInlineCSS, DOMErrorMessages, transformVHtml, transformVText, transformModel2, isEventOptionModifier, isNonKeyModifier, maybeKeyModifier, isKeyboardEvent, resolveModifiers, transformClick, transformOn2, transformShow, transformTransition, ignoreSideEffectTags, DOMNodeTransforms, DOMDirectiveTransforms;
var init_compiler_dom_esm_bundler = __esm({
  "node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js"() {
    init_compiler_core_esm_bundler();
    init_compiler_core_esm_bundler();
    init_shared_esm_bundler();
    V_MODEL_RADIO = Symbol(true ? `vModelRadio` : ``);
    V_MODEL_CHECKBOX = Symbol(true ? `vModelCheckbox` : ``);
    V_MODEL_TEXT = Symbol(true ? `vModelText` : ``);
    V_MODEL_SELECT = Symbol(true ? `vModelSelect` : ``);
    V_MODEL_DYNAMIC = Symbol(true ? `vModelDynamic` : ``);
    V_ON_WITH_MODIFIERS = Symbol(true ? `vOnModifiersGuard` : ``);
    V_ON_WITH_KEYS = Symbol(true ? `vOnKeysGuard` : ``);
    V_SHOW = Symbol(true ? `vShow` : ``);
    TRANSITION = Symbol(true ? `Transition` : ``);
    TRANSITION_GROUP = Symbol(true ? `TransitionGroup` : ``);
    registerRuntimeHelpers({
      [V_MODEL_RADIO]: `vModelRadio`,
      [V_MODEL_CHECKBOX]: `vModelCheckbox`,
      [V_MODEL_TEXT]: `vModelText`,
      [V_MODEL_SELECT]: `vModelSelect`,
      [V_MODEL_DYNAMIC]: `vModelDynamic`,
      [V_ON_WITH_MODIFIERS]: `withModifiers`,
      [V_ON_WITH_KEYS]: `withKeys`,
      [V_SHOW]: `vShow`,
      [TRANSITION]: `Transition`,
      [TRANSITION_GROUP]: `TransitionGroup`
    });
    isRawTextContainer = makeMap("style,iframe,script,noscript", true);
    parserOptions = {
      isVoidTag,
      isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag),
      isPreTag: (tag) => tag === "pre",
      decodeEntities: decodeHtmlBrowser,
      isBuiltInComponent: (tag) => {
        if (isBuiltInType(tag, `Transition`)) {
          return TRANSITION;
        } else if (isBuiltInType(tag, `TransitionGroup`)) {
          return TRANSITION_GROUP;
        }
      },
      getNamespace(tag, parent) {
        let ns = parent ? parent.ns : 0;
        if (parent && ns === 2) {
          if (parent.tag === "annotation-xml") {
            if (tag === "svg") {
              return 1;
            }
            if (parent.props.some((a) => a.type === 6 && a.name === "encoding" && a.value != null && (a.value.content === "text/html" || a.value.content === "application/xhtml+xml"))) {
              ns = 0;
            }
          } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== "mglyph" && tag !== "malignmark") {
            ns = 0;
          }
        } else if (parent && ns === 1) {
          if (parent.tag === "foreignObject" || parent.tag === "desc" || parent.tag === "title") {
            ns = 0;
          }
        }
        if (ns === 0) {
          if (tag === "svg") {
            return 1;
          }
          if (tag === "math") {
            return 2;
          }
        }
        return ns;
      },
      getTextMode({ tag, ns }) {
        if (ns === 0) {
          if (tag === "textarea" || tag === "title") {
            return 1;
          }
          if (isRawTextContainer(tag)) {
            return 2;
          }
        }
        return 0;
      }
    };
    transformStyle = (node) => {
      if (node.type === 1) {
        node.props.forEach((p, i) => {
          if (p.type === 6 && p.name === "style" && p.value) {
            node.props[i] = {
              type: 7,
              name: `bind`,
              arg: createSimpleExpression(`style`, true, p.loc),
              exp: parseInlineCSS(p.value.content, p.loc),
              modifiers: [],
              loc: p.loc
            };
          }
        });
      }
    };
    parseInlineCSS = (cssText, loc) => {
      const normalized = parseStringStyle(cssText);
      return createSimpleExpression(JSON.stringify(normalized), false, loc, 3);
    };
    DOMErrorMessages = {
      [51]: `v-html is missing expression.`,
      [52]: `v-html will override element children.`,
      [53]: `v-text is missing expression.`,
      [54]: `v-text will override element children.`,
      [55]: `v-model can only be used on <input>, <textarea> and <select> elements.`,
      [56]: `v-model argument is not supported on plain elements.`,
      [57]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,
      [58]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,
      [59]: `v-show is missing expression.`,
      [60]: `<Transition> expects exactly one child element or component.`,
      [61]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`
    };
    transformVHtml = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(51, loc));
      }
      if (node.children.length) {
        context.onError(createDOMCompilerError(52, loc));
        node.children.length = 0;
      }
      return {
        props: [
          createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression("", true))
        ]
      };
    };
    transformVText = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(53, loc));
      }
      if (node.children.length) {
        context.onError(createDOMCompilerError(54, loc));
        node.children.length = 0;
      }
      return {
        props: [
          createObjectProperty(createSimpleExpression(`textContent`, true), exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc) : createSimpleExpression("", true))
        ]
      };
    };
    transformModel2 = (dir, node, context) => {
      const baseResult = transformModel(dir, node, context);
      if (!baseResult.props.length || node.tagType === 1) {
        return baseResult;
      }
      if (dir.arg) {
        context.onError(createDOMCompilerError(56, dir.arg.loc));
      }
      function checkDuplicatedValue() {
        const value = findProp(node, "value");
        if (value) {
          context.onError(createDOMCompilerError(58, value.loc));
        }
      }
      const { tag } = node;
      const isCustomElement = context.isCustomElement(tag);
      if (tag === "input" || tag === "textarea" || tag === "select" || isCustomElement) {
        let directiveToUse = V_MODEL_TEXT;
        let isInvalidType = false;
        if (tag === "input" || isCustomElement) {
          const type = findProp(node, `type`);
          if (type) {
            if (type.type === 7) {
              directiveToUse = V_MODEL_DYNAMIC;
            } else if (type.value) {
              switch (type.value.content) {
                case "radio":
                  directiveToUse = V_MODEL_RADIO;
                  break;
                case "checkbox":
                  directiveToUse = V_MODEL_CHECKBOX;
                  break;
                case "file":
                  isInvalidType = true;
                  context.onError(createDOMCompilerError(57, dir.loc));
                  break;
                default:
                  checkDuplicatedValue();
                  break;
              }
            }
          } else if (hasDynamicKeyVBind(node)) {
            directiveToUse = V_MODEL_DYNAMIC;
          } else {
            checkDuplicatedValue();
          }
        } else if (tag === "select") {
          directiveToUse = V_MODEL_SELECT;
        } else {
          checkDuplicatedValue();
        }
        if (!isInvalidType) {
          baseResult.needRuntime = context.helper(directiveToUse);
        }
      } else {
        context.onError(createDOMCompilerError(55, dir.loc));
      }
      baseResult.props = baseResult.props.filter((p) => !(p.key.type === 4 && p.key.content === "modelValue"));
      return baseResult;
    };
    isEventOptionModifier = makeMap(`passive,once,capture`);
    isNonKeyModifier = makeMap(
      `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`
    );
    maybeKeyModifier = makeMap("left,right");
    isKeyboardEvent = makeMap(`onkeyup,onkeydown,onkeypress`, true);
    resolveModifiers = (key, modifiers, context, loc) => {
      const keyModifiers = [];
      const nonKeyModifiers = [];
      const eventOptionModifiers = [];
      for (let i = 0; i < modifiers.length; i++) {
        const modifier = modifiers[i];
        if (modifier === "native" && checkCompatEnabled("COMPILER_V_ON_NATIVE", context, loc)) {
          eventOptionModifiers.push(modifier);
        } else if (isEventOptionModifier(modifier)) {
          eventOptionModifiers.push(modifier);
        } else {
          if (maybeKeyModifier(modifier)) {
            if (isStaticExp(key)) {
              if (isKeyboardEvent(key.content)) {
                keyModifiers.push(modifier);
              } else {
                nonKeyModifiers.push(modifier);
              }
            } else {
              keyModifiers.push(modifier);
              nonKeyModifiers.push(modifier);
            }
          } else {
            if (isNonKeyModifier(modifier)) {
              nonKeyModifiers.push(modifier);
            } else {
              keyModifiers.push(modifier);
            }
          }
        }
      }
      return {
        keyModifiers,
        nonKeyModifiers,
        eventOptionModifiers
      };
    };
    transformClick = (key, event) => {
      const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === "onclick";
      return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([
        `(`,
        key,
        `) === "onClick" ? "${event}" : (`,
        key,
        `)`
      ]) : key;
    };
    transformOn2 = (dir, node, context) => {
      return transformOn(dir, node, context, (baseResult) => {
        const { modifiers } = dir;
        if (!modifiers.length)
          return baseResult;
        let { key, value: handlerExp } = baseResult.props[0];
        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);
        if (nonKeyModifiers.includes("right")) {
          key = transformClick(key, `onContextmenu`);
        }
        if (nonKeyModifiers.includes("middle")) {
          key = transformClick(key, `onMouseup`);
        }
        if (nonKeyModifiers.length) {
          handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [
            handlerExp,
            JSON.stringify(nonKeyModifiers)
          ]);
        }
        if (keyModifiers.length && (!isStaticExp(key) || isKeyboardEvent(key.content))) {
          handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [
            handlerExp,
            JSON.stringify(keyModifiers)
          ]);
        }
        if (eventOptionModifiers.length) {
          const modifierPostfix = eventOptionModifiers.map(capitalize).join("");
          key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + "${modifierPostfix}"`]);
        }
        return {
          props: [createObjectProperty(key, handlerExp)]
        };
      });
    };
    transformShow = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(59, loc));
      }
      return {
        props: [],
        needRuntime: context.helper(V_SHOW)
      };
    };
    transformTransition = (node, context) => {
      if (node.type === 1 && node.tagType === 1) {
        const component = context.isBuiltInComponent(node.tag);
        if (component === TRANSITION) {
          return () => {
            if (!node.children.length) {
              return;
            }
            if (hasMultipleChildren(node)) {
              context.onError(createDOMCompilerError(60, {
                start: node.children[0].loc.start,
                end: node.children[node.children.length - 1].loc.end,
                source: ""
              }));
            }
            const child = node.children[0];
            if (child.type === 1) {
              for (const p of child.props) {
                if (p.type === 7 && p.name === "show") {
                  node.props.push({
                    type: 6,
                    name: "persisted",
                    value: void 0,
                    loc: node.loc
                  });
                }
              }
            }
          };
        }
      }
    };
    ignoreSideEffectTags = (node, context) => {
      if (node.type === 1 && node.tagType === 0 && (node.tag === "script" || node.tag === "style")) {
        context.onError(createDOMCompilerError(61, node.loc));
        context.removeNode();
      }
    };
    DOMNodeTransforms = [
      transformStyle,
      ...true ? [transformTransition] : []
    ];
    DOMDirectiveTransforms = {
      cloak: noopDirectiveTransform,
      html: transformVHtml,
      text: transformVText,
      model: transformModel2,
      on: transformOn2,
      show: transformShow
    };
  }
});

// node_modules/vue/dist/vue.cjs.js
var require_vue_cjs = __commonJS({
  "node_modules/vue/dist/vue.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var compilerDom = (init_compiler_dom_esm_bundler(), __toCommonJS(compiler_dom_esm_bundler_exports));
    var runtimeDom = (init_runtime_dom_esm_bundler(), __toCommonJS(runtime_dom_esm_bundler_exports));
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          n[k] = e[k];
        });
      }
      n["default"] = e;
      return Object.freeze(n);
    }
    var runtimeDom__namespace = _interopNamespace(runtimeDom);
    var compileCache = /* @__PURE__ */ Object.create(null);
    function compileToFunction(template, options) {
      if (!shared.isString(template)) {
        if (template.nodeType) {
          template = template.innerHTML;
        } else {
          runtimeDom.warn(`invalid template option: `, template);
          return shared.NOOP;
        }
      }
      const key = template;
      const cached = compileCache[key];
      if (cached) {
        return cached;
      }
      if (template[0] === "#") {
        const el = document.querySelector(template);
        if (!el) {
          runtimeDom.warn(`Template element not found or is empty: ${template}`);
        }
        template = el ? el.innerHTML : ``;
      }
      const opts = shared.extend({
        hoistStatic: true,
        onError,
        onWarn: (e) => onError(e, true)
      }, options);
      if (!opts.isCustomElement && typeof customElements !== "undefined") {
        opts.isCustomElement = (tag) => !!customElements.get(tag);
      }
      const { code } = compilerDom.compile(template, opts);
      function onError(err, asWarning = false) {
        const message = asWarning ? err.message : `Template compilation error: ${err.message}`;
        const codeFrame = err.loc && shared.generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);
        runtimeDom.warn(codeFrame ? `${message}
${codeFrame}` : message);
      }
      const render = new Function("Vue", code)(runtimeDom__namespace);
      render._rc = true;
      return compileCache[key] = render;
    }
    runtimeDom.registerRuntimeCompiler(compileToFunction);
    Object.keys(runtimeDom).forEach(function(k) {
      if (k !== "default")
        exports[k] = runtimeDom[k];
    });
    exports.compile = compileToFunction;
  }
});

// node_modules/vue/index.js
var require_vue = __commonJS({
  "node_modules/vue/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_vue_cjs();
    }
  }
});

// node_modules/vue-ellipse-progress/dist/veprogress.umd.min.js
var require_veprogress_umd_min = __commonJS({
  "node_modules/vue-ellipse-progress/dist/veprogress.umd.min.js"(exports, module) {
    (function(t, e) {
      "object" === typeof exports && "object" === typeof module ? module.exports = e(require_vue()) : "function" === typeof define && define.amd ? define([], e) : "object" === typeof exports ? exports["veprogress"] = e(require_vue()) : t["veprogress"] = e(t["Vue"]);
    })("undefined" !== typeof self ? self : exports, function(t) {
      return function() {
        var e = { 7679: function(t2, e2) {
          var r2, n2, o2;
          (function(i, a) {
            n2 = [], r2 = a, o2 = "function" === typeof r2 ? r2.apply(e2, n2) : r2, void 0 === o2 || (t2.exports = o2);
          })("undefined" !== typeof self && self, function() {
            function t3() {
              var e3 = Object.getOwnPropertyDescriptor(document, "currentScript");
              if (!e3 && "currentScript" in document && document.currentScript)
                return document.currentScript;
              if (e3 && e3.get !== t3 && document.currentScript)
                return document.currentScript;
              try {
                throw new Error();
              } catch (d) {
                var r3, n3, o3, i = /.*at [^(]*\((.*):(.+):(.+)\)$/gi, a = /@([^@]*):(\d+):(\d+)\s*$/gi, s = i.exec(d.stack) || a.exec(d.stack), c = s && s[1] || false, u = s && s[2] || false, f = document.location.href.replace(document.location.hash, ""), l = document.getElementsByTagName("script");
                c === f && (r3 = document.documentElement.outerHTML, n3 = new RegExp("(?:[^\\n]+?\\n){0," + (u - 2) + "}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*", "i"), o3 = r3.replace(n3, "$1").trim());
                for (var p = 0; p < l.length; p++) {
                  if ("interactive" === l[p].readyState)
                    return l[p];
                  if (l[p].src === c)
                    return l[p];
                  if (c === f && l[p].innerHTML && l[p].innerHTML.trim() === o3)
                    return l[p];
                }
                return null;
              }
            }
            return t3;
          });
        }, 9662: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(614), i = r2(6330), a = n2.TypeError;
          t2.exports = function(t3) {
            if (o2(t3))
              return t3;
            throw a(i(t3) + " is not a function");
          };
        }, 9483: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(4411), i = r2(6330), a = n2.TypeError;
          t2.exports = function(t3) {
            if (o2(t3))
              return t3;
            throw a(i(t3) + " is not a constructor");
          };
        }, 6077: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(614), i = n2.String, a = n2.TypeError;
          t2.exports = function(t3) {
            if ("object" == typeof t3 || o2(t3))
              return t3;
            throw a("Can't set " + i(t3) + " as a prototype");
          };
        }, 1223: function(t2, e2, r2) {
          var n2 = r2(5112), o2 = r2(30), i = r2(3070), a = n2("unscopables"), s = Array.prototype;
          void 0 == s[a] && i.f(s, a, { configurable: true, value: o2(null) }), t2.exports = function(t3) {
            s[a][t3] = true;
          };
        }, 1530: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(8710).charAt;
          t2.exports = function(t3, e3, r3) {
            return e3 + (r3 ? n2(t3, e3).length : 1);
          };
        }, 5787: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(7976), i = n2.TypeError;
          t2.exports = function(t3, e3) {
            if (o2(e3, t3))
              return t3;
            throw i("Incorrect invocation");
          };
        }, 9670: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(111), i = n2.String, a = n2.TypeError;
          t2.exports = function(t3) {
            if (o2(t3))
              return t3;
            throw a(i(t3) + " is not an object");
          };
        }, 1285: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(7908), o2 = r2(1400), i = r2(6244);
          t2.exports = function(t3) {
            var e3 = n2(this), r3 = i(e3), a = arguments.length, s = o2(a > 1 ? arguments[1] : void 0, r3), c = a > 2 ? arguments[2] : void 0, u = void 0 === c ? r3 : o2(c, r3);
            while (u > s)
              e3[s++] = t3;
            return e3;
          };
        }, 8533: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2092).forEach, o2 = r2(9341), i = o2("forEach");
          t2.exports = i ? [].forEach : function(t3) {
            return n2(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          };
        }, 8457: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(7854), o2 = r2(9974), i = r2(6916), a = r2(7908), s = r2(3411), c = r2(7659), u = r2(4411), f = r2(6244), l = r2(6135), p = r2(8554), d = r2(1246), h = n2.Array;
          t2.exports = function(t3) {
            var e3 = a(t3), r3 = u(this), n3 = arguments.length, v = n3 > 1 ? arguments[1] : void 0, m = void 0 !== v;
            m && (v = o2(v, n3 > 2 ? arguments[2] : void 0));
            var g, y, b, k, x, w, S = d(e3), _ = 0;
            if (!S || this == h && c(S))
              for (g = f(e3), y = r3 ? new this(g) : h(g); g > _; _++)
                w = m ? v(e3[_], _) : e3[_], l(y, _, w);
            else
              for (k = p(e3, S), x = k.next, y = r3 ? new this() : []; !(b = i(x, k)).done; _++)
                w = m ? s(k, v, [b.value, _], true) : b.value, l(y, _, w);
            return y.length = _, y;
          };
        }, 1318: function(t2, e2, r2) {
          var n2 = r2(5656), o2 = r2(1400), i = r2(6244), a = function(t3) {
            return function(e3, r3, a2) {
              var s, c = n2(e3), u = i(c), f = o2(a2, u);
              if (t3 && r3 != r3) {
                while (u > f)
                  if (s = c[f++], s != s)
                    return true;
              } else
                for (; u > f; f++)
                  if ((t3 || f in c) && c[f] === r3)
                    return t3 || f || 0;
              return !t3 && -1;
            };
          };
          t2.exports = { includes: a(true), indexOf: a(false) };
        }, 2092: function(t2, e2, r2) {
          var n2 = r2(9974), o2 = r2(1702), i = r2(8361), a = r2(7908), s = r2(6244), c = r2(5417), u = o2([].push), f = function(t3) {
            var e3 = 1 == t3, r3 = 2 == t3, o3 = 3 == t3, f2 = 4 == t3, l = 6 == t3, p = 7 == t3, d = 5 == t3 || l;
            return function(h, v, m, g) {
              for (var y, b, k = a(h), x = i(k), w = n2(v, m), S = s(x), _ = 0, E = g || c, O = e3 ? E(h, S) : r3 || p ? E(h, 0) : void 0; S > _; _++)
                if ((d || _ in x) && (y = x[_], b = w(y, _, k), t3))
                  if (e3)
                    O[_] = b;
                  else if (b)
                    switch (t3) {
                      case 3:
                        return true;
                      case 5:
                        return y;
                      case 6:
                        return _;
                      case 2:
                        u(O, y);
                    }
                  else
                    switch (t3) {
                      case 4:
                        return false;
                      case 7:
                        u(O, y);
                    }
              return l ? -1 : o3 || f2 ? f2 : O;
            };
          };
          t2.exports = { forEach: f(0), map: f(1), filter: f(2), some: f(3), every: f(4), find: f(5), findIndex: f(6), filterReject: f(7) };
        }, 1194: function(t2, e2, r2) {
          var n2 = r2(7293), o2 = r2(5112), i = r2(7392), a = o2("species");
          t2.exports = function(t3) {
            return i >= 51 || !n2(function() {
              var e3 = [], r3 = e3.constructor = {};
              return r3[a] = function() {
                return { foo: 1 };
              }, 1 !== e3[t3](Boolean).foo;
            });
          };
        }, 9341: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(7293);
          t2.exports = function(t3, e3) {
            var r3 = [][t3];
            return !!r3 && n2(function() {
              r3.call(null, e3 || function() {
                return 1;
              }, 1);
            });
          };
        }, 1589: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(1400), i = r2(6244), a = r2(6135), s = n2.Array, c = Math.max;
          t2.exports = function(t3, e3, r3) {
            for (var n3 = i(t3), u = o2(e3, n3), f = o2(void 0 === r3 ? n3 : r3, n3), l = s(c(f - u, 0)), p = 0; u < f; u++, p++)
              a(l, p, t3[u]);
            return l.length = p, l;
          };
        }, 206: function(t2, e2, r2) {
          var n2 = r2(1702);
          t2.exports = n2([].slice);
        }, 7475: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(3157), i = r2(4411), a = r2(111), s = r2(5112), c = s("species"), u = n2.Array;
          t2.exports = function(t3) {
            var e3;
            return o2(t3) && (e3 = t3.constructor, i(e3) && (e3 === u || o2(e3.prototype)) ? e3 = void 0 : a(e3) && (e3 = e3[c], null === e3 && (e3 = void 0))), void 0 === e3 ? u : e3;
          };
        }, 5417: function(t2, e2, r2) {
          var n2 = r2(7475);
          t2.exports = function(t3, e3) {
            return new (n2(t3))(0 === e3 ? 0 : e3);
          };
        }, 3411: function(t2, e2, r2) {
          var n2 = r2(9670), o2 = r2(9212);
          t2.exports = function(t3, e3, r3, i) {
            try {
              return i ? e3(n2(r3)[0], r3[1]) : e3(r3);
            } catch (a) {
              o2(t3, "throw", a);
            }
          };
        }, 7072: function(t2, e2, r2) {
          var n2 = r2(5112), o2 = n2("iterator"), i = false;
          try {
            var a = 0, s = { next: function() {
              return { done: !!a++ };
            }, return: function() {
              i = true;
            } };
            s[o2] = function() {
              return this;
            }, Array.from(s, function() {
              throw 2;
            });
          } catch (c) {
          }
          t2.exports = function(t3, e3) {
            if (!e3 && !i)
              return false;
            var r3 = false;
            try {
              var n3 = {};
              n3[o2] = function() {
                return { next: function() {
                  return { done: r3 = true };
                } };
              }, t3(n3);
            } catch (c) {
            }
            return r3;
          };
        }, 4326: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = n2({}.toString), i = n2("".slice);
          t2.exports = function(t3) {
            return i(o2(t3), 8, -1);
          };
        }, 648: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(1694), i = r2(614), a = r2(4326), s = r2(5112), c = s("toStringTag"), u = n2.Object, f = "Arguments" == a(function() {
            return arguments;
          }()), l = function(t3, e3) {
            try {
              return t3[e3];
            } catch (r3) {
            }
          };
          t2.exports = o2 ? a : function(t3) {
            var e3, r3, n3;
            return void 0 === t3 ? "Undefined" : null === t3 ? "Null" : "string" == typeof (r3 = l(e3 = u(t3), c)) ? r3 : f ? a(e3) : "Object" == (n3 = a(e3)) && i(e3.callee) ? "Arguments" : n3;
          };
        }, 7741: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = n2("".replace), i = function(t3) {
            return String(Error(t3).stack);
          }("zxcasd"), a = /\n\s*at [^:]*:[^\n]*/, s = a.test(i);
          t2.exports = function(t3, e3) {
            if (s && "string" == typeof t3)
              while (e3--)
                t3 = o2(t3, a, "");
            return t3;
          };
        }, 9920: function(t2, e2, r2) {
          var n2 = r2(2597), o2 = r2(3887), i = r2(1236), a = r2(3070);
          t2.exports = function(t3, e3, r3) {
            for (var s = o2(e3), c = a.f, u = i.f, f = 0; f < s.length; f++) {
              var l = s[f];
              n2(t3, l) || r3 && n2(r3, l) || c(t3, l, u(e3, l));
            }
          };
        }, 4964: function(t2, e2, r2) {
          var n2 = r2(5112), o2 = n2("match");
          t2.exports = function(t3) {
            var e3 = /./;
            try {
              "/./"[t3](e3);
            } catch (r3) {
              try {
                return e3[o2] = false, "/./"[t3](e3);
              } catch (n3) {
              }
            }
            return false;
          };
        }, 8544: function(t2, e2, r2) {
          var n2 = r2(7293);
          t2.exports = !n2(function() {
            function t3() {
            }
            return t3.prototype.constructor = null, Object.getPrototypeOf(new t3()) !== t3.prototype;
          });
        }, 4994: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(3383).IteratorPrototype, o2 = r2(30), i = r2(9114), a = r2(8003), s = r2(7497), c = function() {
            return this;
          };
          t2.exports = function(t3, e3, r3, u) {
            var f = e3 + " Iterator";
            return t3.prototype = o2(n2, { next: i(+!u, r3) }), a(t3, f, false, true), s[f] = c, t3;
          };
        }, 8880: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(3070), i = r2(9114);
          t2.exports = n2 ? function(t3, e3, r3) {
            return o2.f(t3, e3, i(1, r3));
          } : function(t3, e3, r3) {
            return t3[e3] = r3, t3;
          };
        }, 9114: function(t2) {
          t2.exports = function(t3, e2) {
            return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e2 };
          };
        }, 6135: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(4948), o2 = r2(3070), i = r2(9114);
          t2.exports = function(t3, e3, r3) {
            var a = n2(e3);
            a in t3 ? o2.f(t3, a, i(0, r3)) : t3[a] = r3;
          };
        }, 654: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(6916), i = r2(1913), a = r2(6530), s = r2(614), c = r2(4994), u = r2(9518), f = r2(7674), l = r2(8003), p = r2(8880), d = r2(1320), h = r2(5112), v = r2(7497), m = r2(3383), g = a.PROPER, y = a.CONFIGURABLE, b = m.IteratorPrototype, k = m.BUGGY_SAFARI_ITERATORS, x = h("iterator"), w = "keys", S = "values", _ = "entries", E = function() {
            return this;
          };
          t2.exports = function(t3, e3, r3, a2, h2, m2, O) {
            c(r3, e3, a2);
            var C, T, j, P = function(t4) {
              if (t4 === h2 && D)
                return D;
              if (!k && t4 in I)
                return I[t4];
              switch (t4) {
                case w:
                  return function() {
                    return new r3(this, t4);
                  };
                case S:
                  return function() {
                    return new r3(this, t4);
                  };
                case _:
                  return function() {
                    return new r3(this, t4);
                  };
              }
              return function() {
                return new r3(this);
              };
            }, F = e3 + " Iterator", N = false, I = t3.prototype, A = I[x] || I["@@iterator"] || h2 && I[h2], D = !k && A || P(h2), L = "Array" == e3 && I.entries || A;
            if (L && (C = u(L.call(new t3())), C !== Object.prototype && C.next && (i || u(C) === b || (f ? f(C, b) : s(C[x]) || d(C, x, E)), l(C, F, true, true), i && (v[F] = E))), g && h2 == S && A && A.name !== S && (!i && y ? p(I, "name", S) : (N = true, D = function() {
              return o2(A, this);
            })), h2)
              if (T = { values: P(S), keys: m2 ? D : P(w), entries: P(_) }, O)
                for (j in T)
                  (k || N || !(j in I)) && d(I, j, T[j]);
              else
                n2({ target: e3, proto: true, forced: k || N }, T);
            return i && !O || I[x] === D || d(I, x, D, { name: h2 }), v[e3] = D, T;
          };
        }, 7235: function(t2, e2, r2) {
          var n2 = r2(857), o2 = r2(2597), i = r2(6061), a = r2(3070).f;
          t2.exports = function(t3) {
            var e3 = n2.Symbol || (n2.Symbol = {});
            o2(e3, t3) || a(e3, t3, { value: i.f(t3) });
          };
        }, 9781: function(t2, e2, r2) {
          var n2 = r2(7293);
          t2.exports = !n2(function() {
            return 7 != Object.defineProperty({}, 1, { get: function() {
              return 7;
            } })[1];
          });
        }, 317: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(111), i = n2.document, a = o2(i) && o2(i.createElement);
          t2.exports = function(t3) {
            return a ? i.createElement(t3) : {};
          };
        }, 8324: function(t2) {
          t2.exports = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 };
        }, 8509: function(t2, e2, r2) {
          var n2 = r2(317), o2 = n2("span").classList, i = o2 && o2.constructor && o2.constructor.prototype;
          t2.exports = i === Object.prototype ? void 0 : i;
        }, 7871: function(t2) {
          t2.exports = "object" == typeof window;
        }, 1528: function(t2, e2, r2) {
          var n2 = r2(8113), o2 = r2(7854);
          t2.exports = /ipad|iphone|ipod/i.test(n2) && void 0 !== o2.Pebble;
        }, 6833: function(t2, e2, r2) {
          var n2 = r2(8113);
          t2.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(n2);
        }, 5268: function(t2, e2, r2) {
          var n2 = r2(4326), o2 = r2(7854);
          t2.exports = "process" == n2(o2.process);
        }, 1036: function(t2, e2, r2) {
          var n2 = r2(8113);
          t2.exports = /web0s(?!.*chrome)/i.test(n2);
        }, 8113: function(t2, e2, r2) {
          var n2 = r2(5005);
          t2.exports = n2("navigator", "userAgent") || "";
        }, 7392: function(t2, e2, r2) {
          var n2, o2, i = r2(7854), a = r2(8113), s = i.process, c = i.Deno, u = s && s.versions || c && c.version, f = u && u.v8;
          f && (n2 = f.split("."), o2 = n2[0] > 0 && n2[0] < 4 ? 1 : +(n2[0] + n2[1])), !o2 && a && (n2 = a.match(/Edge\/(\d+)/), (!n2 || n2[1] >= 74) && (n2 = a.match(/Chrome\/(\d+)/), n2 && (o2 = +n2[1]))), t2.exports = o2;
        }, 748: function(t2) {
          t2.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
        }, 2914: function(t2, e2, r2) {
          var n2 = r2(7293), o2 = r2(9114);
          t2.exports = !n2(function() {
            var t3 = Error("a");
            return !("stack" in t3) || (Object.defineProperty(t3, "stack", o2(1, 7)), 7 !== t3.stack);
          });
        }, 2109: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(1236).f, i = r2(8880), a = r2(1320), s = r2(3505), c = r2(9920), u = r2(4705);
          t2.exports = function(t3, e3) {
            var r3, f, l, p, d, h, v = t3.target, m = t3.global, g = t3.stat;
            if (f = m ? n2 : g ? n2[v] || s(v, {}) : (n2[v] || {}).prototype, f)
              for (l in e3) {
                if (d = e3[l], t3.noTargetGet ? (h = o2(f, l), p = h && h.value) : p = f[l], r3 = u(m ? l : v + (g ? "." : "#") + l, t3.forced), !r3 && void 0 !== p) {
                  if (typeof d == typeof p)
                    continue;
                  c(d, p);
                }
                (t3.sham || p && p.sham) && i(d, "sham", true), a(f, l, d, t3);
              }
          };
        }, 7293: function(t2) {
          t2.exports = function(t3) {
            try {
              return !!t3();
            } catch (e2) {
              return true;
            }
          };
        }, 7007: function(t2, e2, r2) {
          "use strict";
          r2(4916);
          var n2 = r2(1702), o2 = r2(1320), i = r2(2261), a = r2(7293), s = r2(5112), c = r2(8880), u = s("species"), f = RegExp.prototype;
          t2.exports = function(t3, e3, r3, l) {
            var p = s(t3), d = !a(function() {
              var e4 = {};
              return e4[p] = function() {
                return 7;
              }, 7 != ""[t3](e4);
            }), h = d && !a(function() {
              var e4 = false, r4 = /a/;
              return "split" === t3 && (r4 = {}, r4.constructor = {}, r4.constructor[u] = function() {
                return r4;
              }, r4.flags = "", r4[p] = /./[p]), r4.exec = function() {
                return e4 = true, null;
              }, r4[p](""), !e4;
            });
            if (!d || !h || r3) {
              var v = n2(/./[p]), m = e3(p, ""[t3], function(t4, e4, r4, o3, a2) {
                var s2 = n2(t4), c2 = e4.exec;
                return c2 === i || c2 === f.exec ? d && !a2 ? { done: true, value: v(e4, r4, o3) } : { done: true, value: s2(r4, e4, o3) } : { done: false };
              });
              o2(String.prototype, t3, m[0]), o2(f, p, m[1]);
            }
            l && c(f[p], "sham", true);
          };
        }, 2104: function(t2, e2, r2) {
          var n2 = r2(4374), o2 = Function.prototype, i = o2.apply, a = o2.call;
          t2.exports = "object" == typeof Reflect && Reflect.apply || (n2 ? a.bind(i) : function() {
            return a.apply(i, arguments);
          });
        }, 9974: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(9662), i = r2(4374), a = n2(n2.bind);
          t2.exports = function(t3, e3) {
            return o2(t3), void 0 === e3 ? t3 : i ? a(t3, e3) : function() {
              return t3.apply(e3, arguments);
            };
          };
        }, 4374: function(t2, e2, r2) {
          var n2 = r2(7293);
          t2.exports = !n2(function() {
            var t3 = function() {
            }.bind();
            return "function" != typeof t3 || t3.hasOwnProperty("prototype");
          });
        }, 6916: function(t2, e2, r2) {
          var n2 = r2(4374), o2 = Function.prototype.call;
          t2.exports = n2 ? o2.bind(o2) : function() {
            return o2.apply(o2, arguments);
          };
        }, 6530: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(2597), i = Function.prototype, a = n2 && Object.getOwnPropertyDescriptor, s = o2(i, "name"), c = s && "something" === function() {
          }.name, u = s && (!n2 || n2 && a(i, "name").configurable);
          t2.exports = { EXISTS: s, PROPER: c, CONFIGURABLE: u };
        }, 1702: function(t2, e2, r2) {
          var n2 = r2(4374), o2 = Function.prototype, i = o2.bind, a = o2.call, s = n2 && i.bind(a, a);
          t2.exports = n2 ? function(t3) {
            return t3 && s(t3);
          } : function(t3) {
            return t3 && function() {
              return a.apply(t3, arguments);
            };
          };
        }, 5005: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(614), i = function(t3) {
            return o2(t3) ? t3 : void 0;
          };
          t2.exports = function(t3, e3) {
            return arguments.length < 2 ? i(n2[t3]) : n2[t3] && n2[t3][e3];
          };
        }, 1246: function(t2, e2, r2) {
          var n2 = r2(648), o2 = r2(8173), i = r2(7497), a = r2(5112), s = a("iterator");
          t2.exports = function(t3) {
            if (void 0 != t3)
              return o2(t3, s) || o2(t3, "@@iterator") || i[n2(t3)];
          };
        }, 8554: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(6916), i = r2(9662), a = r2(9670), s = r2(6330), c = r2(1246), u = n2.TypeError;
          t2.exports = function(t3, e3) {
            var r3 = arguments.length < 2 ? c(t3) : e3;
            if (i(r3))
              return a(o2(r3, t3));
            throw u(s(t3) + " is not iterable");
          };
        }, 8173: function(t2, e2, r2) {
          var n2 = r2(9662);
          t2.exports = function(t3, e3) {
            var r3 = t3[e3];
            return null == r3 ? void 0 : n2(r3);
          };
        }, 647: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(7908), i = Math.floor, a = n2("".charAt), s = n2("".replace), c = n2("".slice), u = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, f = /\$([$&'`]|\d{1,2})/g;
          t2.exports = function(t3, e3, r3, n3, l, p) {
            var d = r3 + t3.length, h = n3.length, v = f;
            return void 0 !== l && (l = o2(l), v = u), s(p, v, function(o3, s2) {
              var u2;
              switch (a(s2, 0)) {
                case "$":
                  return "$";
                case "&":
                  return t3;
                case "`":
                  return c(e3, 0, r3);
                case "'":
                  return c(e3, d);
                case "<":
                  u2 = l[c(s2, 1, -1)];
                  break;
                default:
                  var f2 = +s2;
                  if (0 === f2)
                    return o3;
                  if (f2 > h) {
                    var p2 = i(f2 / 10);
                    return 0 === p2 ? o3 : p2 <= h ? void 0 === n3[p2 - 1] ? a(s2, 1) : n3[p2 - 1] + a(s2, 1) : o3;
                  }
                  u2 = n3[f2 - 1];
              }
              return void 0 === u2 ? "" : u2;
            });
          };
        }, 7854: function(t2, e2, r2) {
          var n2 = function(t3) {
            return t3 && t3.Math == Math && t3;
          };
          t2.exports = n2("object" == typeof globalThis && globalThis) || n2("object" == typeof window && window) || n2("object" == typeof self && self) || n2("object" == typeof r2.g && r2.g) || function() {
            return this;
          }() || Function("return this")();
        }, 2597: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(7908), i = n2({}.hasOwnProperty);
          t2.exports = Object.hasOwn || function(t3, e3) {
            return i(o2(t3), e3);
          };
        }, 3501: function(t2) {
          t2.exports = {};
        }, 842: function(t2, e2, r2) {
          var n2 = r2(7854);
          t2.exports = function(t3, e3) {
            var r3 = n2.console;
            r3 && r3.error && (1 == arguments.length ? r3.error(t3) : r3.error(t3, e3));
          };
        }, 490: function(t2, e2, r2) {
          var n2 = r2(5005);
          t2.exports = n2("document", "documentElement");
        }, 4664: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(7293), i = r2(317);
          t2.exports = !n2 && !o2(function() {
            return 7 != Object.defineProperty(i("div"), "a", { get: function() {
              return 7;
            } }).a;
          });
        }, 8361: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(1702), i = r2(7293), a = r2(4326), s = n2.Object, c = o2("".split);
          t2.exports = i(function() {
            return !s("z").propertyIsEnumerable(0);
          }) ? function(t3) {
            return "String" == a(t3) ? c(t3, "") : s(t3);
          } : s;
        }, 9587: function(t2, e2, r2) {
          var n2 = r2(614), o2 = r2(111), i = r2(7674);
          t2.exports = function(t3, e3, r3) {
            var a, s;
            return i && n2(a = e3.constructor) && a !== r3 && o2(s = a.prototype) && s !== r3.prototype && i(t3, s), t3;
          };
        }, 2788: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(614), i = r2(5465), a = n2(Function.toString);
          o2(i.inspectSource) || (i.inspectSource = function(t3) {
            return a(t3);
          }), t2.exports = i.inspectSource;
        }, 8340: function(t2, e2, r2) {
          var n2 = r2(111), o2 = r2(8880);
          t2.exports = function(t3, e3) {
            n2(e3) && "cause" in e3 && o2(t3, "cause", e3.cause);
          };
        }, 9909: function(t2, e2, r2) {
          var n2, o2, i, a = r2(8536), s = r2(7854), c = r2(1702), u = r2(111), f = r2(8880), l = r2(2597), p = r2(5465), d = r2(6200), h = r2(3501), v = "Object already initialized", m = s.TypeError, g = s.WeakMap, y = function(t3) {
            return i(t3) ? o2(t3) : n2(t3, {});
          }, b = function(t3) {
            return function(e3) {
              var r3;
              if (!u(e3) || (r3 = o2(e3)).type !== t3)
                throw m("Incompatible receiver, " + t3 + " required");
              return r3;
            };
          };
          if (a || p.state) {
            var k = p.state || (p.state = new g()), x = c(k.get), w = c(k.has), S = c(k.set);
            n2 = function(t3, e3) {
              if (w(k, t3))
                throw new m(v);
              return e3.facade = t3, S(k, t3, e3), e3;
            }, o2 = function(t3) {
              return x(k, t3) || {};
            }, i = function(t3) {
              return w(k, t3);
            };
          } else {
            var _ = d("state");
            h[_] = true, n2 = function(t3, e3) {
              if (l(t3, _))
                throw new m(v);
              return e3.facade = t3, f(t3, _, e3), e3;
            }, o2 = function(t3) {
              return l(t3, _) ? t3[_] : {};
            }, i = function(t3) {
              return l(t3, _);
            };
          }
          t2.exports = { set: n2, get: o2, has: i, enforce: y, getterFor: b };
        }, 7659: function(t2, e2, r2) {
          var n2 = r2(5112), o2 = r2(7497), i = n2("iterator"), a = Array.prototype;
          t2.exports = function(t3) {
            return void 0 !== t3 && (o2.Array === t3 || a[i] === t3);
          };
        }, 3157: function(t2, e2, r2) {
          var n2 = r2(4326);
          t2.exports = Array.isArray || function(t3) {
            return "Array" == n2(t3);
          };
        }, 614: function(t2) {
          t2.exports = function(t3) {
            return "function" == typeof t3;
          };
        }, 4411: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(7293), i = r2(614), a = r2(648), s = r2(5005), c = r2(2788), u = function() {
          }, f = [], l = s("Reflect", "construct"), p = /^\s*(?:class|function)\b/, d = n2(p.exec), h = !p.exec(u), v = function(t3) {
            if (!i(t3))
              return false;
            try {
              return l(u, f, t3), true;
            } catch (e3) {
              return false;
            }
          }, m = function(t3) {
            if (!i(t3))
              return false;
            switch (a(t3)) {
              case "AsyncFunction":
              case "GeneratorFunction":
              case "AsyncGeneratorFunction":
                return false;
            }
            try {
              return h || !!d(p, c(t3));
            } catch (e3) {
              return true;
            }
          };
          m.sham = true, t2.exports = !l || o2(function() {
            var t3;
            return v(v.call) || !v(Object) || !v(function() {
              t3 = true;
            }) || t3;
          }) ? m : v;
        }, 4705: function(t2, e2, r2) {
          var n2 = r2(7293), o2 = r2(614), i = /#|\.prototype\./, a = function(t3, e3) {
            var r3 = c[s(t3)];
            return r3 == f || r3 != u && (o2(e3) ? n2(e3) : !!e3);
          }, s = a.normalize = function(t3) {
            return String(t3).replace(i, ".").toLowerCase();
          }, c = a.data = {}, u = a.NATIVE = "N", f = a.POLYFILL = "P";
          t2.exports = a;
        }, 111: function(t2, e2, r2) {
          var n2 = r2(614);
          t2.exports = function(t3) {
            return "object" == typeof t3 ? null !== t3 : n2(t3);
          };
        }, 1913: function(t2) {
          t2.exports = false;
        }, 7850: function(t2, e2, r2) {
          var n2 = r2(111), o2 = r2(4326), i = r2(5112), a = i("match");
          t2.exports = function(t3) {
            var e3;
            return n2(t3) && (void 0 !== (e3 = t3[a]) ? !!e3 : "RegExp" == o2(t3));
          };
        }, 2190: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(5005), i = r2(614), a = r2(7976), s = r2(3307), c = n2.Object;
          t2.exports = s ? function(t3) {
            return "symbol" == typeof t3;
          } : function(t3) {
            var e3 = o2("Symbol");
            return i(e3) && a(e3.prototype, c(t3));
          };
        }, 408: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(9974), i = r2(6916), a = r2(9670), s = r2(6330), c = r2(7659), u = r2(6244), f = r2(7976), l = r2(8554), p = r2(1246), d = r2(9212), h = n2.TypeError, v = function(t3, e3) {
            this.stopped = t3, this.result = e3;
          }, m = v.prototype;
          t2.exports = function(t3, e3, r3) {
            var n3, g, y, b, k, x, w, S = r3 && r3.that, _ = !(!r3 || !r3.AS_ENTRIES), E = !(!r3 || !r3.IS_ITERATOR), O = !(!r3 || !r3.INTERRUPTED), C = o2(e3, S), T = function(t4) {
              return n3 && d(n3, "normal", t4), new v(true, t4);
            }, j = function(t4) {
              return _ ? (a(t4), O ? C(t4[0], t4[1], T) : C(t4[0], t4[1])) : O ? C(t4, T) : C(t4);
            };
            if (E)
              n3 = t3;
            else {
              if (g = p(t3), !g)
                throw h(s(t3) + " is not iterable");
              if (c(g)) {
                for (y = 0, b = u(t3); b > y; y++)
                  if (k = j(t3[y]), k && f(m, k))
                    return k;
                return new v(false);
              }
              n3 = l(t3, g);
            }
            x = n3.next;
            while (!(w = i(x, n3)).done) {
              try {
                k = j(w.value);
              } catch (P) {
                d(n3, "throw", P);
              }
              if ("object" == typeof k && k && f(m, k))
                return k;
            }
            return new v(false);
          };
        }, 9212: function(t2, e2, r2) {
          var n2 = r2(6916), o2 = r2(9670), i = r2(8173);
          t2.exports = function(t3, e3, r3) {
            var a, s;
            o2(t3);
            try {
              if (a = i(t3, "return"), !a) {
                if ("throw" === e3)
                  throw r3;
                return r3;
              }
              a = n2(a, t3);
            } catch (c) {
              s = true, a = c;
            }
            if ("throw" === e3)
              throw r3;
            if (s)
              throw a;
            return o2(a), r3;
          };
        }, 3383: function(t2, e2, r2) {
          "use strict";
          var n2, o2, i, a = r2(7293), s = r2(614), c = r2(30), u = r2(9518), f = r2(1320), l = r2(5112), p = r2(1913), d = l("iterator"), h = false;
          [].keys && (i = [].keys(), "next" in i ? (o2 = u(u(i)), o2 !== Object.prototype && (n2 = o2)) : h = true);
          var v = void 0 == n2 || a(function() {
            var t3 = {};
            return n2[d].call(t3) !== t3;
          });
          v ? n2 = {} : p && (n2 = c(n2)), s(n2[d]) || f(n2, d, function() {
            return this;
          }), t2.exports = { IteratorPrototype: n2, BUGGY_SAFARI_ITERATORS: h };
        }, 7497: function(t2) {
          t2.exports = {};
        }, 6244: function(t2, e2, r2) {
          var n2 = r2(7466);
          t2.exports = function(t3) {
            return n2(t3.length);
          };
        }, 5948: function(t2, e2, r2) {
          var n2, o2, i, a, s, c, u, f, l = r2(7854), p = r2(9974), d = r2(1236).f, h = r2(261).set, v = r2(6833), m = r2(1528), g = r2(1036), y = r2(5268), b = l.MutationObserver || l.WebKitMutationObserver, k = l.document, x = l.process, w = l.Promise, S = d(l, "queueMicrotask"), _ = S && S.value;
          _ || (n2 = function() {
            var t3, e3;
            y && (t3 = x.domain) && t3.exit();
            while (o2) {
              e3 = o2.fn, o2 = o2.next;
              try {
                e3();
              } catch (r3) {
                throw o2 ? a() : i = void 0, r3;
              }
            }
            i = void 0, t3 && t3.enter();
          }, v || y || g || !b || !k ? !m && w && w.resolve ? (u = w.resolve(void 0), u.constructor = w, f = p(u.then, u), a = function() {
            f(n2);
          }) : y ? a = function() {
            x.nextTick(n2);
          } : (h = p(h, l), a = function() {
            h(n2);
          }) : (s = true, c = k.createTextNode(""), new b(n2).observe(c, { characterData: true }), a = function() {
            c.data = s = !s;
          })), t2.exports = _ || function(t3) {
            var e3 = { fn: t3, next: void 0 };
            i && (i.next = e3), o2 || (o2 = e3, a()), i = e3;
          };
        }, 3366: function(t2, e2, r2) {
          var n2 = r2(7854);
          t2.exports = n2.Promise;
        }, 133: function(t2, e2, r2) {
          var n2 = r2(7392), o2 = r2(7293);
          t2.exports = !!Object.getOwnPropertySymbols && !o2(function() {
            var t3 = Symbol();
            return !String(t3) || !(Object(t3) instanceof Symbol) || !Symbol.sham && n2 && n2 < 41;
          });
        }, 8536: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(614), i = r2(2788), a = n2.WeakMap;
          t2.exports = o2(a) && /native code/.test(i(a));
        }, 8523: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(9662), o2 = function(t3) {
            var e3, r3;
            this.promise = new t3(function(t4, n3) {
              if (void 0 !== e3 || void 0 !== r3)
                throw TypeError("Bad Promise constructor");
              e3 = t4, r3 = n3;
            }), this.resolve = n2(e3), this.reject = n2(r3);
          };
          t2.exports.f = function(t3) {
            return new o2(t3);
          };
        }, 6277: function(t2, e2, r2) {
          var n2 = r2(1340);
          t2.exports = function(t3, e3) {
            return void 0 === t3 ? arguments.length < 2 ? "" : e3 : n2(t3);
          };
        }, 3929: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(7850), i = n2.TypeError;
          t2.exports = function(t3) {
            if (o2(t3))
              throw i("The method doesn't accept regular expressions");
            return t3;
          };
        }, 30: function(t2, e2, r2) {
          var n2, o2 = r2(9670), i = r2(6048), a = r2(748), s = r2(3501), c = r2(490), u = r2(317), f = r2(6200), l = ">", p = "<", d = "prototype", h = "script", v = f("IE_PROTO"), m = function() {
          }, g = function(t3) {
            return p + h + l + t3 + p + "/" + h + l;
          }, y = function(t3) {
            t3.write(g("")), t3.close();
            var e3 = t3.parentWindow.Object;
            return t3 = null, e3;
          }, b = function() {
            var t3, e3 = u("iframe"), r3 = "java" + h + ":";
            return e3.style.display = "none", c.appendChild(e3), e3.src = String(r3), t3 = e3.contentWindow.document, t3.open(), t3.write(g("document.F=Object")), t3.close(), t3.F;
          }, k = function() {
            try {
              n2 = new ActiveXObject("htmlfile");
            } catch (e3) {
            }
            k = "undefined" != typeof document ? document.domain && n2 ? y(n2) : b() : y(n2);
            var t3 = a.length;
            while (t3--)
              delete k[d][a[t3]];
            return k();
          };
          s[v] = true, t2.exports = Object.create || function(t3, e3) {
            var r3;
            return null !== t3 ? (m[d] = o2(t3), r3 = new m(), m[d] = null, r3[v] = t3) : r3 = k(), void 0 === e3 ? r3 : i.f(r3, e3);
          };
        }, 6048: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(3353), i = r2(3070), a = r2(9670), s = r2(5656), c = r2(1956);
          e2.f = n2 && !o2 ? Object.defineProperties : function(t3, e3) {
            a(t3);
            var r3, n3 = s(e3), o3 = c(e3), u = o3.length, f = 0;
            while (u > f)
              i.f(t3, r3 = o3[f++], n3[r3]);
            return t3;
          };
        }, 3070: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(9781), i = r2(4664), a = r2(3353), s = r2(9670), c = r2(4948), u = n2.TypeError, f = Object.defineProperty, l = Object.getOwnPropertyDescriptor, p = "enumerable", d = "configurable", h = "writable";
          e2.f = o2 ? a ? function(t3, e3, r3) {
            if (s(t3), e3 = c(e3), s(r3), "function" === typeof t3 && "prototype" === e3 && "value" in r3 && h in r3 && !r3[h]) {
              var n3 = l(t3, e3);
              n3 && n3[h] && (t3[e3] = r3.value, r3 = { configurable: d in r3 ? r3[d] : n3[d], enumerable: p in r3 ? r3[p] : n3[p], writable: false });
            }
            return f(t3, e3, r3);
          } : f : function(t3, e3, r3) {
            if (s(t3), e3 = c(e3), s(r3), i)
              try {
                return f(t3, e3, r3);
              } catch (n3) {
              }
            if ("get" in r3 || "set" in r3)
              throw u("Accessors not supported");
            return "value" in r3 && (t3[e3] = r3.value), t3;
          };
        }, 1236: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(6916), i = r2(5296), a = r2(9114), s = r2(5656), c = r2(4948), u = r2(2597), f = r2(4664), l = Object.getOwnPropertyDescriptor;
          e2.f = n2 ? l : function(t3, e3) {
            if (t3 = s(t3), e3 = c(e3), f)
              try {
                return l(t3, e3);
              } catch (r3) {
              }
            if (u(t3, e3))
              return a(!o2(i.f, t3, e3), t3[e3]);
          };
        }, 1156: function(t2, e2, r2) {
          var n2 = r2(4326), o2 = r2(5656), i = r2(8006).f, a = r2(1589), s = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], c = function(t3) {
            try {
              return i(t3);
            } catch (e3) {
              return a(s);
            }
          };
          t2.exports.f = function(t3) {
            return s && "Window" == n2(t3) ? c(t3) : i(o2(t3));
          };
        }, 8006: function(t2, e2, r2) {
          var n2 = r2(6324), o2 = r2(748), i = o2.concat("length", "prototype");
          e2.f = Object.getOwnPropertyNames || function(t3) {
            return n2(t3, i);
          };
        }, 5181: function(t2, e2) {
          e2.f = Object.getOwnPropertySymbols;
        }, 9518: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(2597), i = r2(614), a = r2(7908), s = r2(6200), c = r2(8544), u = s("IE_PROTO"), f = n2.Object, l = f.prototype;
          t2.exports = c ? f.getPrototypeOf : function(t3) {
            var e3 = a(t3);
            if (o2(e3, u))
              return e3[u];
            var r3 = e3.constructor;
            return i(r3) && e3 instanceof r3 ? r3.prototype : e3 instanceof f ? l : null;
          };
        }, 7976: function(t2, e2, r2) {
          var n2 = r2(1702);
          t2.exports = n2({}.isPrototypeOf);
        }, 6324: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(2597), i = r2(5656), a = r2(1318).indexOf, s = r2(3501), c = n2([].push);
          t2.exports = function(t3, e3) {
            var r3, n3 = i(t3), u = 0, f = [];
            for (r3 in n3)
              !o2(s, r3) && o2(n3, r3) && c(f, r3);
            while (e3.length > u)
              o2(n3, r3 = e3[u++]) && (~a(f, r3) || c(f, r3));
            return f;
          };
        }, 1956: function(t2, e2, r2) {
          var n2 = r2(6324), o2 = r2(748);
          t2.exports = Object.keys || function(t3) {
            return n2(t3, o2);
          };
        }, 5296: function(t2, e2) {
          "use strict";
          var r2 = {}.propertyIsEnumerable, n2 = Object.getOwnPropertyDescriptor, o2 = n2 && !r2.call({ 1: 2 }, 1);
          e2.f = o2 ? function(t3) {
            var e3 = n2(this, t3);
            return !!e3 && e3.enumerable;
          } : r2;
        }, 7674: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(9670), i = r2(6077);
          t2.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
            var t3, e3 = false, r3 = {};
            try {
              t3 = n2(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set), t3(r3, []), e3 = r3 instanceof Array;
            } catch (a) {
            }
            return function(r4, n3) {
              return o2(r4), i(n3), e3 ? t3(r4, n3) : r4.__proto__ = n3, r4;
            };
          }() : void 0);
        }, 288: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(1694), o2 = r2(648);
          t2.exports = n2 ? {}.toString : function() {
            return "[object " + o2(this) + "]";
          };
        }, 2140: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(6916), i = r2(614), a = r2(111), s = n2.TypeError;
          t2.exports = function(t3, e3) {
            var r3, n3;
            if ("string" === e3 && i(r3 = t3.toString) && !a(n3 = o2(r3, t3)))
              return n3;
            if (i(r3 = t3.valueOf) && !a(n3 = o2(r3, t3)))
              return n3;
            if ("string" !== e3 && i(r3 = t3.toString) && !a(n3 = o2(r3, t3)))
              return n3;
            throw s("Can't convert object to primitive value");
          };
        }, 3887: function(t2, e2, r2) {
          var n2 = r2(5005), o2 = r2(1702), i = r2(8006), a = r2(5181), s = r2(9670), c = o2([].concat);
          t2.exports = n2("Reflect", "ownKeys") || function(t3) {
            var e3 = i.f(s(t3)), r3 = a.f;
            return r3 ? c(e3, r3(t3)) : e3;
          };
        }, 857: function(t2, e2, r2) {
          var n2 = r2(7854);
          t2.exports = n2;
        }, 2534: function(t2) {
          t2.exports = function(t3) {
            try {
              return { error: false, value: t3() };
            } catch (e2) {
              return { error: true, value: e2 };
            }
          };
        }, 9478: function(t2, e2, r2) {
          var n2 = r2(9670), o2 = r2(111), i = r2(8523);
          t2.exports = function(t3, e3) {
            if (n2(t3), o2(e3) && e3.constructor === t3)
              return e3;
            var r3 = i.f(t3), a = r3.resolve;
            return a(e3), r3.promise;
          };
        }, 8572: function(t2) {
          var e2 = function() {
            this.head = null, this.tail = null;
          };
          e2.prototype = { add: function(t3) {
            var e3 = { item: t3, next: null };
            this.head ? this.tail.next = e3 : this.head = e3, this.tail = e3;
          }, get: function() {
            var t3 = this.head;
            if (t3)
              return this.head = t3.next, this.tail === t3 && (this.tail = null), t3.item;
          } }, t2.exports = e2;
        }, 2248: function(t2, e2, r2) {
          var n2 = r2(1320);
          t2.exports = function(t3, e3, r3) {
            for (var o2 in e3)
              n2(t3, o2, e3[o2], r3);
            return t3;
          };
        }, 1320: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(614), i = r2(2597), a = r2(8880), s = r2(3505), c = r2(2788), u = r2(9909), f = r2(6530).CONFIGURABLE, l = u.get, p = u.enforce, d = String(String).split("String");
          (t2.exports = function(t3, e3, r3, c2) {
            var u2, l2 = !!c2 && !!c2.unsafe, h = !!c2 && !!c2.enumerable, v = !!c2 && !!c2.noTargetGet, m = c2 && void 0 !== c2.name ? c2.name : e3;
            o2(r3) && ("Symbol(" === String(m).slice(0, 7) && (m = "[" + String(m).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!i(r3, "name") || f && r3.name !== m) && a(r3, "name", m), u2 = p(r3), u2.source || (u2.source = d.join("string" == typeof m ? m : ""))), t3 !== n2 ? (l2 ? !v && t3[e3] && (h = true) : delete t3[e3], h ? t3[e3] = r3 : a(t3, e3, r3)) : h ? t3[e3] = r3 : s(e3, r3);
          })(Function.prototype, "toString", function() {
            return o2(this) && l(this).source || c(this);
          });
        }, 7651: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(6916), i = r2(9670), a = r2(614), s = r2(4326), c = r2(2261), u = n2.TypeError;
          t2.exports = function(t3, e3) {
            var r3 = t3.exec;
            if (a(r3)) {
              var n3 = o2(r3, t3, e3);
              return null !== n3 && i(n3), n3;
            }
            if ("RegExp" === s(t3))
              return o2(c, t3, e3);
            throw u("RegExp#exec called on incompatible receiver");
          };
        }, 2261: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(6916), o2 = r2(1702), i = r2(1340), a = r2(7066), s = r2(2999), c = r2(2309), u = r2(30), f = r2(9909).get, l = r2(9441), p = r2(7168), d = c("native-string-replace", String.prototype.replace), h = RegExp.prototype.exec, v = h, m = o2("".charAt), g = o2("".indexOf), y = o2("".replace), b = o2("".slice), k = function() {
            var t3 = /a/, e3 = /b*/g;
            return n2(h, t3, "a"), n2(h, e3, "a"), 0 !== t3.lastIndex || 0 !== e3.lastIndex;
          }(), x = s.BROKEN_CARET, w = void 0 !== /()??/.exec("")[1], S = k || w || x || l || p;
          S && (v = function(t3) {
            var e3, r3, o3, s2, c2, l2, p2, S2 = this, _ = f(S2), E = i(t3), O = _.raw;
            if (O)
              return O.lastIndex = S2.lastIndex, e3 = n2(v, O, E), S2.lastIndex = O.lastIndex, e3;
            var C = _.groups, T = x && S2.sticky, j = n2(a, S2), P = S2.source, F = 0, N = E;
            if (T && (j = y(j, "y", ""), -1 === g(j, "g") && (j += "g"), N = b(E, S2.lastIndex), S2.lastIndex > 0 && (!S2.multiline || S2.multiline && "\n" !== m(E, S2.lastIndex - 1)) && (P = "(?: " + P + ")", N = " " + N, F++), r3 = new RegExp("^(?:" + P + ")", j)), w && (r3 = new RegExp("^" + P + "$(?!\\s)", j)), k && (o3 = S2.lastIndex), s2 = n2(h, T ? r3 : S2, N), T ? s2 ? (s2.input = b(s2.input, F), s2[0] = b(s2[0], F), s2.index = S2.lastIndex, S2.lastIndex += s2[0].length) : S2.lastIndex = 0 : k && s2 && (S2.lastIndex = S2.global ? s2.index + s2[0].length : o3), w && s2 && s2.length > 1 && n2(d, s2[0], r3, function() {
              for (c2 = 1; c2 < arguments.length - 2; c2++)
                void 0 === arguments[c2] && (s2[c2] = void 0);
            }), s2 && C)
              for (s2.groups = l2 = u(null), c2 = 0; c2 < C.length; c2++)
                p2 = C[c2], l2[p2[0]] = s2[p2[1]];
            return s2;
          }), t2.exports = v;
        }, 7066: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(9670);
          t2.exports = function() {
            var t3 = n2(this), e3 = "";
            return t3.global && (e3 += "g"), t3.ignoreCase && (e3 += "i"), t3.multiline && (e3 += "m"), t3.dotAll && (e3 += "s"), t3.unicode && (e3 += "u"), t3.sticky && (e3 += "y"), e3;
          };
        }, 2999: function(t2, e2, r2) {
          var n2 = r2(7293), o2 = r2(7854), i = o2.RegExp, a = n2(function() {
            var t3 = i("a", "y");
            return t3.lastIndex = 2, null != t3.exec("abcd");
          }), s = a || n2(function() {
            return !i("a", "y").sticky;
          }), c = a || n2(function() {
            var t3 = i("^r", "gy");
            return t3.lastIndex = 2, null != t3.exec("str");
          });
          t2.exports = { BROKEN_CARET: c, MISSED_STICKY: s, UNSUPPORTED_Y: a };
        }, 9441: function(t2, e2, r2) {
          var n2 = r2(7293), o2 = r2(7854), i = o2.RegExp;
          t2.exports = n2(function() {
            var t3 = i(".", "s");
            return !(t3.dotAll && t3.exec("\n") && "s" === t3.flags);
          });
        }, 7168: function(t2, e2, r2) {
          var n2 = r2(7293), o2 = r2(7854), i = o2.RegExp;
          t2.exports = n2(function() {
            var t3 = i("(?<a>b)", "g");
            return "b" !== t3.exec("b").groups.a || "bc" !== "b".replace(t3, "$<a>c");
          });
        }, 4488: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = n2.TypeError;
          t2.exports = function(t3) {
            if (void 0 == t3)
              throw o2("Can't call method on " + t3);
            return t3;
          };
        }, 3505: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = Object.defineProperty;
          t2.exports = function(t3, e3) {
            try {
              o2(n2, t3, { value: e3, configurable: true, writable: true });
            } catch (r3) {
              n2[t3] = e3;
            }
            return e3;
          };
        }, 6340: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(5005), o2 = r2(3070), i = r2(5112), a = r2(9781), s = i("species");
          t2.exports = function(t3) {
            var e3 = n2(t3), r3 = o2.f;
            a && e3 && !e3[s] && r3(e3, s, { configurable: true, get: function() {
              return this;
            } });
          };
        }, 8003: function(t2, e2, r2) {
          var n2 = r2(3070).f, o2 = r2(2597), i = r2(5112), a = i("toStringTag");
          t2.exports = function(t3, e3, r3) {
            t3 && !r3 && (t3 = t3.prototype), t3 && !o2(t3, a) && n2(t3, a, { configurable: true, value: e3 });
          };
        }, 6200: function(t2, e2, r2) {
          var n2 = r2(2309), o2 = r2(9711), i = n2("keys");
          t2.exports = function(t3) {
            return i[t3] || (i[t3] = o2(t3));
          };
        }, 5465: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(3505), i = "__core-js_shared__", a = n2[i] || o2(i, {});
          t2.exports = a;
        }, 2309: function(t2, e2, r2) {
          var n2 = r2(1913), o2 = r2(5465);
          (t2.exports = function(t3, e3) {
            return o2[t3] || (o2[t3] = void 0 !== e3 ? e3 : {});
          })("versions", []).push({ version: "3.21.1", mode: n2 ? "pure" : "global", copyright: "\xA9 2014-2022 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE", source: "https://github.com/zloirock/core-js" });
        }, 6707: function(t2, e2, r2) {
          var n2 = r2(9670), o2 = r2(9483), i = r2(5112), a = i("species");
          t2.exports = function(t3, e3) {
            var r3, i2 = n2(t3).constructor;
            return void 0 === i2 || void 0 == (r3 = n2(i2)[a]) ? e3 : o2(r3);
          };
        }, 8710: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(9303), i = r2(1340), a = r2(4488), s = n2("".charAt), c = n2("".charCodeAt), u = n2("".slice), f = function(t3) {
            return function(e3, r3) {
              var n3, f2, l = i(a(e3)), p = o2(r3), d = l.length;
              return p < 0 || p >= d ? t3 ? "" : void 0 : (n3 = c(l, p), n3 < 55296 || n3 > 56319 || p + 1 === d || (f2 = c(l, p + 1)) < 56320 || f2 > 57343 ? t3 ? s(l, p) : n3 : t3 ? u(l, p, p + 2) : f2 - 56320 + (n3 - 55296 << 10) + 65536);
            };
          };
          t2.exports = { codeAt: f(false), charAt: f(true) };
        }, 8415: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(7854), o2 = r2(9303), i = r2(1340), a = r2(4488), s = n2.RangeError;
          t2.exports = function(t3) {
            var e3 = i(a(this)), r3 = "", n3 = o2(t3);
            if (n3 < 0 || n3 == 1 / 0)
              throw s("Wrong number of repetitions");
            for (; n3 > 0; (n3 >>>= 1) && (e3 += e3))
              1 & n3 && (r3 += e3);
            return r3;
          };
        }, 6091: function(t2, e2, r2) {
          var n2 = r2(6530).PROPER, o2 = r2(7293), i = r2(1361), a = "\u200B\x85\u180E";
          t2.exports = function(t3) {
            return o2(function() {
              return !!i[t3]() || a[t3]() !== a || n2 && i[t3].name !== t3;
            });
          };
        }, 3111: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = r2(4488), i = r2(1340), a = r2(1361), s = n2("".replace), c = "[" + a + "]", u = RegExp("^" + c + c + "*"), f = RegExp(c + c + "*$"), l = function(t3) {
            return function(e3) {
              var r3 = i(o2(e3));
              return 1 & t3 && (r3 = s(r3, u, "")), 2 & t3 && (r3 = s(r3, f, "")), r3;
            };
          };
          t2.exports = { start: l(1), end: l(2), trim: l(3) };
        }, 261: function(t2, e2, r2) {
          var n2, o2, i, a, s = r2(7854), c = r2(2104), u = r2(9974), f = r2(614), l = r2(2597), p = r2(7293), d = r2(490), h = r2(206), v = r2(317), m = r2(8053), g = r2(6833), y = r2(5268), b = s.setImmediate, k = s.clearImmediate, x = s.process, w = s.Dispatch, S = s.Function, _ = s.MessageChannel, E = s.String, O = 0, C = {}, T = "onreadystatechange";
          try {
            n2 = s.location;
          } catch (I) {
          }
          var j = function(t3) {
            if (l(C, t3)) {
              var e3 = C[t3];
              delete C[t3], e3();
            }
          }, P = function(t3) {
            return function() {
              j(t3);
            };
          }, F = function(t3) {
            j(t3.data);
          }, N = function(t3) {
            s.postMessage(E(t3), n2.protocol + "//" + n2.host);
          };
          b && k || (b = function(t3) {
            m(arguments.length, 1);
            var e3 = f(t3) ? t3 : S(t3), r3 = h(arguments, 1);
            return C[++O] = function() {
              c(e3, void 0, r3);
            }, o2(O), O;
          }, k = function(t3) {
            delete C[t3];
          }, y ? o2 = function(t3) {
            x.nextTick(P(t3));
          } : w && w.now ? o2 = function(t3) {
            w.now(P(t3));
          } : _ && !g ? (i = new _(), a = i.port2, i.port1.onmessage = F, o2 = u(a.postMessage, a)) : s.addEventListener && f(s.postMessage) && !s.importScripts && n2 && "file:" !== n2.protocol && !p(N) ? (o2 = N, s.addEventListener("message", F, false)) : o2 = T in v("script") ? function(t3) {
            d.appendChild(v("script"))[T] = function() {
              d.removeChild(this), j(t3);
            };
          } : function(t3) {
            setTimeout(P(t3), 0);
          }), t2.exports = { set: b, clear: k };
        }, 863: function(t2, e2, r2) {
          var n2 = r2(1702);
          t2.exports = n2(1 .valueOf);
        }, 1400: function(t2, e2, r2) {
          var n2 = r2(9303), o2 = Math.max, i = Math.min;
          t2.exports = function(t3, e3) {
            var r3 = n2(t3);
            return r3 < 0 ? o2(r3 + e3, 0) : i(r3, e3);
          };
        }, 5656: function(t2, e2, r2) {
          var n2 = r2(8361), o2 = r2(4488);
          t2.exports = function(t3) {
            return n2(o2(t3));
          };
        }, 9303: function(t2) {
          var e2 = Math.ceil, r2 = Math.floor;
          t2.exports = function(t3) {
            var n2 = +t3;
            return n2 !== n2 || 0 === n2 ? 0 : (n2 > 0 ? r2 : e2)(n2);
          };
        }, 7466: function(t2, e2, r2) {
          var n2 = r2(9303), o2 = Math.min;
          t2.exports = function(t3) {
            return t3 > 0 ? o2(n2(t3), 9007199254740991) : 0;
          };
        }, 7908: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(4488), i = n2.Object;
          t2.exports = function(t3) {
            return i(o2(t3));
          };
        }, 7593: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(6916), i = r2(111), a = r2(2190), s = r2(8173), c = r2(2140), u = r2(5112), f = n2.TypeError, l = u("toPrimitive");
          t2.exports = function(t3, e3) {
            if (!i(t3) || a(t3))
              return t3;
            var r3, n3 = s(t3, l);
            if (n3) {
              if (void 0 === e3 && (e3 = "default"), r3 = o2(n3, t3, e3), !i(r3) || a(r3))
                return r3;
              throw f("Can't convert object to primitive value");
            }
            return void 0 === e3 && (e3 = "number"), c(t3, e3);
          };
        }, 4948: function(t2, e2, r2) {
          var n2 = r2(7593), o2 = r2(2190);
          t2.exports = function(t3) {
            var e3 = n2(t3, "string");
            return o2(e3) ? e3 : e3 + "";
          };
        }, 1694: function(t2, e2, r2) {
          var n2 = r2(5112), o2 = n2("toStringTag"), i = {};
          i[o2] = "z", t2.exports = "[object z]" === String(i);
        }, 1340: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(648), i = n2.String;
          t2.exports = function(t3) {
            if ("Symbol" === o2(t3))
              throw TypeError("Cannot convert a Symbol value to a string");
            return i(t3);
          };
        }, 6330: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = n2.String;
          t2.exports = function(t3) {
            try {
              return o2(t3);
            } catch (e3) {
              return "Object";
            }
          };
        }, 9711: function(t2, e2, r2) {
          var n2 = r2(1702), o2 = 0, i = Math.random(), a = n2(1 .toString);
          t2.exports = function(t3) {
            return "Symbol(" + (void 0 === t3 ? "" : t3) + ")_" + a(++o2 + i, 36);
          };
        }, 3307: function(t2, e2, r2) {
          var n2 = r2(133);
          t2.exports = n2 && !Symbol.sham && "symbol" == typeof Symbol.iterator;
        }, 3353: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(7293);
          t2.exports = n2 && o2(function() {
            return 42 != Object.defineProperty(function() {
            }, "prototype", { value: 42, writable: false }).prototype;
          });
        }, 8053: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = n2.TypeError;
          t2.exports = function(t3, e3) {
            if (t3 < e3)
              throw o2("Not enough arguments");
            return t3;
          };
        }, 6061: function(t2, e2, r2) {
          var n2 = r2(5112);
          e2.f = n2;
        }, 5112: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(2309), i = r2(2597), a = r2(9711), s = r2(133), c = r2(3307), u = o2("wks"), f = n2.Symbol, l = f && f["for"], p = c ? f : f && f.withoutSetter || a;
          t2.exports = function(t3) {
            if (!i(u, t3) || !s && "string" != typeof u[t3]) {
              var e3 = "Symbol." + t3;
              s && i(f, t3) ? u[t3] = f[t3] : u[t3] = c && l ? l(e3) : p(e3);
            }
            return u[t3];
          };
        }, 1361: function(t2) {
          t2.exports = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
        }, 9191: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(5005), o2 = r2(2597), i = r2(8880), a = r2(7976), s = r2(7674), c = r2(9920), u = r2(9587), f = r2(6277), l = r2(8340), p = r2(7741), d = r2(2914), h = r2(1913);
          t2.exports = function(t3, e3, r3, v) {
            var m = v ? 2 : 1, g = t3.split("."), y = g[g.length - 1], b = n2.apply(null, g);
            if (b) {
              var k = b.prototype;
              if (!h && o2(k, "cause") && delete k.cause, !r3)
                return b;
              var x = n2("Error"), w = e3(function(t4, e4) {
                var r4 = f(v ? e4 : t4, void 0), n3 = v ? new b(t4) : new b();
                return void 0 !== r4 && i(n3, "message", r4), d && i(n3, "stack", p(n3.stack, 2)), this && a(k, this) && u(n3, this, w), arguments.length > m && l(n3, arguments[m]), n3;
              });
              if (w.prototype = k, "Error" !== y && (s ? s(w, x) : c(w, x, { name: true })), c(w, b), !h)
                try {
                  k.name !== y && i(k, "name", y), k.constructor = w;
                } catch (S) {
                }
              return w;
            }
          };
        }, 2222: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(7854), i = r2(7293), a = r2(3157), s = r2(111), c = r2(7908), u = r2(6244), f = r2(6135), l = r2(5417), p = r2(1194), d = r2(5112), h = r2(7392), v = d("isConcatSpreadable"), m = 9007199254740991, g = "Maximum allowed index exceeded", y = o2.TypeError, b = h >= 51 || !i(function() {
            var t3 = [];
            return t3[v] = false, t3.concat()[0] !== t3;
          }), k = p("concat"), x = function(t3) {
            if (!s(t3))
              return false;
            var e3 = t3[v];
            return void 0 !== e3 ? !!e3 : a(t3);
          }, w = !b || !k;
          n2({ target: "Array", proto: true, forced: w }, { concat: function(t3) {
            var e3, r3, n3, o3, i2, a2 = c(this), s2 = l(a2, 0), p2 = 0;
            for (e3 = -1, n3 = arguments.length; e3 < n3; e3++)
              if (i2 = -1 === e3 ? a2 : arguments[e3], x(i2)) {
                if (o3 = u(i2), p2 + o3 > m)
                  throw y(g);
                for (r3 = 0; r3 < o3; r3++, p2++)
                  r3 in i2 && f(s2, p2, i2[r3]);
              } else {
                if (p2 >= m)
                  throw y(g);
                f(s2, p2++, i2);
              }
            return s2.length = p2, s2;
          } });
        }, 3290: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(1285), i = r2(1223);
          n2({ target: "Array", proto: true }, { fill: o2 }), i("fill");
        }, 7327: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(2092).filter, i = r2(1194), a = i("filter");
          n2({ target: "Array", proto: true, forced: !a }, { filter: function(t3) {
            return o2(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          } });
        }, 1038: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(8457), i = r2(7072), a = !i(function(t3) {
            Array.from(t3);
          });
          n2({ target: "Array", stat: true, forced: a }, { from: o2 });
        }, 6699: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(1318).includes, i = r2(1223);
          n2({ target: "Array", proto: true }, { includes: function(t3) {
            return o2(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          } }), i("includes");
        }, 6992: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(5656), o2 = r2(1223), i = r2(7497), a = r2(9909), s = r2(3070).f, c = r2(654), u = r2(1913), f = r2(9781), l = "Array Iterator", p = a.set, d = a.getterFor(l);
          t2.exports = c(Array, "Array", function(t3, e3) {
            p(this, { type: l, target: n2(t3), index: 0, kind: e3 });
          }, function() {
            var t3 = d(this), e3 = t3.target, r3 = t3.kind, n3 = t3.index++;
            return !e3 || n3 >= e3.length ? (t3.target = void 0, { value: void 0, done: true }) : "keys" == r3 ? { value: n3, done: false } : "values" == r3 ? { value: e3[n3], done: false } : { value: [n3, e3[n3]], done: false };
          }, "values");
          var h = i.Arguments = i.Array;
          if (o2("keys"), o2("values"), o2("entries"), !u && f && "values" !== h.name)
            try {
              s(h, "name", { value: "values" });
            } catch (v) {
            }
        }, 9600: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(1702), i = r2(8361), a = r2(5656), s = r2(9341), c = o2([].join), u = i != Object, f = s("join", ",");
          n2({ target: "Array", proto: true, forced: u || !f }, { join: function(t3) {
            return c(a(this), void 0 === t3 ? "," : t3);
          } });
        }, 1249: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(2092).map, i = r2(1194), a = i("map");
          n2({ target: "Array", proto: true, forced: !a }, { map: function(t3) {
            return o2(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          } });
        }, 7042: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(7854), i = r2(3157), a = r2(4411), s = r2(111), c = r2(1400), u = r2(6244), f = r2(5656), l = r2(6135), p = r2(5112), d = r2(1194), h = r2(206), v = d("slice"), m = p("species"), g = o2.Array, y = Math.max;
          n2({ target: "Array", proto: true, forced: !v }, { slice: function(t3, e3) {
            var r3, n3, o3, p2 = f(this), d2 = u(p2), v2 = c(t3, d2), b = c(void 0 === e3 ? d2 : e3, d2);
            if (i(p2) && (r3 = p2.constructor, a(r3) && (r3 === g || i(r3.prototype)) ? r3 = void 0 : s(r3) && (r3 = r3[m], null === r3 && (r3 = void 0)), r3 === g || void 0 === r3))
              return h(p2, v2, b);
            for (n3 = new (void 0 === r3 ? g : r3)(y(b - v2, 0)), o3 = 0; v2 < b; v2++, o3++)
              v2 in p2 && l(n3, o3, p2[v2]);
            return n3.length = o3, n3;
          } });
        }, 1703: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(7854), i = r2(2104), a = r2(9191), s = "WebAssembly", c = o2[s], u = 7 !== Error("e", { cause: 7 }).cause, f = function(t3, e3) {
            var r3 = {};
            r3[t3] = a(t3, e3, u), n2({ global: true, forced: u }, r3);
          }, l = function(t3, e3) {
            if (c && c[t3]) {
              var r3 = {};
              r3[t3] = a(s + "." + t3, e3, u), n2({ target: s, stat: true, forced: u }, r3);
            }
          };
          f("Error", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), f("EvalError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), f("RangeError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), f("ReferenceError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), f("SyntaxError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), f("TypeError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), f("URIError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), l("CompileError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), l("LinkError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          }), l("RuntimeError", function(t3) {
            return function(e3) {
              return i(t3, this, arguments);
            };
          });
        }, 8309: function(t2, e2, r2) {
          var n2 = r2(9781), o2 = r2(6530).EXISTS, i = r2(1702), a = r2(3070).f, s = Function.prototype, c = i(s.toString), u = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/, f = i(u.exec), l = "name";
          n2 && !o2 && a(s, l, { configurable: true, get: function() {
            try {
              return f(u, c(this))[1];
            } catch (t3) {
              return "";
            }
          } });
        }, 9653: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(9781), o2 = r2(7854), i = r2(1702), a = r2(4705), s = r2(1320), c = r2(2597), u = r2(9587), f = r2(7976), l = r2(2190), p = r2(7593), d = r2(7293), h = r2(8006).f, v = r2(1236).f, m = r2(3070).f, g = r2(863), y = r2(3111).trim, b = "Number", k = o2[b], x = k.prototype, w = o2.TypeError, S = i("".slice), _ = i("".charCodeAt), E = function(t3) {
            var e3 = p(t3, "number");
            return "bigint" == typeof e3 ? e3 : O(e3);
          }, O = function(t3) {
            var e3, r3, n3, o3, i2, a2, s2, c2, u2 = p(t3, "number");
            if (l(u2))
              throw w("Cannot convert a Symbol value to a number");
            if ("string" == typeof u2 && u2.length > 2) {
              if (u2 = y(u2), e3 = _(u2, 0), 43 === e3 || 45 === e3) {
                if (r3 = _(u2, 2), 88 === r3 || 120 === r3)
                  return NaN;
              } else if (48 === e3) {
                switch (_(u2, 1)) {
                  case 66:
                  case 98:
                    n3 = 2, o3 = 49;
                    break;
                  case 79:
                  case 111:
                    n3 = 8, o3 = 55;
                    break;
                  default:
                    return +u2;
                }
                for (i2 = S(u2, 2), a2 = i2.length, s2 = 0; s2 < a2; s2++)
                  if (c2 = _(i2, s2), c2 < 48 || c2 > o3)
                    return NaN;
                return parseInt(i2, n3);
              }
            }
            return +u2;
          };
          if (a(b, !k(" 0o1") || !k("0b1") || k("+0x1"))) {
            for (var C, T = function(t3) {
              var e3 = arguments.length < 1 ? 0 : k(E(t3)), r3 = this;
              return f(x, r3) && d(function() {
                g(r3);
              }) ? u(Object(e3), r3, T) : e3;
            }, j = n2 ? h(k) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","), P = 0; j.length > P; P++)
              c(k, C = j[P]) && !c(T, C) && m(T, C, v(k, C));
            T.prototype = x, x.constructor = T, s(o2, b, T);
          }
        }, 4048: function(t2, e2, r2) {
          var n2 = r2(2109);
          n2({ target: "Number", stat: true }, { isNaN: function(t3) {
            return t3 != t3;
          } });
        }, 6977: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(7854), i = r2(1702), a = r2(9303), s = r2(863), c = r2(8415), u = r2(7293), f = o2.RangeError, l = o2.String, p = Math.floor, d = i(c), h = i("".slice), v = i(1 .toFixed), m = function(t3, e3, r3) {
            return 0 === e3 ? r3 : e3 % 2 === 1 ? m(t3, e3 - 1, r3 * t3) : m(t3 * t3, e3 / 2, r3);
          }, g = function(t3) {
            var e3 = 0, r3 = t3;
            while (r3 >= 4096)
              e3 += 12, r3 /= 4096;
            while (r3 >= 2)
              e3 += 1, r3 /= 2;
            return e3;
          }, y = function(t3, e3, r3) {
            var n3 = -1, o3 = r3;
            while (++n3 < 6)
              o3 += e3 * t3[n3], t3[n3] = o3 % 1e7, o3 = p(o3 / 1e7);
          }, b = function(t3, e3) {
            var r3 = 6, n3 = 0;
            while (--r3 >= 0)
              n3 += t3[r3], t3[r3] = p(n3 / e3), n3 = n3 % e3 * 1e7;
          }, k = function(t3) {
            var e3 = 6, r3 = "";
            while (--e3 >= 0)
              if ("" !== r3 || 0 === e3 || 0 !== t3[e3]) {
                var n3 = l(t3[e3]);
                r3 = "" === r3 ? n3 : r3 + d("0", 7 - n3.length) + n3;
              }
            return r3;
          }, x = u(function() {
            return "0.000" !== v(8e-5, 3) || "1" !== v(0.9, 0) || "1.25" !== v(1.255, 2) || "1000000000000000128" !== v(1000000000000000100, 0);
          }) || !u(function() {
            v({});
          });
          n2({ target: "Number", proto: true, forced: x }, { toFixed: function(t3) {
            var e3, r3, n3, o3, i2 = s(this), c2 = a(t3), u2 = [0, 0, 0, 0, 0, 0], p2 = "", v2 = "0";
            if (c2 < 0 || c2 > 20)
              throw f("Incorrect fraction digits");
            if (i2 != i2)
              return "NaN";
            if (i2 <= -1e21 || i2 >= 1e21)
              return l(i2);
            if (i2 < 0 && (p2 = "-", i2 = -i2), i2 > 1e-21)
              if (e3 = g(i2 * m(2, 69, 1)) - 69, r3 = e3 < 0 ? i2 * m(2, -e3, 1) : i2 / m(2, e3, 1), r3 *= 4503599627370496, e3 = 52 - e3, e3 > 0) {
                y(u2, 0, r3), n3 = c2;
                while (n3 >= 7)
                  y(u2, 1e7, 0), n3 -= 7;
                y(u2, m(10, n3, 1), 0), n3 = e3 - 1;
                while (n3 >= 23)
                  b(u2, 1 << 23), n3 -= 23;
                b(u2, 1 << n3), y(u2, 1, 1), b(u2, 2), v2 = k(u2);
              } else
                y(u2, 0, r3), y(u2, 1 << -e3, 0), v2 = k(u2) + d("0", c2);
            return c2 > 0 ? (o3 = v2.length, v2 = p2 + (o3 <= c2 ? "0." + d("0", c2 - o3) + v2 : h(v2, 0, o3 - c2) + "." + h(v2, o3 - c2))) : v2 = p2 + v2, v2;
          } });
        }, 5003: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(7293), i = r2(5656), a = r2(1236).f, s = r2(9781), c = o2(function() {
            a(1);
          }), u = !s || c;
          n2({ target: "Object", stat: true, forced: u, sham: !s }, { getOwnPropertyDescriptor: function(t3, e3) {
            return a(i(t3), e3);
          } });
        }, 9337: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(9781), i = r2(3887), a = r2(5656), s = r2(1236), c = r2(6135);
          n2({ target: "Object", stat: true, sham: !o2 }, { getOwnPropertyDescriptors: function(t3) {
            var e3, r3, n3 = a(t3), o3 = s.f, u = i(n3), f = {}, l = 0;
            while (u.length > l)
              r3 = o3(n3, e3 = u[l++]), void 0 !== r3 && c(f, e3, r3);
            return f;
          } });
        }, 7941: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(7908), i = r2(1956), a = r2(7293), s = a(function() {
            i(1);
          });
          n2({ target: "Object", stat: true, forced: s }, { keys: function(t3) {
            return i(o2(t3));
          } });
        }, 1539: function(t2, e2, r2) {
          var n2 = r2(1694), o2 = r2(1320), i = r2(288);
          n2 || o2(Object.prototype, "toString", i, { unsafe: true });
        }, 8674: function(t2, e2, r2) {
          "use strict";
          var n2, o2, i, a, s = r2(2109), c = r2(1913), u = r2(7854), f = r2(5005), l = r2(6916), p = r2(3366), d = r2(1320), h = r2(2248), v = r2(7674), m = r2(8003), g = r2(6340), y = r2(9662), b = r2(614), k = r2(111), x = r2(5787), w = r2(2788), S = r2(408), _ = r2(7072), E = r2(6707), O = r2(261).set, C = r2(5948), T = r2(9478), j = r2(842), P = r2(8523), F = r2(2534), N = r2(8572), I = r2(9909), A = r2(4705), D = r2(5112), L = r2(7871), M = r2(5268), R = r2(7392), z = D("species"), B = "Promise", V = I.getterFor(B), G = I.set, q = I.getterFor(B), $ = p && p.prototype, H = p, U = $, Z = u.TypeError, W = u.document, Y = u.process, X = P.f, K = X, J = !!(W && W.createEvent && u.dispatchEvent), Q = b(u.PromiseRejectionEvent), tt = "unhandledrejection", et = "rejectionhandled", rt = 0, nt = 1, ot = 2, it = 1, at = 2, st = false, ct = A(B, function() {
            var t3 = w(H), e3 = t3 !== String(H);
            if (!e3 && 66 === R)
              return true;
            if (c && !U["finally"])
              return true;
            if (R >= 51 && /native code/.test(t3))
              return false;
            var r3 = new H(function(t4) {
              t4(1);
            }), n3 = function(t4) {
              t4(function() {
              }, function() {
              });
            }, o3 = r3.constructor = {};
            return o3[z] = n3, st = r3.then(function() {
            }) instanceof n3, !st || !e3 && L && !Q;
          }), ut = ct || !_(function(t3) {
            H.all(t3)["catch"](function() {
            });
          }), ft = function(t3) {
            var e3;
            return !(!k(t3) || !b(e3 = t3.then)) && e3;
          }, lt = function(t3, e3) {
            var r3, n3, o3, i2 = e3.value, a2 = e3.state == nt, s2 = a2 ? t3.ok : t3.fail, c2 = t3.resolve, u2 = t3.reject, f2 = t3.domain;
            try {
              s2 ? (a2 || (e3.rejection === at && mt(e3), e3.rejection = it), true === s2 ? r3 = i2 : (f2 && f2.enter(), r3 = s2(i2), f2 && (f2.exit(), o3 = true)), r3 === t3.promise ? u2(Z("Promise-chain cycle")) : (n3 = ft(r3)) ? l(n3, r3, c2, u2) : c2(r3)) : u2(i2);
            } catch (p2) {
              f2 && !o3 && f2.exit(), u2(p2);
            }
          }, pt = function(t3, e3) {
            t3.notified || (t3.notified = true, C(function() {
              var r3, n3 = t3.reactions;
              while (r3 = n3.get())
                lt(r3, t3);
              t3.notified = false, e3 && !t3.rejection && ht(t3);
            }));
          }, dt = function(t3, e3, r3) {
            var n3, o3;
            J ? (n3 = W.createEvent("Event"), n3.promise = e3, n3.reason = r3, n3.initEvent(t3, false, true), u.dispatchEvent(n3)) : n3 = { promise: e3, reason: r3 }, !Q && (o3 = u["on" + t3]) ? o3(n3) : t3 === tt && j("Unhandled promise rejection", r3);
          }, ht = function(t3) {
            l(O, u, function() {
              var e3, r3 = t3.facade, n3 = t3.value, o3 = vt(t3);
              if (o3 && (e3 = F(function() {
                M ? Y.emit("unhandledRejection", n3, r3) : dt(tt, r3, n3);
              }), t3.rejection = M || vt(t3) ? at : it, e3.error))
                throw e3.value;
            });
          }, vt = function(t3) {
            return t3.rejection !== it && !t3.parent;
          }, mt = function(t3) {
            l(O, u, function() {
              var e3 = t3.facade;
              M ? Y.emit("rejectionHandled", e3) : dt(et, e3, t3.value);
            });
          }, gt = function(t3, e3, r3) {
            return function(n3) {
              t3(e3, n3, r3);
            };
          }, yt = function(t3, e3, r3) {
            t3.done || (t3.done = true, r3 && (t3 = r3), t3.value = e3, t3.state = ot, pt(t3, true));
          }, bt = function(t3, e3, r3) {
            if (!t3.done) {
              t3.done = true, r3 && (t3 = r3);
              try {
                if (t3.facade === e3)
                  throw Z("Promise can't be resolved itself");
                var n3 = ft(e3);
                n3 ? C(function() {
                  var r4 = { done: false };
                  try {
                    l(n3, e3, gt(bt, r4, t3), gt(yt, r4, t3));
                  } catch (o3) {
                    yt(r4, o3, t3);
                  }
                }) : (t3.value = e3, t3.state = nt, pt(t3, false));
              } catch (o3) {
                yt({ done: false }, o3, t3);
              }
            }
          };
          if (ct && (H = function(t3) {
            x(this, U), y(t3), l(n2, this);
            var e3 = V(this);
            try {
              t3(gt(bt, e3), gt(yt, e3));
            } catch (r3) {
              yt(e3, r3);
            }
          }, U = H.prototype, n2 = function(t3) {
            G(this, { type: B, done: false, notified: false, parent: false, reactions: new N(), rejection: false, state: rt, value: void 0 });
          }, n2.prototype = h(U, { then: function(t3, e3) {
            var r3 = q(this), n3 = X(E(this, H));
            return r3.parent = true, n3.ok = !b(t3) || t3, n3.fail = b(e3) && e3, n3.domain = M ? Y.domain : void 0, r3.state == rt ? r3.reactions.add(n3) : C(function() {
              lt(n3, r3);
            }), n3.promise;
          }, catch: function(t3) {
            return this.then(void 0, t3);
          } }), o2 = function() {
            var t3 = new n2(), e3 = V(t3);
            this.promise = t3, this.resolve = gt(bt, e3), this.reject = gt(yt, e3);
          }, P.f = X = function(t3) {
            return t3 === H || t3 === i ? new o2(t3) : K(t3);
          }, !c && b(p) && $ !== Object.prototype)) {
            a = $.then, st || (d($, "then", function(t3, e3) {
              var r3 = this;
              return new H(function(t4, e4) {
                l(a, r3, t4, e4);
              }).then(t3, e3);
            }, { unsafe: true }), d($, "catch", U["catch"], { unsafe: true }));
            try {
              delete $.constructor;
            } catch (kt) {
            }
            v && v($, U);
          }
          s({ global: true, wrap: true, forced: ct }, { Promise: H }), m(H, B, false, true), g(B), i = f(B), s({ target: B, stat: true, forced: ct }, { reject: function(t3) {
            var e3 = X(this);
            return l(e3.reject, void 0, t3), e3.promise;
          } }), s({ target: B, stat: true, forced: c || ct }, { resolve: function(t3) {
            return T(c && this === i ? H : this, t3);
          } }), s({ target: B, stat: true, forced: ut }, { all: function(t3) {
            var e3 = this, r3 = X(e3), n3 = r3.resolve, o3 = r3.reject, i2 = F(function() {
              var r4 = y(e3.resolve), i3 = [], a2 = 0, s2 = 1;
              S(t3, function(t4) {
                var c2 = a2++, u2 = false;
                s2++, l(r4, e3, t4).then(function(t5) {
                  u2 || (u2 = true, i3[c2] = t5, --s2 || n3(i3));
                }, o3);
              }), --s2 || n3(i3);
            });
            return i2.error && o3(i2.value), r3.promise;
          }, race: function(t3) {
            var e3 = this, r3 = X(e3), n3 = r3.reject, o3 = F(function() {
              var o4 = y(e3.resolve);
              S(t3, function(t4) {
                l(o4, e3, t4).then(r3.resolve, n3);
              });
            });
            return o3.error && n3(o3.value), r3.promise;
          } });
        }, 4916: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(2261);
          n2({ target: "RegExp", proto: true, forced: /./.exec !== o2 }, { exec: o2 });
        }, 7601: function(t2, e2, r2) {
          "use strict";
          r2(4916);
          var n2 = r2(2109), o2 = r2(7854), i = r2(6916), a = r2(1702), s = r2(614), c = r2(111), u = function() {
            var t3 = false, e3 = /[ac]/;
            return e3.exec = function() {
              return t3 = true, /./.exec.apply(this, arguments);
            }, true === e3.test("abc") && t3;
          }(), f = o2.Error, l = a(/./.test);
          n2({ target: "RegExp", proto: true, forced: !u }, { test: function(t3) {
            var e3 = this.exec;
            if (!s(e3))
              return l(this, t3);
            var r3 = i(e3, this, t3);
            if (null !== r3 && !c(r3))
              throw new f("RegExp exec method returned something other than an Object or null");
            return !!r3;
          } });
        }, 9714: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(1702), o2 = r2(6530).PROPER, i = r2(1320), a = r2(9670), s = r2(7976), c = r2(1340), u = r2(7293), f = r2(7066), l = "toString", p = RegExp.prototype, d = p[l], h = n2(f), v = u(function() {
            return "/a/b" != d.call({ source: "a", flags: "b" });
          }), m = o2 && d.name != l;
          (v || m) && i(RegExp.prototype, l, function() {
            var t3 = a(this), e3 = c(t3.source), r3 = t3.flags, n3 = c(void 0 === r3 && s(p, t3) && !("flags" in p) ? h(t3) : r3);
            return "/" + e3 + "/" + n3;
          }, { unsafe: true });
        }, 2023: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(1702), i = r2(3929), a = r2(4488), s = r2(1340), c = r2(4964), u = o2("".indexOf);
          n2({ target: "String", proto: true, forced: !c("includes") }, { includes: function(t3) {
            return !!~u(s(a(this)), s(i(t3)), arguments.length > 1 ? arguments[1] : void 0);
          } });
        }, 8783: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(8710).charAt, o2 = r2(1340), i = r2(9909), a = r2(654), s = "String Iterator", c = i.set, u = i.getterFor(s);
          a(String, "String", function(t3) {
            c(this, { type: s, string: o2(t3), index: 0 });
          }, function() {
            var t3, e3 = u(this), r3 = e3.string, o3 = e3.index;
            return o3 >= r3.length ? { value: void 0, done: true } : (t3 = n2(r3, o3), e3.index += t3.length, { value: t3, done: false });
          });
        }, 5306: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2104), o2 = r2(6916), i = r2(1702), a = r2(7007), s = r2(7293), c = r2(9670), u = r2(614), f = r2(9303), l = r2(7466), p = r2(1340), d = r2(4488), h = r2(1530), v = r2(8173), m = r2(647), g = r2(7651), y = r2(5112), b = y("replace"), k = Math.max, x = Math.min, w = i([].concat), S = i([].push), _ = i("".indexOf), E = i("".slice), O = function(t3) {
            return void 0 === t3 ? t3 : String(t3);
          }, C = function() {
            return "$0" === "a".replace(/./, "$0");
          }(), T = function() {
            return !!/./[b] && "" === /./[b]("a", "$0");
          }(), j = !s(function() {
            var t3 = /./;
            return t3.exec = function() {
              var t4 = [];
              return t4.groups = { a: "7" }, t4;
            }, "7" !== "".replace(t3, "$<a>");
          });
          a("replace", function(t3, e3, r3) {
            var i2 = T ? "$" : "$0";
            return [function(t4, r4) {
              var n3 = d(this), i3 = void 0 == t4 ? void 0 : v(t4, b);
              return i3 ? o2(i3, t4, n3, r4) : o2(e3, p(n3), t4, r4);
            }, function(t4, o3) {
              var a2 = c(this), s2 = p(t4);
              if ("string" == typeof o3 && -1 === _(o3, i2) && -1 === _(o3, "$<")) {
                var d2 = r3(e3, a2, s2, o3);
                if (d2.done)
                  return d2.value;
              }
              var v2 = u(o3);
              v2 || (o3 = p(o3));
              var y2 = a2.global;
              if (y2) {
                var b2 = a2.unicode;
                a2.lastIndex = 0;
              }
              var C2 = [];
              while (1) {
                var T2 = g(a2, s2);
                if (null === T2)
                  break;
                if (S(C2, T2), !y2)
                  break;
                var j2 = p(T2[0]);
                "" === j2 && (a2.lastIndex = h(s2, l(a2.lastIndex), b2));
              }
              for (var P = "", F = 0, N = 0; N < C2.length; N++) {
                T2 = C2[N];
                for (var I = p(T2[0]), A = k(x(f(T2.index), s2.length), 0), D = [], L = 1; L < T2.length; L++)
                  S(D, O(T2[L]));
                var M = T2.groups;
                if (v2) {
                  var R = w([I], D, A, s2);
                  void 0 !== M && S(R, M);
                  var z = p(n2(o3, void 0, R));
                } else
                  z = m(I, s2, A, D, M, o3);
                A >= F && (P += E(s2, F, A) + z, F = A + I.length);
              }
              return P + E(s2, F);
            }];
          }, !j || !C || T);
        }, 3123: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2104), o2 = r2(6916), i = r2(1702), a = r2(7007), s = r2(7850), c = r2(9670), u = r2(4488), f = r2(6707), l = r2(1530), p = r2(7466), d = r2(1340), h = r2(8173), v = r2(1589), m = r2(7651), g = r2(2261), y = r2(2999), b = r2(7293), k = y.UNSUPPORTED_Y, x = 4294967295, w = Math.min, S = [].push, _ = i(/./.exec), E = i(S), O = i("".slice), C = !b(function() {
            var t3 = /(?:)/, e3 = t3.exec;
            t3.exec = function() {
              return e3.apply(this, arguments);
            };
            var r3 = "ab".split(t3);
            return 2 !== r3.length || "a" !== r3[0] || "b" !== r3[1];
          });
          a("split", function(t3, e3, r3) {
            var i2;
            return i2 = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(t4, r4) {
              var i3 = d(u(this)), a2 = void 0 === r4 ? x : r4 >>> 0;
              if (0 === a2)
                return [];
              if (void 0 === t4)
                return [i3];
              if (!s(t4))
                return o2(e3, i3, t4, a2);
              var c2, f2, l2, p2 = [], h2 = (t4.ignoreCase ? "i" : "") + (t4.multiline ? "m" : "") + (t4.unicode ? "u" : "") + (t4.sticky ? "y" : ""), m2 = 0, y2 = new RegExp(t4.source, h2 + "g");
              while (c2 = o2(g, y2, i3)) {
                if (f2 = y2.lastIndex, f2 > m2 && (E(p2, O(i3, m2, c2.index)), c2.length > 1 && c2.index < i3.length && n2(S, p2, v(c2, 1)), l2 = c2[0].length, m2 = f2, p2.length >= a2))
                  break;
                y2.lastIndex === c2.index && y2.lastIndex++;
              }
              return m2 === i3.length ? !l2 && _(y2, "") || E(p2, "") : E(p2, O(i3, m2)), p2.length > a2 ? v(p2, 0, a2) : p2;
            } : "0".split(void 0, 0).length ? function(t4, r4) {
              return void 0 === t4 && 0 === r4 ? [] : o2(e3, this, t4, r4);
            } : e3, [function(e4, r4) {
              var n3 = u(this), a2 = void 0 == e4 ? void 0 : h(e4, t3);
              return a2 ? o2(a2, e4, n3, r4) : o2(i2, d(n3), e4, r4);
            }, function(t4, n3) {
              var o3 = c(this), a2 = d(t4), s2 = r3(i2, o3, a2, n3, i2 !== e3);
              if (s2.done)
                return s2.value;
              var u2 = f(o3, RegExp), h2 = o3.unicode, v2 = (o3.ignoreCase ? "i" : "") + (o3.multiline ? "m" : "") + (o3.unicode ? "u" : "") + (k ? "g" : "y"), g2 = new u2(k ? "^(?:" + o3.source + ")" : o3, v2), y2 = void 0 === n3 ? x : n3 >>> 0;
              if (0 === y2)
                return [];
              if (0 === a2.length)
                return null === m(g2, a2) ? [a2] : [];
              var b2 = 0, S2 = 0, _2 = [];
              while (S2 < a2.length) {
                g2.lastIndex = k ? 0 : S2;
                var C2, T = m(g2, k ? O(a2, S2) : a2);
                if (null === T || (C2 = w(p(g2.lastIndex + (k ? S2 : 0)), a2.length)) === b2)
                  S2 = l(a2, S2, h2);
                else {
                  if (E(_2, O(a2, b2, S2)), _2.length === y2)
                    return _2;
                  for (var j = 1; j <= T.length - 1; j++)
                    if (E(_2, T[j]), _2.length === y2)
                      return _2;
                  S2 = b2 = C2;
                }
              }
              return E(_2, O(a2, b2)), _2;
            }];
          }, !C, k);
        }, 6755: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(1702), i = r2(1236).f, a = r2(7466), s = r2(1340), c = r2(3929), u = r2(4488), f = r2(4964), l = r2(1913), p = o2("".startsWith), d = o2("".slice), h = Math.min, v = f("startsWith"), m = !l && !v && !!function() {
            var t3 = i(String.prototype, "startsWith");
            return t3 && !t3.writable;
          }();
          n2({ target: "String", proto: true, forced: !m && !v }, { startsWith: function(t3) {
            var e3 = s(u(this));
            c(t3);
            var r3 = a(h(arguments.length > 1 ? arguments[1] : void 0, e3.length)), n3 = s(t3);
            return p ? p(e3, n3, r3) : d(e3, r3, r3 + n3.length) === n3;
          } });
        }, 3210: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(3111).trim, i = r2(6091);
          n2({ target: "String", proto: true, forced: i("trim") }, { trim: function() {
            return o2(this);
          } });
        }, 1817: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(9781), i = r2(7854), a = r2(1702), s = r2(2597), c = r2(614), u = r2(7976), f = r2(1340), l = r2(3070).f, p = r2(9920), d = i.Symbol, h = d && d.prototype;
          if (o2 && c(d) && (!("description" in h) || void 0 !== d().description)) {
            var v = {}, m = function() {
              var t3 = arguments.length < 1 || void 0 === arguments[0] ? void 0 : f(arguments[0]), e3 = u(h, this) ? new d(t3) : void 0 === t3 ? d() : d(t3);
              return "" === t3 && (v[e3] = true), e3;
            };
            p(m, d), m.prototype = h, h.constructor = m;
            var g = "Symbol(test)" == String(d("test")), y = a(h.toString), b = a(h.valueOf), k = /^Symbol\((.*)\)[^)]+$/, x = a("".replace), w = a("".slice);
            l(h, "description", { configurable: true, get: function() {
              var t3 = b(this), e3 = y(t3);
              if (s(v, t3))
                return "";
              var r3 = g ? w(e3, 7, -1) : x(e3, k, "$1");
              return "" === r3 ? void 0 : r3;
            } }), n2({ global: true, forced: true }, { Symbol: m });
          }
        }, 2165: function(t2, e2, r2) {
          var n2 = r2(7235);
          n2("iterator");
        }, 2526: function(t2, e2, r2) {
          "use strict";
          var n2 = r2(2109), o2 = r2(7854), i = r2(5005), a = r2(2104), s = r2(6916), c = r2(1702), u = r2(1913), f = r2(9781), l = r2(133), p = r2(7293), d = r2(2597), h = r2(3157), v = r2(614), m = r2(111), g = r2(7976), y = r2(2190), b = r2(9670), k = r2(7908), x = r2(5656), w = r2(4948), S = r2(1340), _ = r2(9114), E = r2(30), O = r2(1956), C = r2(8006), T = r2(1156), j = r2(5181), P = r2(1236), F = r2(3070), N = r2(6048), I = r2(5296), A = r2(206), D = r2(1320), L = r2(2309), M = r2(6200), R = r2(3501), z = r2(9711), B = r2(5112), V = r2(6061), G = r2(7235), q = r2(8003), $ = r2(9909), H = r2(2092).forEach, U = M("hidden"), Z = "Symbol", W = "prototype", Y = B("toPrimitive"), X = $.set, K = $.getterFor(Z), J = Object[W], Q = o2.Symbol, tt = Q && Q[W], et = o2.TypeError, rt = o2.QObject, nt = i("JSON", "stringify"), ot = P.f, it = F.f, at = T.f, st = I.f, ct = c([].push), ut = L("symbols"), ft = L("op-symbols"), lt = L("string-to-symbol-registry"), pt = L("symbol-to-string-registry"), dt = L("wks"), ht = !rt || !rt[W] || !rt[W].findChild, vt = f && p(function() {
            return 7 != E(it({}, "a", { get: function() {
              return it(this, "a", { value: 7 }).a;
            } })).a;
          }) ? function(t3, e3, r3) {
            var n3 = ot(J, e3);
            n3 && delete J[e3], it(t3, e3, r3), n3 && t3 !== J && it(J, e3, n3);
          } : it, mt = function(t3, e3) {
            var r3 = ut[t3] = E(tt);
            return X(r3, { type: Z, tag: t3, description: e3 }), f || (r3.description = e3), r3;
          }, gt = function(t3, e3, r3) {
            t3 === J && gt(ft, e3, r3), b(t3);
            var n3 = w(e3);
            return b(r3), d(ut, n3) ? (r3.enumerable ? (d(t3, U) && t3[U][n3] && (t3[U][n3] = false), r3 = E(r3, { enumerable: _(0, false) })) : (d(t3, U) || it(t3, U, _(1, {})), t3[U][n3] = true), vt(t3, n3, r3)) : it(t3, n3, r3);
          }, yt = function(t3, e3) {
            b(t3);
            var r3 = x(e3), n3 = O(r3).concat(St(r3));
            return H(n3, function(e4) {
              f && !s(kt, r3, e4) || gt(t3, e4, r3[e4]);
            }), t3;
          }, bt = function(t3, e3) {
            return void 0 === e3 ? E(t3) : yt(E(t3), e3);
          }, kt = function(t3) {
            var e3 = w(t3), r3 = s(st, this, e3);
            return !(this === J && d(ut, e3) && !d(ft, e3)) && (!(r3 || !d(this, e3) || !d(ut, e3) || d(this, U) && this[U][e3]) || r3);
          }, xt = function(t3, e3) {
            var r3 = x(t3), n3 = w(e3);
            if (r3 !== J || !d(ut, n3) || d(ft, n3)) {
              var o3 = ot(r3, n3);
              return !o3 || !d(ut, n3) || d(r3, U) && r3[U][n3] || (o3.enumerable = true), o3;
            }
          }, wt = function(t3) {
            var e3 = at(x(t3)), r3 = [];
            return H(e3, function(t4) {
              d(ut, t4) || d(R, t4) || ct(r3, t4);
            }), r3;
          }, St = function(t3) {
            var e3 = t3 === J, r3 = at(e3 ? ft : x(t3)), n3 = [];
            return H(r3, function(t4) {
              !d(ut, t4) || e3 && !d(J, t4) || ct(n3, ut[t4]);
            }), n3;
          };
          if (l || (Q = function() {
            if (g(tt, this))
              throw et("Symbol is not a constructor");
            var t3 = arguments.length && void 0 !== arguments[0] ? S(arguments[0]) : void 0, e3 = z(t3), r3 = function(t4) {
              this === J && s(r3, ft, t4), d(this, U) && d(this[U], e3) && (this[U][e3] = false), vt(this, e3, _(1, t4));
            };
            return f && ht && vt(J, e3, { configurable: true, set: r3 }), mt(e3, t3);
          }, tt = Q[W], D(tt, "toString", function() {
            return K(this).tag;
          }), D(Q, "withoutSetter", function(t3) {
            return mt(z(t3), t3);
          }), I.f = kt, F.f = gt, N.f = yt, P.f = xt, C.f = T.f = wt, j.f = St, V.f = function(t3) {
            return mt(B(t3), t3);
          }, f && (it(tt, "description", { configurable: true, get: function() {
            return K(this).description;
          } }), u || D(J, "propertyIsEnumerable", kt, { unsafe: true }))), n2({ global: true, wrap: true, forced: !l, sham: !l }, { Symbol: Q }), H(O(dt), function(t3) {
            G(t3);
          }), n2({ target: Z, stat: true, forced: !l }, { for: function(t3) {
            var e3 = S(t3);
            if (d(lt, e3))
              return lt[e3];
            var r3 = Q(e3);
            return lt[e3] = r3, pt[r3] = e3, r3;
          }, keyFor: function(t3) {
            if (!y(t3))
              throw et(t3 + " is not a symbol");
            if (d(pt, t3))
              return pt[t3];
          }, useSetter: function() {
            ht = true;
          }, useSimple: function() {
            ht = false;
          } }), n2({ target: "Object", stat: true, forced: !l, sham: !f }, { create: bt, defineProperty: gt, defineProperties: yt, getOwnPropertyDescriptor: xt }), n2({ target: "Object", stat: true, forced: !l }, { getOwnPropertyNames: wt, getOwnPropertySymbols: St }), n2({ target: "Object", stat: true, forced: p(function() {
            j.f(1);
          }) }, { getOwnPropertySymbols: function(t3) {
            return j.f(k(t3));
          } }), nt) {
            var _t = !l || p(function() {
              var t3 = Q();
              return "[null]" != nt([t3]) || "{}" != nt({ a: t3 }) || "{}" != nt(Object(t3));
            });
            n2({ target: "JSON", stat: true, forced: _t }, { stringify: function(t3, e3, r3) {
              var n3 = A(arguments), o3 = e3;
              if ((m(e3) || void 0 !== t3) && !y(t3))
                return h(e3) || (e3 = function(t4, e4) {
                  if (v(o3) && (e4 = s(o3, this, t4, e4)), !y(e4))
                    return e4;
                }), n3[1] = e3, a(nt, null, n3);
            } });
          }
          if (!tt[Y]) {
            var Et = tt.valueOf;
            D(tt, Y, function(t3) {
              return s(Et, this);
            });
          }
          q(Q, Z), R[U] = true;
        }, 4747: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(8324), i = r2(8509), a = r2(8533), s = r2(8880), c = function(t3) {
            if (t3 && t3.forEach !== a)
              try {
                s(t3, "forEach", a);
              } catch (e3) {
                t3.forEach = a;
              }
          };
          for (var u in o2)
            o2[u] && c(n2[u] && n2[u].prototype);
          c(i);
        }, 3948: function(t2, e2, r2) {
          var n2 = r2(7854), o2 = r2(8324), i = r2(8509), a = r2(6992), s = r2(8880), c = r2(5112), u = c("iterator"), f = c("toStringTag"), l = a.values, p = function(t3, e3) {
            if (t3) {
              if (t3[u] !== l)
                try {
                  s(t3, u, l);
                } catch (n3) {
                  t3[u] = l;
                }
              if (t3[f] || s(t3, f, e3), o2[e3]) {
                for (var r3 in a)
                  if (t3[r3] !== a[r3])
                    try {
                      s(t3, r3, a[r3]);
                    } catch (n3) {
                      t3[r3] = a[r3];
                    }
              }
            }
          };
          for (var d in o2)
            p(n2[d] && n2[d].prototype, d);
          p(i, "DOMTokenList");
        }, 2564: function(t2, e2, r2) {
          var n2 = r2(2109), o2 = r2(7854), i = r2(2104), a = r2(614), s = r2(8113), c = r2(206), u = r2(8053), f = /MSIE .\./.test(s), l = o2.Function, p = function(t3) {
            return function(e3, r3) {
              var n3 = u(arguments.length, 1) > 2, o3 = a(e3) ? e3 : l(e3), s2 = n3 ? c(arguments, 2) : void 0;
              return t3(n3 ? function() {
                i(o3, this, s2);
              } : o3, r3);
            };
          };
          n2({ global: true, bind: true, forced: f }, { setTimeout: p(o2.setTimeout), setInterval: p(o2.setInterval) });
        }, 7834: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, ".ep-circle[data-v-016e1ca5]{-webkit-transform-origin:50% 50%;transform-origin:50% 50%}", ""]), e2["default"] = s;
        }, 664: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, ".ep-svg-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute}.ep-svg-container.ep-reverse{-webkit-transform:scaleX(-1);transform:scaleX(-1)}g.ep-circle--container{-webkit-transition:inherit;-o-transition:inherit;transition:inherit;-webkit-transform-origin:50% 50%;transform-origin:50% 50%}@-webkit-keyframes ep-dot--init__loop{0%{-webkit-transform:rotate(var(--ep-dot-start));transform:rotate(var(--ep-dot-start))}33%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}66%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}to{-webkit-transform:rotate(var(--ep-dot-loop-end));transform:rotate(var(--ep-dot-loop-end))}}@keyframes ep-dot--init__loop{0%{-webkit-transform:rotate(var(--ep-dot-start));transform:rotate(var(--ep-dot-start))}33%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}66%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}to{-webkit-transform:rotate(var(--ep-dot-loop-end));transform:rotate(var(--ep-dot-loop-end))}}@-webkit-keyframes ep-dot--init__reverse{0%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}50%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}to{-webkit-transform:rotate(var(--ep-dot-end));transform:rotate(var(--ep-dot-end))}}@keyframes ep-dot--init__reverse{0%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}50%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}to{-webkit-transform:rotate(var(--ep-dot-end));transform:rotate(var(--ep-dot-end))}}@-webkit-keyframes ep-dot--init__bounce{0%{opacity:0}90%{opacity:0}to{opacity:1}}@keyframes ep-dot--init__bounce{0%{opacity:0}90%{opacity:0}to{opacity:1}}@-webkit-keyframes ep-dot--init__disabled{0%{opacity:0}90%{opacity:0}to{opacity:1}}@keyframes ep-dot--init__disabled{0%{opacity:0}90%{opacity:0}to{opacity:1}}.ep-circle--progress{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}.ep-circle--progress.animation__default{-webkit-animation-name:ep-progress--init__default;animation-name:ep-progress--init__default}.ep-circle--progress.animation__rs{-webkit-animation-name:ep-progress--init__rs;animation-name:ep-progress--init__rs}.ep-circle--progress.animation__bounce{-webkit-animation-name:ep-progress--init__bounce;animation-name:ep-progress--init__bounce}.ep-circle--progress.animation__reverse{-webkit-animation-name:ep-progress--init__reverse;animation-name:ep-progress--init__reverse}.ep-circle--progress.animation__loop{-webkit-animation-name:ep-progress--init__loop;animation-name:ep-progress--init__loop}.ep-circle--loader.animation__loading{-webkit-animation-name:ep-progress--loading,ep-progress--loading__rotation;animation-name:ep-progress--loading,ep-progress--loading__rotation;-webkit-animation-iteration-count:infinite!important;animation-iteration-count:infinite!important;-webkit-animation-duration:2s,1s;animation-duration:2s,1s;-webkit-animation-timing-function:ease-in-out,linear;animation-timing-function:ease-in-out,linear}.ep-half-circle--loader.animation__loading{-webkit-animation-name:ep-half-progress--loading;animation-name:ep-half-progress--loading;-webkit-animation-iteration-count:infinite!important;animation-iteration-count:infinite!important;-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}.ep-circle--empty.ep-circle--nodata,.ep-circle--empty__fill.ep-circle--nodata,.ep-half-circle--empty.ep-circle--nodata,.ep-half-circle--empty__fill.ep-circle--nodata{opacity:.5}.ep-circle--progress__dot-container{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}.ep-circle--progress__dot-container.animation__rs{-webkit-animation-name:ep-dot--init__rs;animation-name:ep-dot--init__rs}.ep-circle--progress__dot-container.animation__bounce{-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-name:ep-dot--init__disabled;animation-name:ep-dot--init__disabled}.ep-circle--progress__dot-container.animation__reverse{-webkit-animation-name:ep-dot--init__reverse;animation-name:ep-dot--init__reverse}.ep-circle--progress__dot-container.animation__loop{-webkit-animation-name:ep-dot--init__loop;animation-name:ep-dot--init__loop}.ep-circle--progress__dot-container.ep-half-circle-progress__dot.animation__bounce,.ep-circle--progress__dot-container.ep-half-circle-progress__dot.animation__loop{-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-name:ep-dot--init__disabled;animation-name:ep-dot--init__disabled}@-webkit-keyframes ep-progress--init__default{0%{stroke-dashoffset:var(--ep-circumference)}to{stroke-dashoffset:var(--ep-stroke-offset)}}@keyframes ep-progress--init__default{0%{stroke-dashoffset:var(--ep-circumference)}to{stroke-dashoffset:var(--ep-stroke-offset)}}@-webkit-keyframes ep-progress--init__rs{0%{stroke-dashoffset:var(--ep-circumference)}50%{stroke-dashoffset:0}to{stroke-dashoffset:var(--ep-stroke-offset)}}@keyframes ep-progress--init__rs{0%{stroke-dashoffset:var(--ep-circumference)}50%{stroke-dashoffset:0}to{stroke-dashoffset:var(--ep-stroke-offset)}}@-webkit-keyframes ep-progress--init__bounce{0%{-webkit-animation-timing-function:linear;animation-timing-function:linear;stroke-dashoffset:var(--ep-circumference)}33%{stroke-dashoffset:var(--ep-bounce-out-stroke-offset)}66%{stroke-dashoffset:var(--ep-bounce-in-stroke-offset)}to{stroke-dashoffset:var(--ep-stroke-offset)}}@keyframes ep-progress--init__bounce{0%{-webkit-animation-timing-function:linear;animation-timing-function:linear;stroke-dashoffset:var(--ep-circumference)}33%{stroke-dashoffset:var(--ep-bounce-out-stroke-offset)}66%{stroke-dashoffset:var(--ep-bounce-in-stroke-offset)}to{stroke-dashoffset:var(--ep-stroke-offset)}}@-webkit-keyframes ep-progress--init__reverse{0%{stroke-dashoffset:var(--ep-circumference)}50%{stroke-dashoffset:var(--ep-double-circumference)}to{stroke-dashoffset:var(--ep-reverse-stroke-offset)}}@keyframes ep-progress--init__reverse{0%{stroke-dashoffset:var(--ep-circumference)}50%{stroke-dashoffset:var(--ep-double-circumference)}to{stroke-dashoffset:var(--ep-reverse-stroke-offset)}}@-webkit-keyframes ep-progress--init__loop{0%{stroke-dashoffset:var(--ep-circumference)}33%{stroke-dashoffset:0}66%{stroke-dashoffset:var(--ep-negative-circumference)}to{stroke-dashoffset:var(--ep-loop-stroke-offset)}}@keyframes ep-progress--init__loop{0%{stroke-dashoffset:var(--ep-circumference)}33%{stroke-dashoffset:0}66%{stroke-dashoffset:var(--ep-negative-circumference)}to{stroke-dashoffset:var(--ep-loop-stroke-offset)}}@-webkit-keyframes ep-progress--loading{0%{stroke-dashoffset:var(--ep-circumference)}50%{stroke-dashoffset:var(--ep-loading-stroke-offset)}to{stroke-dashoffset:var(--ep-circumference)}}@keyframes ep-progress--loading{0%{stroke-dashoffset:var(--ep-circumference)}50%{stroke-dashoffset:var(--ep-loading-stroke-offset)}to{stroke-dashoffset:var(--ep-circumference)}}@-webkit-keyframes ep-half-progress--loading{0%{opacity:.5;stroke-dashoffset:var(--ep-circumference)}50%{opacity:.8;stroke-dashoffset:0}to{opacity:.5;stroke-dashoffset:var(--ep-circumference)}}@keyframes ep-half-progress--loading{0%{opacity:.5;stroke-dashoffset:var(--ep-circumference)}50%{opacity:.8;stroke-dashoffset:0}to{opacity:.5;stroke-dashoffset:var(--ep-circumference)}}@-webkit-keyframes ep-progress--loading__rotation{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes ep-progress--loading__rotation{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes ep-dot--init__rs{0%{-webkit-transform:rotate(var(--ep-dot-start));transform:rotate(var(--ep-dot-start))}50%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}to{-webkit-transform:rotate(var(--ep-dot-end));transform:rotate(var(--ep-dot-end))}}@keyframes ep-dot--init__rs{0%{-webkit-transform:rotate(var(--ep-dot-start));transform:rotate(var(--ep-dot-start))}50%{-webkit-transform:rotate(var(--ep-dot-360));transform:rotate(var(--ep-dot-360))}to{-webkit-transform:rotate(var(--ep-dot-end));transform:rotate(var(--ep-dot-end))}}", ""]), e2["default"] = s;
        }, 1115: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, ".ep-circle--progress__dot-container[data-v-12292afe]{position:absolute;-webkit-transform-origin:center center;transform-origin:center center}.ep-circle--progress__dot-container.hidden[data-v-12292afe]{-webkit-transition-duration:0s;-o-transition-duration:0s;transition-duration:0s}.ep-circle--progress__dot-container>div[data-v-12292afe]{position:relative}.ep-circle--progress__dot[data-v-12292afe]{-webkit-transition-duration:.2s;-o-transition-duration:.2s;transition-duration:.2s;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;margin:auto;right:0;left:0}.ep-circle--progress__dot.ep-hidden[data-v-12292afe]{-webkit-transform:scale(0);transform:scale(0)}", ""]), e2["default"] = s;
        }, 5125: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, "g.ep-half-circle[data-v-58d6f8b2]{-webkit-transform-origin:50% 50%;transform-origin:50% 50%}", ""]), e2["default"] = s;
        }, 4560: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, "g.ep-half-circle[data-v-0af4dce4]{-webkit-transform-origin:50% 50%;transform-origin:50% 50%}", ""]), e2["default"] = s;
        }, 6827: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, ".fade-enter-active[data-v-873ef638],.fade-leave-active[data-v-873ef638]{-webkit-transition:opacity .3s;-o-transition:opacity .3s;transition:opacity .3s}.fade-enter[data-v-873ef638],.fade-leave-active[data-v-873ef638]{-webkit-transition:.3s;-o-transition:.3s;transition:.3s;opacity:0}", ""]), e2["default"] = s;
        }, 3493: function(t2, e2, r2) {
          "use strict";
          r2.r(e2);
          var n2 = r2(8081), o2 = r2.n(n2), i = r2(3645), a = r2.n(i), s = a()(o2());
          s.push([t2.id, ".ep-container[data-v-a7ff9eba]{display:inline-block;overflow:hidden}.ep-content[data-v-a7ff9eba]{max-width:inherit;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;height:100%;width:100%}.ep-content[data-v-a7ff9eba],.ep-legend--container[data-v-a7ff9eba]{-webkit-transition:inherit;-o-transition:inherit;transition:inherit}.ep-legend--container[data-v-a7ff9eba]{position:absolute;text-align:center}.ep-legend--value[data-v-a7ff9eba]{-webkit-transition:.3s;-o-transition:.3s;transition:.3s;text-align:center;opacity:1}.ep-hidden[data-v-a7ff9eba]{opacity:0}svg.ep-svg[data-v-a7ff9eba]{-webkit-transition:inherit;-o-transition:inherit;transition:inherit;-webkit-transform-origin:50% 50%;transform-origin:50% 50%}", ""]), e2["default"] = s;
        }, 3645: function(t2) {
          "use strict";
          t2.exports = function(t3) {
            var e2 = [];
            return e2.toString = function() {
              return this.map(function(e3) {
                var r2 = "", n2 = "undefined" !== typeof e3[5];
                return e3[4] && (r2 += "@supports (".concat(e3[4], ") {")), e3[2] && (r2 += "@media ".concat(e3[2], " {")), n2 && (r2 += "@layer".concat(e3[5].length > 0 ? " ".concat(e3[5]) : "", " {")), r2 += t3(e3), n2 && (r2 += "}"), e3[2] && (r2 += "}"), e3[4] && (r2 += "}"), r2;
              }).join("");
            }, e2.i = function(t4, r2, n2, o2, i) {
              "string" === typeof t4 && (t4 = [[null, t4, void 0]]);
              var a = {};
              if (n2)
                for (var s = 0; s < this.length; s++) {
                  var c = this[s][0];
                  null != c && (a[c] = true);
                }
              for (var u = 0; u < t4.length; u++) {
                var f = [].concat(t4[u]);
                n2 && a[f[0]] || ("undefined" !== typeof i && ("undefined" === typeof f[5] || (f[1] = "@layer".concat(f[5].length > 0 ? " ".concat(f[5]) : "", " {").concat(f[1], "}")), f[5] = i), r2 && (f[2] ? (f[1] = "@media ".concat(f[2], " {").concat(f[1], "}"), f[2] = r2) : f[2] = r2), o2 && (f[4] ? (f[1] = "@supports (".concat(f[4], ") {").concat(f[1], "}"), f[4] = o2) : f[4] = "".concat(o2)), e2.push(f));
              }
            }, e2;
          };
        }, 8081: function(t2) {
          "use strict";
          t2.exports = function(t3) {
            return t3[1];
          };
        }, 5666: function(t2) {
          var e2 = function(t3) {
            "use strict";
            var e3, r2 = Object.prototype, n2 = r2.hasOwnProperty, o2 = "function" === typeof Symbol ? Symbol : {}, i = o2.iterator || "@@iterator", a = o2.asyncIterator || "@@asyncIterator", s = o2.toStringTag || "@@toStringTag";
            function c(t4, e4, r3) {
              return Object.defineProperty(t4, e4, { value: r3, enumerable: true, configurable: true, writable: true }), t4[e4];
            }
            try {
              c({}, "");
            } catch (N) {
              c = function(t4, e4, r3) {
                return t4[e4] = r3;
              };
            }
            function u(t4, e4, r3, n3) {
              var o3 = e4 && e4.prototype instanceof m ? e4 : m, i2 = Object.create(o3.prototype), a2 = new j(n3 || []);
              return i2._invoke = E(t4, r3, a2), i2;
            }
            function f(t4, e4, r3) {
              try {
                return { type: "normal", arg: t4.call(e4, r3) };
              } catch (N) {
                return { type: "throw", arg: N };
              }
            }
            t3.wrap = u;
            var l = "suspendedStart", p = "suspendedYield", d = "executing", h = "completed", v = {};
            function m() {
            }
            function g() {
            }
            function y() {
            }
            var b = {};
            c(b, i, function() {
              return this;
            });
            var k = Object.getPrototypeOf, x = k && k(k(P([])));
            x && x !== r2 && n2.call(x, i) && (b = x);
            var w = y.prototype = m.prototype = Object.create(b);
            function S(t4) {
              ["next", "throw", "return"].forEach(function(e4) {
                c(t4, e4, function(t5) {
                  return this._invoke(e4, t5);
                });
              });
            }
            function _(t4, e4) {
              function r3(o4, i3, a2, s2) {
                var c2 = f(t4[o4], t4, i3);
                if ("throw" !== c2.type) {
                  var u2 = c2.arg, l2 = u2.value;
                  return l2 && "object" === typeof l2 && n2.call(l2, "__await") ? e4.resolve(l2.__await).then(function(t5) {
                    r3("next", t5, a2, s2);
                  }, function(t5) {
                    r3("throw", t5, a2, s2);
                  }) : e4.resolve(l2).then(function(t5) {
                    u2.value = t5, a2(u2);
                  }, function(t5) {
                    return r3("throw", t5, a2, s2);
                  });
                }
                s2(c2.arg);
              }
              var o3;
              function i2(t5, n3) {
                function i3() {
                  return new e4(function(e5, o4) {
                    r3(t5, n3, e5, o4);
                  });
                }
                return o3 = o3 ? o3.then(i3, i3) : i3();
              }
              this._invoke = i2;
            }
            function E(t4, e4, r3) {
              var n3 = l;
              return function(o3, i2) {
                if (n3 === d)
                  throw new Error("Generator is already running");
                if (n3 === h) {
                  if ("throw" === o3)
                    throw i2;
                  return F();
                }
                r3.method = o3, r3.arg = i2;
                while (1) {
                  var a2 = r3.delegate;
                  if (a2) {
                    var s2 = O(a2, r3);
                    if (s2) {
                      if (s2 === v)
                        continue;
                      return s2;
                    }
                  }
                  if ("next" === r3.method)
                    r3.sent = r3._sent = r3.arg;
                  else if ("throw" === r3.method) {
                    if (n3 === l)
                      throw n3 = h, r3.arg;
                    r3.dispatchException(r3.arg);
                  } else
                    "return" === r3.method && r3.abrupt("return", r3.arg);
                  n3 = d;
                  var c2 = f(t4, e4, r3);
                  if ("normal" === c2.type) {
                    if (n3 = r3.done ? h : p, c2.arg === v)
                      continue;
                    return { value: c2.arg, done: r3.done };
                  }
                  "throw" === c2.type && (n3 = h, r3.method = "throw", r3.arg = c2.arg);
                }
              };
            }
            function O(t4, r3) {
              var n3 = t4.iterator[r3.method];
              if (n3 === e3) {
                if (r3.delegate = null, "throw" === r3.method) {
                  if (t4.iterator["return"] && (r3.method = "return", r3.arg = e3, O(t4, r3), "throw" === r3.method))
                    return v;
                  r3.method = "throw", r3.arg = new TypeError("The iterator does not provide a 'throw' method");
                }
                return v;
              }
              var o3 = f(n3, t4.iterator, r3.arg);
              if ("throw" === o3.type)
                return r3.method = "throw", r3.arg = o3.arg, r3.delegate = null, v;
              var i2 = o3.arg;
              return i2 ? i2.done ? (r3[t4.resultName] = i2.value, r3.next = t4.nextLoc, "return" !== r3.method && (r3.method = "next", r3.arg = e3), r3.delegate = null, v) : i2 : (r3.method = "throw", r3.arg = new TypeError("iterator result is not an object"), r3.delegate = null, v);
            }
            function C(t4) {
              var e4 = { tryLoc: t4[0] };
              1 in t4 && (e4.catchLoc = t4[1]), 2 in t4 && (e4.finallyLoc = t4[2], e4.afterLoc = t4[3]), this.tryEntries.push(e4);
            }
            function T(t4) {
              var e4 = t4.completion || {};
              e4.type = "normal", delete e4.arg, t4.completion = e4;
            }
            function j(t4) {
              this.tryEntries = [{ tryLoc: "root" }], t4.forEach(C, this), this.reset(true);
            }
            function P(t4) {
              if (t4) {
                var r3 = t4[i];
                if (r3)
                  return r3.call(t4);
                if ("function" === typeof t4.next)
                  return t4;
                if (!isNaN(t4.length)) {
                  var o3 = -1, a2 = function r4() {
                    while (++o3 < t4.length)
                      if (n2.call(t4, o3))
                        return r4.value = t4[o3], r4.done = false, r4;
                    return r4.value = e3, r4.done = true, r4;
                  };
                  return a2.next = a2;
                }
              }
              return { next: F };
            }
            function F() {
              return { value: e3, done: true };
            }
            return g.prototype = y, c(w, "constructor", y), c(y, "constructor", g), g.displayName = c(y, s, "GeneratorFunction"), t3.isGeneratorFunction = function(t4) {
              var e4 = "function" === typeof t4 && t4.constructor;
              return !!e4 && (e4 === g || "GeneratorFunction" === (e4.displayName || e4.name));
            }, t3.mark = function(t4) {
              return Object.setPrototypeOf ? Object.setPrototypeOf(t4, y) : (t4.__proto__ = y, c(t4, s, "GeneratorFunction")), t4.prototype = Object.create(w), t4;
            }, t3.awrap = function(t4) {
              return { __await: t4 };
            }, S(_.prototype), c(_.prototype, a, function() {
              return this;
            }), t3.AsyncIterator = _, t3.async = function(e4, r3, n3, o3, i2) {
              void 0 === i2 && (i2 = Promise);
              var a2 = new _(u(e4, r3, n3, o3), i2);
              return t3.isGeneratorFunction(r3) ? a2 : a2.next().then(function(t4) {
                return t4.done ? t4.value : a2.next();
              });
            }, S(w), c(w, s, "Generator"), c(w, i, function() {
              return this;
            }), c(w, "toString", function() {
              return "[object Generator]";
            }), t3.keys = function(t4) {
              var e4 = [];
              for (var r3 in t4)
                e4.push(r3);
              return e4.reverse(), function r4() {
                while (e4.length) {
                  var n3 = e4.pop();
                  if (n3 in t4)
                    return r4.value = n3, r4.done = false, r4;
                }
                return r4.done = true, r4;
              };
            }, t3.values = P, j.prototype = { constructor: j, reset: function(t4) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = e3, this.done = false, this.delegate = null, this.method = "next", this.arg = e3, this.tryEntries.forEach(T), !t4)
                for (var r3 in this)
                  "t" === r3.charAt(0) && n2.call(this, r3) && !isNaN(+r3.slice(1)) && (this[r3] = e3);
            }, stop: function() {
              this.done = true;
              var t4 = this.tryEntries[0], e4 = t4.completion;
              if ("throw" === e4.type)
                throw e4.arg;
              return this.rval;
            }, dispatchException: function(t4) {
              if (this.done)
                throw t4;
              var r3 = this;
              function o3(n3, o4) {
                return s2.type = "throw", s2.arg = t4, r3.next = n3, o4 && (r3.method = "next", r3.arg = e3), !!o4;
              }
              for (var i2 = this.tryEntries.length - 1; i2 >= 0; --i2) {
                var a2 = this.tryEntries[i2], s2 = a2.completion;
                if ("root" === a2.tryLoc)
                  return o3("end");
                if (a2.tryLoc <= this.prev) {
                  var c2 = n2.call(a2, "catchLoc"), u2 = n2.call(a2, "finallyLoc");
                  if (c2 && u2) {
                    if (this.prev < a2.catchLoc)
                      return o3(a2.catchLoc, true);
                    if (this.prev < a2.finallyLoc)
                      return o3(a2.finallyLoc);
                  } else if (c2) {
                    if (this.prev < a2.catchLoc)
                      return o3(a2.catchLoc, true);
                  } else {
                    if (!u2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < a2.finallyLoc)
                      return o3(a2.finallyLoc);
                  }
                }
              }
            }, abrupt: function(t4, e4) {
              for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
                var o3 = this.tryEntries[r3];
                if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
                  var i2 = o3;
                  break;
                }
              }
              i2 && ("break" === t4 || "continue" === t4) && i2.tryLoc <= e4 && e4 <= i2.finallyLoc && (i2 = null);
              var a2 = i2 ? i2.completion : {};
              return a2.type = t4, a2.arg = e4, i2 ? (this.method = "next", this.next = i2.finallyLoc, v) : this.complete(a2);
            }, complete: function(t4, e4) {
              if ("throw" === t4.type)
                throw t4.arg;
              return "break" === t4.type || "continue" === t4.type ? this.next = t4.arg : "return" === t4.type ? (this.rval = this.arg = t4.arg, this.method = "return", this.next = "end") : "normal" === t4.type && e4 && (this.next = e4), v;
            }, finish: function(t4) {
              for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
                var r3 = this.tryEntries[e4];
                if (r3.finallyLoc === t4)
                  return this.complete(r3.completion, r3.afterLoc), T(r3), v;
              }
            }, catch: function(t4) {
              for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
                var r3 = this.tryEntries[e4];
                if (r3.tryLoc === t4) {
                  var n3 = r3.completion;
                  if ("throw" === n3.type) {
                    var o3 = n3.arg;
                    T(r3);
                  }
                  return o3;
                }
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function(t4, r3, n3) {
              return this.delegate = { iterator: P(t4), resultName: r3, nextLoc: n3 }, "next" === this.method && (this.arg = e3), v;
            } }, t3;
          }(t2.exports);
          try {
            regeneratorRuntime = e2;
          } catch (r2) {
            "object" === typeof globalThis ? globalThis.regeneratorRuntime = e2 : Function("r", "regeneratorRuntime = r")(e2);
          }
        }, 3744: function(t2, e2) {
          "use strict";
          e2.Z = (t3, e3) => {
            const r2 = t3.__vccOpts || t3;
            for (const [n2, o2] of e3)
              r2[n2] = o2;
            return r2;
          };
        }, 298: function(t2, e2, r2) {
          var n2 = r2(7834);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("d8210468", n2, true, { sourceMap: false, shadowMode: false });
        }, 2371: function(t2, e2, r2) {
          var n2 = r2(664);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("de752c5a", n2, true, { sourceMap: false, shadowMode: false });
        }, 5340: function(t2, e2, r2) {
          var n2 = r2(1115);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("942c7a64", n2, true, { sourceMap: false, shadowMode: false });
        }, 9536: function(t2, e2, r2) {
          var n2 = r2(5125);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("071cf7b1", n2, true, { sourceMap: false, shadowMode: false });
        }, 9904: function(t2, e2, r2) {
          var n2 = r2(4560);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("210a0781", n2, true, { sourceMap: false, shadowMode: false });
        }, 4624: function(t2, e2, r2) {
          var n2 = r2(6827);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("1b67af5d", n2, true, { sourceMap: false, shadowMode: false });
        }, 5221: function(t2, e2, r2) {
          var n2 = r2(3493);
          n2.__esModule && (n2 = n2.default), "string" === typeof n2 && (n2 = [[t2.id, n2, ""]]), n2.locals && (t2.exports = n2.locals);
          var o2 = r2(4402).Z;
          o2("3ddaf978", n2, true, { sourceMap: false, shadowMode: false });
        }, 4402: function(t2, e2, r2) {
          "use strict";
          function n2(t3, e3) {
            for (var r3 = [], n3 = {}, o3 = 0; o3 < e3.length; o3++) {
              var i2 = e3[o3], a2 = i2[0], s2 = i2[1], c2 = i2[2], u2 = i2[3], f2 = { id: t3 + ":" + o3, css: s2, media: c2, sourceMap: u2 };
              n3[a2] ? n3[a2].parts.push(f2) : r3.push(n3[a2] = { id: a2, parts: [f2] });
            }
            return r3;
          }
          r2.d(e2, { Z: function() {
            return h;
          } });
          var o2 = "undefined" !== typeof document;
          if ("undefined" !== typeof DEBUG && DEBUG && !o2)
            throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
          var i = {}, a = o2 && (document.head || document.getElementsByTagName("head")[0]), s = null, c = 0, u = false, f = function() {
          }, l = null, p = "data-vue-ssr-id", d = "undefined" !== typeof navigator && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
          function h(t3, e3, r3, o3) {
            u = r3, l = o3 || {};
            var a2 = n2(t3, e3);
            return v(a2), function(e4) {
              for (var r4 = [], o4 = 0; o4 < a2.length; o4++) {
                var s2 = a2[o4], c2 = i[s2.id];
                c2.refs--, r4.push(c2);
              }
              e4 ? (a2 = n2(t3, e4), v(a2)) : a2 = [];
              for (o4 = 0; o4 < r4.length; o4++) {
                c2 = r4[o4];
                if (0 === c2.refs) {
                  for (var u2 = 0; u2 < c2.parts.length; u2++)
                    c2.parts[u2]();
                  delete i[c2.id];
                }
              }
            };
          }
          function v(t3) {
            for (var e3 = 0; e3 < t3.length; e3++) {
              var r3 = t3[e3], n3 = i[r3.id];
              if (n3) {
                n3.refs++;
                for (var o3 = 0; o3 < n3.parts.length; o3++)
                  n3.parts[o3](r3.parts[o3]);
                for (; o3 < r3.parts.length; o3++)
                  n3.parts.push(g(r3.parts[o3]));
                n3.parts.length > r3.parts.length && (n3.parts.length = r3.parts.length);
              } else {
                var a2 = [];
                for (o3 = 0; o3 < r3.parts.length; o3++)
                  a2.push(g(r3.parts[o3]));
                i[r3.id] = { id: r3.id, refs: 1, parts: a2 };
              }
            }
          }
          function m() {
            var t3 = document.createElement("style");
            return t3.type = "text/css", a.appendChild(t3), t3;
          }
          function g(t3) {
            var e3, r3, n3 = document.querySelector("style[" + p + '~="' + t3.id + '"]');
            if (n3) {
              if (u)
                return f;
              n3.parentNode.removeChild(n3);
            }
            if (d) {
              var o3 = c++;
              n3 = s || (s = m()), e3 = b.bind(null, n3, o3, false), r3 = b.bind(null, n3, o3, true);
            } else
              n3 = m(), e3 = k.bind(null, n3), r3 = function() {
                n3.parentNode.removeChild(n3);
              };
            return e3(t3), function(n4) {
              if (n4) {
                if (n4.css === t3.css && n4.media === t3.media && n4.sourceMap === t3.sourceMap)
                  return;
                e3(t3 = n4);
              } else
                r3();
            };
          }
          var y = function() {
            var t3 = [];
            return function(e3, r3) {
              return t3[e3] = r3, t3.filter(Boolean).join("\n");
            };
          }();
          function b(t3, e3, r3, n3) {
            var o3 = r3 ? "" : n3.css;
            if (t3.styleSheet)
              t3.styleSheet.cssText = y(e3, o3);
            else {
              var i2 = document.createTextNode(o3), a2 = t3.childNodes;
              a2[e3] && t3.removeChild(a2[e3]), a2.length ? t3.insertBefore(i2, a2[e3]) : t3.appendChild(i2);
            }
          }
          function k(t3, e3) {
            var r3 = e3.css, n3 = e3.media, o3 = e3.sourceMap;
            if (n3 && t3.setAttribute("media", n3), l.ssrId && t3.setAttribute(p, e3.id), o3 && (r3 += "\n/*# sourceURL=" + o3.sources[0] + " */", r3 += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o3)))) + " */"), t3.styleSheet)
              t3.styleSheet.cssText = r3;
            else {
              while (t3.firstChild)
                t3.removeChild(t3.firstChild);
              t3.appendChild(document.createTextNode(r3));
            }
          }
        }, 7203: function(e2) {
          "use strict";
          e2.exports = t;
        } }, r = {};
        function n(t2) {
          var o2 = r[t2];
          if (void 0 !== o2)
            return o2.exports;
          var i = r[t2] = { id: t2, exports: {} };
          return e[t2].call(i.exports, i, i.exports, n), i.exports;
        }
        !function() {
          n.n = function(t2) {
            var e2 = t2 && t2.__esModule ? function() {
              return t2["default"];
            } : function() {
              return t2;
            };
            return n.d(e2, { a: e2 }), e2;
          };
        }(), function() {
          n.d = function(t2, e2) {
            for (var r2 in e2)
              n.o(e2, r2) && !n.o(t2, r2) && Object.defineProperty(t2, r2, { enumerable: true, get: e2[r2] });
          };
        }(), function() {
          n.g = function() {
            if ("object" === typeof globalThis)
              return globalThis;
            try {
              return this || new Function("return this")();
            } catch (t2) {
              if ("object" === typeof window)
                return window;
            }
          }();
        }(), function() {
          n.o = function(t2, e2) {
            return Object.prototype.hasOwnProperty.call(t2, e2);
          };
        }(), function() {
          n.r = function(t2) {
            "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
          };
        }(), function() {
          n.p = "";
        }();
        var o = {};
        return function() {
          "use strict";
          if (n.r(o), n.d(o, { VeProgress: function() {
            return he;
          }, default: function() {
            return ge;
          }, install: function() {
            return ve;
          } }), "undefined" !== typeof window) {
            var t2 = window.document.currentScript, e2 = n(7679);
            t2 = e2(), "currentScript" in document || Object.defineProperty(document, "currentScript", { get: e2 });
            var r2 = t2 && t2.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
            r2 && (n.p = r2[1]);
          }
          var i = n(7203), a = { class: "ep-content" }, s = { ref: "legend" }, c = ["innerHTML"], u = { key: 1 };
          function f(t3, e3, r3, n2, o2, f2) {
            var l2 = (0, i.resolveComponent)("circle-container"), p2 = (0, i.resolveComponent)("counter");
            return (0, i.openBlock)(), (0, i.createElementBlock)("div", { class: "ep-container", style: (0, i.normalizeStyle)({ width: "".concat(t3.size, "px"), height: "".concat(t3.size, "px") }) }, [(0, i.createElementVNode)("div", a, [((0, i.openBlock)(true), (0, i.createElementBlock)(i.Fragment, null, (0, i.renderList)(f2.normalizedCircles, function(t4, e4) {
              return (0, i.openBlock)(), (0, i.createBlock)(l2, { key: e4, options: t4 }, null, 8, ["options"]);
            }), 128)), (0, i.createElementVNode)("div", { class: "ep-legend--container", style: (0, i.normalizeStyle)({ maxWidth: "".concat(t3.size, "px") }) }, [f2.isMultiple ? (0, i.createCommentVNode)("", true) : ((0, i.openBlock)(), (0, i.createElementBlock)("div", { key: 0, class: (0, i.normalizeClass)(["ep-legend--value", [t3.legendClass, { "ep-hidden": f2.shouldHideLegendValue }]]), style: (0, i.normalizeStyle)([{ height: "".concat(t3.legendHeight, "px"), fontSize: t3.fontSize, color: t3.fontColor }, { transition: "0.3s" }]) }, [(0, i.createElementVNode)("div", s, [(0, i.createVNode)(p2, { value: f2.computedLegend, animation: f2.normalizedCircles[0].animation, loading: t3.loading }, { default: (0, i.withCtx)(function(e4) {
              var r4 = e4.counterTick;
              return [t3.legendFormatter ? ((0, i.openBlock)(), (0, i.createElementBlock)(i.Fragment, { key: 0 }, [f2.isHTML ? ((0, i.openBlock)(), (0, i.createElementBlock)("span", { key: 0, innerHTML: t3.legendFormatter(r4) }, null, 8, c)) : ((0, i.openBlock)(), (0, i.createElementBlock)("span", u, (0, i.toDisplayString)(t3.legendFormatter(r4)), 1))], 64)) : (0, i.renderSlot)(t3.$slots, "default", { key: 1, counterTick: r4 }, function() {
                return [(0, i.createElementVNode)("span", null, (0, i.toDisplayString)(r4.currentFormattedValue), 1)];
              }, true)];
            }), _: 3 }, 8, ["value", "animation", "loading"]), (0, i.renderSlot)(t3.$slots, "legend", {}, void 0, true)], 512)], 6)), (0, i.renderSlot)(t3.$slots, "legend-caption", {}, void 0, true)], 4)])], 4);
          }
          n(7941), n(2526), n(7327), n(1539), n(5003), n(4747), n(9337);
          function l(t3, e3, r3) {
            return e3 in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
          }
          function p(t3, e3) {
            var r3 = Object.keys(t3);
            if (Object.getOwnPropertySymbols) {
              var n2 = Object.getOwnPropertySymbols(t3);
              e3 && (n2 = n2.filter(function(e4) {
                return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
              })), r3.push.apply(r3, n2);
            }
            return r3;
          }
          function d(t3) {
            for (var e3 = 1; e3 < arguments.length; e3++) {
              var r3 = null != arguments[e3] ? arguments[e3] : {};
              e3 % 2 ? p(Object(r3), true).forEach(function(e4) {
                l(t3, e4, r3[e4]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : p(Object(r3)).forEach(function(e4) {
                Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
              });
            }
            return t3;
          }
          n(4916), n(7601), n(3210), n(9714), n(1249), n(2222), n(4048), n(9653);
          var h = function(t3) {
            return void 0 !== t3 && "" !== t3 && null !== t3 && !Number.isNaN(parseFloat(t3));
          }, v = function(t3) {
            return "string" === typeof t3 || t3 instanceof String;
          }, m = function(t3) {
            return !!h(t3) && parseFloat(t3);
          }, g = { currentValue: 0, countProgress: 0, currentFormattedValue: "0", currentRawValue: 0, duration: 0, previousCountStepValue: 0, start: 0, end: 0, difference: 0, currentDifference: 0, oneStepDifference: 0, startTime: 0, elapsed: 0 };
          function y(t3) {
            if (Array.isArray(t3))
              return t3;
          }
          n(1817), n(2165), n(6992), n(8783), n(3948);
          function b(t3, e3) {
            var r3 = null == t3 ? null : "undefined" !== typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
            if (null != r3) {
              var n2, o2, i2 = [], a2 = true, s2 = false;
              try {
                for (r3 = r3.call(t3); !(a2 = (n2 = r3.next()).done); a2 = true)
                  if (i2.push(n2.value), e3 && i2.length === e3)
                    break;
              } catch (c2) {
                s2 = true, o2 = c2;
              } finally {
                try {
                  a2 || null == r3["return"] || r3["return"]();
                } finally {
                  if (s2)
                    throw o2;
                }
              }
              return i2;
            }
          }
          n(7042), n(8309), n(1038);
          function k(t3, e3) {
            (null == e3 || e3 > t3.length) && (e3 = t3.length);
            for (var r3 = 0, n2 = new Array(e3); r3 < e3; r3++)
              n2[r3] = t3[r3];
            return n2;
          }
          function x(t3, e3) {
            if (t3) {
              if ("string" === typeof t3)
                return k(t3, e3);
              var r3 = Object.prototype.toString.call(t3).slice(8, -1);
              return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? k(t3, e3) : void 0;
            }
          }
          n(1703);
          function w() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function S(t3, e3) {
            return y(t3) || b(t3, e3) || x(t3, e3) || w();
          }
          function _(t3) {
            return _ = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, _(t3);
          }
          n(6699), n(3123), n(5306), n(6755);
          var E = function() {
            var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "transparent";
            return { type: [String, Object], required: false, default: t3, validator: function(t4) {
              return "string" === typeof t4 ? t4 : !("object" !== _(t4) || !t4.colors) && t4.colors.every(function(t5) {
                return t5.color && t5.offset;
              });
            } };
          }, O = function(t3) {
            return Object.keys(t3).every(function(e3) {
              return ["opacity", "duration"].includes(e3) ? h(t3[e3]) && t3[e3] >= 0 : T[e3].validator(t3[e3]);
            });
          }, C = { type: String, required: false, default: "center", validator: function(t3) {
            var e3 = t3.toString().split(" "), r3 = S(e3, 2), n2 = r3[0], o2 = r3[1], i2 = !o2 || !Number.isNaN(parseFloat(o2));
            return ["center", "out", "in"].includes(n2) && i2;
          } }, T = { data: { type: Array, required: false, default: function() {
            return [];
          } }, progress: { type: Number, require: true, validator: function(t3) {
            return t3 >= -100 && t3 <= 100;
          } }, legend: { type: [Number, String], required: false, validator: function(t3) {
            return !Number.isNaN(parseFloat(t3.toString().replace(",", ".")));
          } }, size: { type: Number, required: false, default: 200, validator: function(t3) {
            return t3 >= 0;
          } }, thickness: { type: [Number, String], required: false, default: "5%", validator: function(t3) {
            return parseFloat(t3) >= 0;
          } }, emptyThickness: { type: [Number, String], required: false, default: "5%", validator: function(t3) {
            return parseFloat(t3) >= 0;
          } }, line: { type: String, required: false, default: "round", validator: function(t3) {
            return ["round", "butt", "square"].includes(t3);
          } }, lineMode: { type: String, required: false, default: "center", validator: function(t3) {
            var e3 = t3.split(" "), r3 = ["center", "out", "out-over", "in", "in-over", "top", "bottom"].includes(e3[0]), n2 = !e3[1] || !Number.isNaN(parseFloat(e3[1]));
            return r3 && n2;
          } }, linePosition: C, emptyLinePosition: C, color: E("#3f79ff"), emptyColor: E("#e6e9f0"), colorFill: E(), emptyColorFill: E(), fontSize: { type: String, required: false }, fontColor: { type: String, required: false }, animation: { type: String, required: false, default: "default 1000 400", validator: function(t3) {
            var e3 = t3.split(" "), r3 = ["default", "rs", "loop", "reverse", "bounce"].some(function(t4) {
              return t4 === e3[0];
            }), n2 = !e3[1] || parseFloat(e3[1]) >= 0, o2 = !e3[2] || parseFloat(e3[2]) >= 0;
            return r3 && n2 && o2;
          } }, hideLegend: { type: Boolean, required: false, default: false }, legendClass: { type: String, required: false }, angle: { type: [String, Number], required: false, default: -90 }, loading: { type: Boolean, required: false, default: false }, noData: { type: Boolean, required: false, default: false }, dash: { type: String, required: false, default: "", validator: function(t3) {
            if (t3.startsWith("strict")) {
              var e3 = t3.split(" ");
              return parseFloat(e3[1]) >= 0 && parseFloat(e3[2]) >= 0;
            }
            return true;
          } }, half: { type: Boolean, required: false, default: false }, gap: { type: Number, required: false, default: 0, validator: function(t3) {
            return !Number.isNaN(parseInt(t3, 10));
          } }, determinate: { type: Boolean, required: false, default: false }, dot: { type: [String, Number, Object], required: false, default: 0, validator: function(t3) {
            return "object" === _(t3) ? void 0 !== t3.size && !Number.isNaN(parseFloat(t3.size)) : !Number.isNaN(parseFloat(t3));
          } }, reverse: { type: Boolean, required: false, default: false }, legendFormatter: { type: Function, required: false }, loader: { type: Object, required: false, default: function() {
            return {};
          }, validator: function(t3) {
            var e3 = Object.keys(t3).every(function(t4) {
              return ["thickness", "color", "lineMode", "line", "opacity", "duration"].includes(t4);
            });
            return !!e3 && O(t3);
          } } }, j = T, P = ["height", "width"], F = { class: "ep-circle--container" };
          function N(t3, e3, r3, n2, o2, a2) {
            var s2 = (0, i.resolveComponent)("gradient"), c2 = (0, i.resolveComponent)("circle-dot");
            return (0, i.openBlock)(), (0, i.createElementBlock)("div", { class: (0, i.normalizeClass)(["ep-svg-container", { "ep-reverse": r3.options.reverse }]) }, [((0, i.openBlock)(), (0, i.createElementBlock)("svg", { class: "ep-svg", height: r3.options.size, width: r3.options.size, xmlns: "http://www.w3.org/2000/svg" }, [(0, i.createElementVNode)("g", F, [(0, i.createElementVNode)("defs", null, [a2.isColorGradient ? ((0, i.openBlock)(), (0, i.createBlock)(s2, { key: 0, color: r3.options.color, type: "progress", uid: a2.uid }, null, 8, ["color", "uid"])) : (0, i.createCommentVNode)("", true), a2.isColorFillGradient ? ((0, i.openBlock)(), (0, i.createBlock)(s2, { key: 1, color: r3.options.colorFill, type: "progress-fill", uid: a2.uid }, null, 8, ["color", "uid"])) : (0, i.createCommentVNode)("", true), a2.isEmptyColorGradient ? ((0, i.openBlock)(), (0, i.createBlock)(s2, { key: 2, color: r3.options.emptyColor, type: "empty", uid: a2.uid }, null, 8, ["color", "uid"])) : (0, i.createCommentVNode)("", true), a2.isEmptyColorFillGradient ? ((0, i.openBlock)(), (0, i.createBlock)(s2, { key: 3, color: r3.options.emptyColorFill, type: "empty-fill", uid: a2.uid }, null, 8, ["color", "uid"])) : (0, i.createCommentVNode)("", true), a2.isLoaderColorGradient ? ((0, i.openBlock)(), (0, i.createBlock)(s2, { key: 4, color: r3.options.loader.color, type: "loader", uid: a2.uid }, null, 8, ["color", "uid"])) : (0, i.createCommentVNode)("", true)]), ((0, i.openBlock)(), (0, i.createBlock)((0, i.resolveDynamicComponent)(a2.circleType), { options: a2.computedOptions }, null, 8, ["options"]))])], 8, P)), r3.options.dot.size ? ((0, i.openBlock)(), (0, i.createBlock)(c2, { key: 0, options: a2.computedOptions }, null, 8, ["options"])) : (0, i.createCommentVNode)("", true)], 2);
          }
          var I = ["offset", "stop-color", "stop-opacity"];
          function A(t3, e3, r3, n2, o2, a2) {
            return (0, i.openBlock)(), (0, i.createBlock)((0, i.resolveDynamicComponent)(a2.gradientComponent), { id: "ep-".concat(r3.type, "-gradient-").concat(r3.uid), x1: "0%", y1: "100%", x2: "0%", y2: "0%", "area-hidden": "true" }, { default: (0, i.withCtx)(function() {
              return [((0, i.openBlock)(true), (0, i.createElementBlock)(i.Fragment, null, (0, i.renderList)(r3.color.colors, function(t4, e4) {
                return (0, i.openBlock)(), (0, i.createElementBlock)("stop", { key: e4, offset: "".concat(t4.offset, "%"), "stop-color": "".concat(t4.color), "stop-opacity": "".concat(a2.isValidNumber(t4.opacity) ? t4.opacity : 1) }, null, 8, I);
              }), 128))];
            }), _: 1 }, 8, ["id"]);
          }
          var D = { name: "Gradient", props: { color: { type: Object, required: true }, type: { type: String, required: true }, uid: { type: Number, required: true } }, methods: { isValidNumber: function(t3) {
            return h(t3);
          } }, computed: { gradientComponent: function() {
            return this.color.radial ? "radialGradient" : "linearGradient";
          } } }, L = n(3744);
          const M = (0, L.Z)(D, [["render", A]]);
          var R = M, z = ["fill", "d"], B = ["stroke-width", "stroke", "d", "stroke-linecap", "stroke-dasharray"], V = ["d", "fill"], G = { key: 0 }, q = ["stroke-width", "d", "stroke", "stroke-dasharray", "stroke-linecap"];
          function $(t3, e3, r3, n2, o2, a2) {
            var s2 = (0, i.resolveComponent)("half-circle-loader"), c2 = (0, i.resolveComponent)("fade-in-transition");
            return (0, i.openBlock)(), (0, i.createElementBlock)("g", { class: "ep-half-circle", style: (0, i.normalizeStyle)({ transitionDuration: t3.styles.transitionDuration, transitionTimingFunction: t3.styles.transitionTimingFunction, transform: "rotate(".concat(t3.angle, "deg)") }) }, ["transparent" !== t3.options.emptyColorFill ? ((0, i.openBlock)(), (0, i.createElementBlock)("path", { key: 0, fill: t3.emptyColorFill, class: (0, i.normalizeClass)(["ep-half-circle--empty__fill", { "ep-circle--nodata": !t3.dataIsAvailable }]), d: a2.emptyFillPath, style: (0, i.normalizeStyle)({ transition: t3.styles.transition }) }, null, 14, z)) : (0, i.createCommentVNode)("", true), (0, i.createElementVNode)("path", { "stroke-width": t3.options.emptyThickness, fill: "transparent", stroke: t3.emptyColor, class: (0, i.normalizeClass)(["ep-half-circle--empty", { "ep-circle--nodata": !t3.dataIsAvailable }]), d: a2.emptyPath, "stroke-linecap": t3.options.line, "stroke-dasharray": t3.emptyDasharray, style: (0, i.normalizeStyle)({ transitionDuration: t3.animationDuration, transitionTimingFunction: t3.styles.transitionTimingFunction }) }, null, 14, B), "transparent" !== t3.options.colorFill ? ((0, i.openBlock)(), (0, i.createElementBlock)("path", { key: 1, class: "ep-half-circle--progress__fill", d: a2.fillPath, fill: t3.colorFill, style: (0, i.normalizeStyle)({ transition: t3.styles.transition }) }, null, 12, V)) : (0, i.createCommentVNode)("", true), (0, i.createVNode)(c2, null, { default: (0, i.withCtx)(function() {
              return [t3.isLoading ? ((0, i.openBlock)(), (0, i.createElementBlock)("g", G, [(0, i.createVNode)(s2, { options: d(d({}, t3.options), t3.options.loader) }, null, 8, ["options"])])) : (0, i.createCommentVNode)("", true)];
            }), _: 1 }), (0, i.createElementVNode)("path", { "stroke-width": t3.options.thickness, class: (0, i.normalizeClass)(["ep-half-circle--progress ep-circle--progress", t3.animationClass]), d: a2.path, fill: "transparent", stroke: t3.color, "stroke-dasharray": a2.circumference, "stroke-linecap": t3.options.line, style: (0, i.normalizeStyle)(t3.styles) }, null, 14, q)], 4);
          }
          n(8674);
          function H(t3, e3, r3, n2, o2, i2, a2) {
            try {
              var s2 = t3[i2](a2), c2 = s2.value;
            } catch (u2) {
              return void r3(u2);
            }
            s2.done ? e3(c2) : Promise.resolve(c2).then(n2, o2);
          }
          function U(t3) {
            return function() {
              var e3 = this, r3 = arguments;
              return new Promise(function(n2, o2) {
                var i2 = t3.apply(e3, r3);
                function a2(t4) {
                  H(i2, n2, o2, a2, s2, "next", t4);
                }
                function s2(t4) {
                  H(i2, n2, o2, a2, s2, "throw", t4);
                }
                a2(void 0);
              });
            };
          }
          n(5666), n(2564);
          var Z = function(t3) {
            return t3 / 2;
          }, W = function(t3) {
            return Math.max(t3.thickness, t3.dot.size);
          }, Y = function(t3) {
            return Z(t3.size) - Z(W(t3));
          }, X = function(t3) {
            var e3 = t3.size, r3 = t3.emptyThickness;
            return Z(e3) - Z(r3);
          }, K = function(t3) {
            return W(t3) < t3.emptyThickness ? X(t3) : Y(t3);
          }, J = function(t3) {
            if (0 === t3.index)
              return 0;
            for (var e3 = h(t3.gap) ? t3.gap : t3.globalGap, r3 = [], n2 = 0; n2 < t3.previousCircles.length; n2++) {
              var o2 = t3.previousCircles[n2], i2 = o2.dot ? o2.dot.size : t3.globalDot.size, a2 = h(o2.thickness) ? o2.thickness : t3.globalThickness, s2 = h(o2.gap) ? o2.gap : t3.globalGap, c2 = Math.max(i2, a2);
              r3.push(n2 > 0 ? c2 + s2 : c2);
            }
            return r3.reduce(function(t4, e4) {
              return t4 + e4;
            }) + e3;
          }, Q = function(t3) {
            return K(t3);
          }, tt = function(t3) {
            return pt(t3) - (Z(t3.emptyThickness) + Z(t3.thickness) + t3.lineMode.offset);
          }, et = function(t3) {
            return t3.emptyThickness <= t3.thickness ? Y(t3) : X(t3) - Z(t3.emptyThickness) + Z(t3.thickness);
          }, rt = function(t3) {
            return pt(t3) + Z(t3.emptyThickness);
          }, nt = function(t3) {
            return pt(t3) - Z(t3.emptyThickness);
          }, ot = function(t3) {
            return K(t3);
          }, it = function(t3) {
            var e3 = Z(t3.thickness) + t3.emptyThickness + t3.lineMode.offset;
            return Z(t3.dot.size) > e3 ? X(t3) - (Z(t3.dot.size) - e3) : X(t3);
          }, at = function(t3) {
            var e3 = t3.dot.size - t3.thickness;
            return e3 > 0 ? X(t3) - Z(e3) : X(t3);
          }, st = function(t3) {
            return Y(t3) - (Z(t3.thickness) + Z(t3.emptyThickness) + t3.lineMode.offset);
          }, ct = function(t3) {
            return t3.emptyThickness <= t3.thickness ? Y(t3) - Z(t3.thickness) + Z(t3.emptyThickness) : X(t3);
          }, ut = function(t3) {
            return t3.emptyThickness < Z(W(t3)) ? X(t3) - (Z(W(t3)) - t3.emptyThickness) : X(t3);
          }, ft = function(t3) {
            return X(t3) - Z(W(t3));
          }, lt = function(t3) {
            var e3 = { multiple: function() {
              return Y(t3) - J(t3);
            }, center: function() {
              return Q(t3);
            }, in: function() {
              return tt(t3);
            }, "out-over": function() {
              return et(t3);
            }, bottom: function() {
              return nt(t3);
            }, top: function() {
              return rt(t3);
            } }, r3 = e3[t3.lineMode.mode];
            return r3 ? r3() : Y(t3);
          }, pt = function(t3) {
            var e3 = { multiple: function() {
              return Y(t3) - J(t3);
            }, center: function() {
              return ot(t3);
            }, in: function() {
              return it(t3);
            }, "in-over": function() {
              return at(t3);
            }, out: function() {
              return st(t3);
            }, "out-over": function() {
              return ct(t3);
            }, bottom: function() {
              return ut(t3);
            }, top: function() {
              return ft(t3);
            } }, r3 = e3[t3.lineMode.mode];
            return r3 ? r3() : X(t3);
          }, dt = function(t3, e3, r3) {
            var n2 = t3.position, o2 = t3.offset;
            return "center" === n2 ? r3 : "out" === n2 ? r3 - o2 - e3 / 2 : r3 + e3 / 2;
          }, ht = function() {
            var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 400;
            return new Promise(function(e3) {
              return setTimeout(function() {
                return e3();
              }, t3);
            });
          }, vt = { name: "CircleMixin", props: { options: { type: Object, required: true } }, data: function() {
            return { isInitialized: false };
          }, computed: { progress: function() {
            return parseFloat(this.options.progress || 0);
          }, progressOffset: function() {
            var t3 = this.circumference - this.progress / 100 * this.circumference;
            return Math.abs(this.circumference - t3) < 1 ? this.circumference - 0.5 : t3;
          }, radius: function() {
            return lt(this.options);
          }, fillRadius: function() {
            return dt(this.options.linePosition, this.options.thickness, this.radius);
          }, emptyRadius: function() {
            return pt(this.options);
          }, emptyFillRadius: function() {
            return dt(this.options.emptyLinePosition, this.options.emptyThickness, this.emptyRadius);
          }, dataIsAvailable: function() {
            return h(this.progress) && !this.options.noData;
          }, animationClass: function() {
            return ["animation__".concat(!this.options.loading && this.dataIsAvailable && this.isInitialized ? this.options.animation.type : "none")];
          }, animationDuration: function() {
            return "".concat(this.options.animation.duration, "ms");
          }, color: function() {
            return Array.isArray(this.options.color.colors) ? "url(#ep-progress-gradient-".concat(this.options.uid, ")") : this.options.color;
          }, emptyColor: function() {
            return Array.isArray(this.options.emptyColor.colors) ? "url(#ep-empty-gradient-".concat(this.options.uid, ")") : this.options.emptyColor;
          }, colorFill: function() {
            return Array.isArray(this.options.colorFill.colors) ? "url(#ep-progress-fill-gradient-".concat(this.options.uid, ")") : this.options.colorFill;
          }, emptyColorFill: function() {
            return Array.isArray(this.options.emptyColorFill.colors) ? "url(#ep-empty-fill-gradient-".concat(this.options.uid, ")") : this.options.emptyColorFill;
          }, angle: function() {
            return h(this.options.angle) ? this.options.angle : -90;
          }, transformOrigin: function() {
            return "50% 50%";
          }, emptyDasharray: function() {
            return this.options.dash.count && this.options.dash.spacing ? "".concat(2 * Math.PI * this.emptyRadius * this.getDashPercent(), ",\n              ").concat(2 * Math.PI * this.emptyRadius * this.getDashSpacingPercent()).trim() : this.options.dash;
          }, strokeDashOffset: function() {
            return this.dataIsAvailable && !this.options.loading && this.isInitialized ? this.progressOffset : this.circumference;
          }, styles: function() {
            return { transition: "".concat(this.animationDuration, ", opacity 0.3s"), strokeDashoffset: this.strokeDashOffset, transitionTimingFunction: "ease-in-out", transformOrigin: this.transformOrigin, opacity: this.options.loading || !this.dataIsAvailable ? 0 : 1, "--ep-circumference": this.circumference, "--ep-negative-circumference": this.getNegativeCircumference(), "--ep-double-circumference": this.getDoubleCircumference(), "--ep-stroke-offset": this.progressOffset, "--ep-loop-stroke-offset": this.getLoopOffset(), "--ep-bounce-out-stroke-offset": this.getBounceOutOffset(), "--ep-bounce-in-stroke-offset": this.getBounceInOffset(), "--ep-reverse-stroke-offset": this.getReverseOffset(), "--ep-loading-stroke-offset": 0.2 * this.circumference, "animation-duration": this.animationDuration };
          }, isLoading: function() {
            return (this.options.determinate || this.options.loading) && this.dataIsAvailable;
          } }, methods: { getDashSpacingPercent: function() {
            return this.options.dash.spacing / this.options.dash.count;
          }, getDashPercent: function() {
            return (1 - this.options.dash.spacing) / this.options.dash.count;
          }, getNegativeCircumference: function() {
            return -1 * this.circumference;
          }, getDoubleCircumference: function() {
            return 2 * this.circumference;
          }, getLoopOffset: function() {
            return this.getNegativeCircumference() - (this.circumference - this.progressOffset);
          }, getReverseOffset: function() {
            return this.getDoubleCircumference() + this.progressOffset;
          }, getBounceOutOffset: function() {
            return this.progressOffset < 100 ? 0 : this.progressOffset - 100;
          }, getBounceInOffset: function() {
            return this.circumference - this.progressOffset < 100 ? this.progressOffset : this.progressOffset + 100;
          } }, mounted: function() {
            var t3 = this;
            return U(regeneratorRuntime.mark(function e3() {
              return regeneratorRuntime.wrap(function(e4) {
                while (1)
                  switch (e4.prev = e4.next) {
                    case 0:
                      if (t3.options.loading) {
                        e4.next = 3;
                        break;
                      }
                      return e4.next = 3, ht(t3.options.animation.delay);
                    case 3:
                      t3.isInitialized = true;
                    case 4:
                    case "end":
                      return e4.stop();
                  }
              }, e3);
            }))();
          } };
          function mt(t3, e3, r3, n2, o2, a2) {
            return (0, i.openBlock)(), (0, i.createBlock)(i.Transition, { mode: "out-in", name: "fade", appear: "" }, { default: (0, i.withCtx)(function() {
              return [(0, i.renderSlot)(t3.$slots, "default", {}, void 0, true)];
            }), _: 3 });
          }
          var gt = { name: "FadeInTransition" };
          n(4624);
          const yt = (0, L.Z)(gt, [["render", mt], ["__scopeId", "data-v-873ef638"]]);
          var bt = yt, kt = ["stroke-width", "d", "stroke", "stroke-dasharray", "stroke-linecap"];
          function xt(t3, e3, r3, n2, o2, a2) {
            return (0, i.openBlock)(), (0, i.createElementBlock)("g", { class: "ep-half-circle--loader__container", style: (0, i.normalizeStyle)({ opacity: a2.opacity }) }, [(0, i.createElementVNode)("path", { "stroke-width": t3.options.thickness, class: "ep-half-circle--loader animation__loading", d: a2.path, fill: "transparent", stroke: a2.halfLoaderColor, "stroke-dasharray": a2.circumference, "stroke-linecap": t3.options.line, style: (0, i.normalizeStyle)({ transitionTimingFunction: t3.styles.transitionTimingFunction, transitionDuration: "".concat(t3.styles["animation-duration"], "ms"), transformOrigin: t3.styles.transformOrigin, animationDuration: a2.animationDurationStyle, "--ep-loading-stroke-offset": t3.styles["--ep-loading-stroke-offset"], "--ep-circumference": t3.styles["--ep-circumference"], "--ep-negative-circumference": t3.styles["--ep-negative-circumference"] }) }, null, 12, kt)], 4);
          }
          var wt = { name: "HalfCircleLoader", mixins: [vt], computed: { circumference: function() {
            return 2 * this.radius * Math.PI / 2;
          }, path: function() {
            return " M ".concat(this.position, ", ").concat(this.options.size / 2, " a ").concat(this.radius, ",").concat(this.radius, " 0 1,1 ").concat(2 * this.radius, ",0");
          }, position: function() {
            return this.options.size / 2 - this.radius;
          }, opacity: function() {
            return this.options.opacity && this.options.opacity >= 0 ? this.options.opacity : 0.55;
          }, animationDuration: function() {
            return this.options.duration && this.options.duration >= 0 ? this.options.duration : 1e3;
          }, animationDurationStyle: function() {
            return "".concat(this.animationDuration, "ms");
          }, halfLoaderColor: function() {
            return Array.isArray(this.options.loader.color.colors) ? "url(#ep-loader-gradient-".concat(this.options.uid, ")") : this.options.color;
          } } };
          n(9904);
          const St = (0, L.Z)(wt, [["render", xt], ["__scopeId", "data-v-0af4dce4"]]);
          var _t = St, Et = { name: "HalfCircleProgress", components: { HalfCircleLoader: _t, FadeInTransition: bt }, mixins: [vt], computed: { circumference: function() {
            return 2 * this.radius * Math.PI / 2;
          }, path: function() {
            return this.getPath(this.radius);
          }, fillPath: function() {
            return this.getPath(this.fillRadius);
          }, emptyPath: function() {
            return this.getPath(this.emptyRadius);
          }, emptyFillPath: function() {
            return this.getPath(this.emptyFillRadius);
          } }, methods: { getPosition: function(t3) {
            return this.options.size / 2 - t3;
          }, getPath: function(t3) {
            return " M ".concat(this.getPosition(t3), ", ").concat(this.options.size / 2, " a ").concat(t3, ",").concat(t3, " 0 1,1 ").concat(2 * t3, ",0");
          } } };
          n(9536);
          const Ot = (0, L.Z)(Et, [["render", $], ["__scopeId", "data-v-58d6f8b2"]]);
          var Ct = Ot, Tt = ["r", "cx", "cy", "fill"], jt = ["r", "cx", "cy", "stroke", "stroke-dasharray", "stroke-width"], Pt = ["r", "cx", "cy", "fill"], Ft = { key: 0 }, Nt = ["r", "cx", "cy", "stroke", "stroke-width", "stroke-linecap", "stroke-dasharray"];
          function It(t3, e3, r3, n2, o2, a2) {
            var s2 = (0, i.resolveComponent)("circle-loader"), c2 = (0, i.resolveComponent)("fade-in-transition");
            return (0, i.openBlock)(), (0, i.createElementBlock)("g", { class: "ep-circle", style: (0, i.normalizeStyle)({ transitionDuration: t3.styles.transitionDuration, transitionTimingFunction: t3.styles.transitionTimingFunction, transform: "rotate(".concat(t3.angle, "deg)") }) }, ["transparent" !== t3.options.emptyColorFill ? ((0, i.openBlock)(), (0, i.createElementBlock)("circle", { key: 0, class: (0, i.normalizeClass)(["ep-circle--empty__fill", { "ep-circle--nodata": !t3.dataIsAvailable }]), r: t3.emptyFillRadius, cx: a2.position, cy: a2.position, fill: t3.emptyColorFill, style: (0, i.normalizeStyle)({ transitionDuration: t3.animationDuration, transitionTimingFunction: t3.styles.transitionTimingFunction }) }, null, 14, Tt)) : (0, i.createCommentVNode)("", true), (0, i.createElementVNode)("circle", { class: (0, i.normalizeClass)(["ep-circle--empty", { "ep-circle--nodata": !t3.dataIsAvailable }]), r: t3.emptyRadius, cx: a2.position, cy: a2.position, stroke: t3.emptyColor, "stroke-dasharray": t3.emptyDasharray, fill: "transparent", style: (0, i.normalizeStyle)({ transitionDuration: t3.animationDuration, transitionTimingFunction: t3.styles.transitionTimingFunction }), "stroke-width": t3.options.emptyThickness }, null, 14, jt), "transparent" !== t3.options.colorFill ? ((0, i.openBlock)(), (0, i.createElementBlock)("circle", { key: 1, class: (0, i.normalizeClass)(["ep-circle--progress__fill", { "ep-circle--nodata": !t3.dataIsAvailable }]), r: t3.fillRadius, cx: a2.position, cy: a2.position, fill: t3.colorFill, style: (0, i.normalizeStyle)({ transition: t3.styles.transition }) }, null, 14, Pt)) : (0, i.createCommentVNode)("", true), (0, i.createVNode)(c2, null, { default: (0, i.withCtx)(function() {
              return [t3.isLoading ? ((0, i.openBlock)(), (0, i.createElementBlock)("g", Ft, [(0, i.createVNode)(s2, { options: d(d({}, t3.options), t3.options.loader) }, null, 8, ["options"])])) : (0, i.createCommentVNode)("", true)];
            }), _: 1 }), (0, i.createElementVNode)("circle", { class: (0, i.normalizeClass)(["ep-circle--progress", t3.animationClass]), r: t3.radius, cx: a2.position, cy: a2.position, fill: "transparent", stroke: t3.color, "stroke-width": t3.options.thickness, "stroke-linecap": t3.options.line, "stroke-dasharray": a2.circumference, style: (0, i.normalizeStyle)(t3.styles) }, null, 14, Nt)], 4);
          }
          var At = ["r", "cx", "cy", "stroke", "stroke-width", "stroke-linecap", "stroke-dasharray"];
          function Dt(t3, e3, r3, n2, o2, a2) {
            return (0, i.openBlock)(), (0, i.createElementBlock)("g", { class: "ep-circle--loader__container", style: (0, i.normalizeStyle)({ opacity: a2.opacity }) }, [(0, i.createElementVNode)("circle", { class: "ep-circle--loader animation__loading", r: t3.radius, cx: a2.position, cy: a2.position, fill: "transparent", stroke: a2.loaderColor, "stroke-width": t3.options.thickness, "stroke-linecap": t3.options.line, "stroke-dasharray": a2.circumference, style: (0, i.normalizeStyle)({ transition: "all", transitionTimingFunction: t3.styles.transitionTimingFunction, transitionDuration: "".concat(t3.styles["animation-duration"], "ms"), transformOrigin: t3.styles.transformOrigin, animationDuration: a2.animationDurationStyle, "--ep-loading-stroke-offset": t3.styles["--ep-loading-stroke-offset"], "--ep-circumference": t3.styles["--ep-circumference"] }) }, null, 12, At)], 4);
          }
          var Lt = { name: "CircleLoader", mixins: [vt], computed: { position: function() {
            return this.options.size / 2;
          }, circumference: function() {
            return 2 * this.radius * Math.PI;
          }, opacity: function() {
            return this.options.opacity && this.options.opacity >= 0 ? this.options.opacity : 0.55;
          }, animationDuration: function() {
            return this.options.duration && this.options.duration >= 0 ? this.options.duration : 1e3;
          }, animationDurationStyle: function() {
            return "".concat(2 * this.animationDuration, "ms, ").concat(this.animationDuration, "ms");
          }, loaderColor: function() {
            return Array.isArray(this.options.loader.color.colors) ? "url(#ep-loader-gradient-".concat(this.options.uid, ")") : this.options.color;
          } } };
          const Mt = (0, L.Z)(Lt, [["render", Dt]]);
          var Rt = Mt, zt = { name: "CircleProgress", components: { CircleLoader: Rt, FadeInTransition: bt }, mixins: [vt], computed: { position: function() {
            return this.options.size / 2;
          }, circumference: function() {
            return 2 * this.radius * Math.PI;
          } } };
          n(298);
          const Bt = (0, L.Z)(zt, [["render", It], ["__scopeId", "data-v-016e1ca5"]]);
          var Vt = Bt;
          function Gt(t3, e3, r3, n2, o2, a2) {
            return (0, i.openBlock)(), (0, i.createElementBlock)("div", { class: (0, i.normalizeClass)(["ep-circle--progress__dot-container", a2.dotContainerClasses]), style: (0, i.normalizeStyle)(a2.dotContainerStyle) }, [(0, i.createElementVNode)("div", null, [(0, i.createElementVNode)("span", { class: (0, i.normalizeClass)(["ep-circle--progress__dot", { "ep-hidden": a2.isHidden }]), style: (0, i.normalizeStyle)(a2.dotStyle) }, null, 6)])], 6);
          }
          var qt = { name: "CircleDot", mixins: [vt], computed: { dotContainerSize: function() {
            return 2 * this.radius + this.dotSize;
          }, dotContainerRotation: function() {
            return this.isInitialized && !this.options.loading && this.dataIsAvailable ? this.dotEnd : this.dotStart;
          }, dotContainerFullRotationDeg: function() {
            return this.options.half ? 180 : 360;
          }, dotSize: function() {
            return this.options.dot.size;
          }, dotColor: function() {
            return this.options.dot.color;
          }, globalDotSize: function() {
            return this.globalDot.size;
          }, dotContainerStyle: function() {
            return d({ width: "".concat(this.dotContainerSize, "px"), height: "".concat(this.dotContainerSize, "px"), transform: "rotate(".concat(this.dotContainerRotation, "deg)"), transitionDuration: this.options.loading || !this.dataIsAvailable ? "0s" : this.animationDuration, transitionTimingFunction: "ease-in-out", "animation-duration": this.animationDuration, "--ep-dot-start": "".concat(this.dotStart, "deg"), "--ep-dot-end": "".concat(this.dotEnd, "deg"), "--ep-dot-360": "".concat(this.dotStart + this.dotContainerFullRotationDeg, "deg") }, this.dotContainerAnimationStyle);
          }, dotContainerClasses: function() {
            return [this.animationClass, !this.options.half || "ep-half-circle-progress__dot"];
          }, dotContainerAnimationStyle: function() {
            var t3 = { loop: { opacity: this.options.half ? 0 : 1, "--ep-dot-loop-end": "".concat(this.dotStart + this.dotContainerFullRotationDeg + this.dotEnd, "deg") }, bounce: { opacity: 0, "animation-duration": "".concat(this.options.animation.duration + 10 * this.options.animation.duration / 100, "ms") } };
            return t3[this.options.animation.type];
          }, dotStyle: function() {
            return d(d({ borderRadius: "".concat(this.dotSize / 2, "px"), width: "".concat(this.dotSize, "px"), backgroundColor: this.dotColor }, this.options.dot), {}, { transitionDuration: this.options.loading || !this.dataIsAvailable ? "0s" : this.animationDuration, height: "".concat(this.dotSize, "px") });
          }, dotStart: function() {
            return this.options.half ? this.angle - 90 : this.angle + 90;
          }, dotEnd: function() {
            var t3 = this.calculateProgress();
            return this.dotStart + t3 * this.dotContainerFullRotationDeg / 100;
          }, isHidden: function() {
            return !this.isInitialized || this.options.loading || !this.dataIsAvailable;
          } }, methods: { calculateProgress: function() {
            return this.options.half && this.progress < 0 ? this.progress - 100 : this.progress;
          } } };
          n(5340);
          const $t = (0, L.Z)(qt, [["render", Gt], ["__scopeId", "data-v-12292afe"]]);
          var Ht = $t, Ut = { name: "CircleContainer", components: { CircleDot: Ht, CircleProgress: Vt, HalfCircleProgress: Ct, Gradient: R }, props: { options: { type: Object, required: true } }, computed: { computedOptions: function() {
            return d(d({}, this.options), {}, { uid: this.uid });
          }, circleType: function() {
            return this.options.half ? "half-circle-progress" : "circle-progress";
          }, isColorGradient: function() {
            return Array.isArray(this.options.color.colors);
          }, isColorFillGradient: function() {
            return Array.isArray(this.options.colorFill.colors);
          }, isEmptyColorGradient: function() {
            return Array.isArray(this.options.emptyColor.colors);
          }, isEmptyColorFillGradient: function() {
            return Array.isArray(this.options.emptyColorFill.colors);
          }, isLoaderColorGradient: function() {
            return Array.isArray(this.options.loader.color.colors);
          }, uid: function() {
            return this.$.uid;
          } } };
          n(2371);
          const Zt = (0, L.Z)(Ut, [["render", N]]);
          var Wt = Zt, Yt = { class: "ep-legend--value__counter" };
          function Xt(t3, e3, r3, n2, o2, a2) {
            return (0, i.openBlock)(), (0, i.createElementBlock)("span", Yt, [(0, i.renderSlot)(t3.$slots, "default", { counterTick: a2.counterProps })]);
          }
          function Kt(t3) {
            if (Array.isArray(t3))
              return k(t3);
          }
          function Jt(t3) {
            if ("undefined" !== typeof Symbol && null != t3[Symbol.iterator] || null != t3["@@iterator"])
              return Array.from(t3);
          }
          function Qt() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function te(t3) {
            return Kt(t3) || Jt(t3) || x(t3) || Qt();
          }
          n(2023), n(9600), n(3290), n(6977);
          var ee = { name: "Counter", props: { value: { type: [Number, String], required: true }, animation: { type: Object, required: true }, loading: { type: Boolean, required: true } }, data: function() {
            return { start: 0, startTime: 0, elapsed: 0, currentValue: 0, raf: null, previousCountStepValue: 0 };
          }, watch: { value: function() {
            this.start = this.currentValue, this.reset(), this.raf = requestAnimationFrame(this.count);
          } }, computed: { end: function() {
            return parseFloat(this.value.toString().replace(",", "."));
          }, difference: function() {
            return Math.abs(this.end - this.start);
          }, currentDifference: function() {
            return Math.abs(this.end - this.currentValue);
          }, oneStepDifference: function() {
            return 0 === this.duration ? this.difference : this.difference / this.duration;
          }, delimiter: function() {
            return this.value.toString().includes(",") ? "," : ".";
          }, formattedValue: function() {
            if (v(this.value) && !this.value.includes("-")) {
              var t3 = this.value.toString().replace(/\s/g, "").split(this.delimiter), e3 = S(t3, 1), r3 = e3[0];
              r3 = te(r3).fill("0").join("");
              var n2 = this.currentValue.toFixed(this.decimalsCount).replace(".", this.delimiter).split(this.delimiter), o2 = S(n2, 2), i2 = o2[0], a2 = o2[1];
              return "".concat(r3.slice(i2.length)).concat(i2).concat(a2 ? this.delimiter + a2 : "");
            }
            return this.currentValue.toFixed(this.decimalsCount).replace(".", this.delimiter);
          }, delay: function() {
            return this.animation.delay;
          }, duration: function() {
            return this.animation.duration;
          }, countProgress: function() {
            return 100 * Math.abs(this.currentDifference - this.difference) / (this.difference || 1);
          }, decimalsCount: function() {
            return v(this.value) || this.value % 1 !== 0 ? (this.value.toString().replace(/\s/g, "").split(this.delimiter)[1] || "").length : 0;
          }, counterProps: function() {
            return { currentValue: parseFloat(this.formattedValue), countProgress: this.countProgress, currentFormattedValue: this.formattedValue, currentRawValue: this.currentValue, duration: this.duration, previousCountStepValue: this.previousCountStepValue, start: this.start, end: this.end, difference: this.difference, currentDifference: this.currentDifference, oneStepDifference: this.oneStepDifference, startTime: this.startTime, elapsed: this.elapsed };
          } }, methods: { count: function(t3) {
            this.startTime || (this.startTime = t3), this.elapsed = t3 - this.startTime, this.end >= this.start ? this.countUp() : this.countDown(), this.elapsed < this.duration && this.difference > 0.1 && (cancelAnimationFrame(this.raf), this.raf = requestAnimationFrame(this.count)), this.elapsed >= this.duration && (this.currentValue = this.end, this.reset());
          }, countDown: function() {
            var t3 = Math.min(this.oneStepDifference * (this.elapsed || 1), this.difference);
            this.currentValue -= t3 - this.previousCountStepValue, this.previousCountStepValue = t3;
          }, countUp: function() {
            var t3 = Math.min(this.oneStepDifference * (this.elapsed || 1), this.difference);
            this.currentValue += t3 - this.previousCountStepValue, this.previousCountStepValue = t3;
          }, reset: function() {
            this.startTime = 0, this.previousCountStepValue = 0, cancelAnimationFrame(this.raf);
          } }, mounted: function() {
            var t3 = this;
            this.loading ? this.raf = requestAnimationFrame(this.count) : setTimeout(function() {
              t3.raf = requestAnimationFrame(t3.count);
            }, this.delay);
          } };
          const re = (0, L.Z)(ee, [["render", Xt]]);
          var ne = re, oe = function(t3, e3) {
            var r3 = t3.trim().split(" "), n2 = e3 ? "multiple" : r3[0];
            return { mode: n2, offset: m(r3[1]) || 0 };
          }, ie = function(t3) {
            var e3 = t3.trim().split(" ");
            return { type: e3[0], duration: h(e3[1]) ? parseFloat(e3[1]) : 1e3, delay: h(e3[2]) ? parseFloat(e3[2]) : 400 };
          }, ae = function(t3) {
            var e3 = t3.trim().split(" "), r3 = "strict" === e3[0];
            return r3 ? { count: parseInt(e3[1], 10), spacing: parseFloat(e3[2]) } : t3;
          }, se = function(t3, e3) {
            var r3 = 0, n2 = "white", o2 = {};
            if ("object" !== _(t3)) {
              var i2 = t3.toString().trim().split(" ");
              r3 = h(i2[0]) ? i2[0] : 0, n2 = i2[1] || "white";
            } else
              r3 = t3.size || 0, o2 = t3;
            return d(d({}, o2), {}, { size: ce(r3, e3), color: n2 });
          }, ce = function(t3, e3) {
            var r3 = parseFloat(t3);
            return t3.toString().includes("%") ? r3 * e3 / 100 : r3;
          }, ue = function(t3) {
            var e3 = t3.toString().split(" "), r3 = S(e3, 2), n2 = r3[0], o2 = r3[1];
            return { position: n2, offset: parseFloat(o2) || 0 };
          }, fe = function(t3, e3) {
            return d(d({}, t3), {}, { color: t3.color || e3.color, line: t3.line || e3.line, lineMode: oe(t3.lineMode || e3.lineMode, e3.multiple), thickness: ce(t3.thickness || e3.thickness, e3.size) });
          }, le = function(t3) {
            return d(d({}, t3), {}, { thickness: ce(t3.thickness, t3.size), emptyThickness: ce(t3.emptyThickness, t3.size), globalThickness: ce(t3.globalThickness, t3.size), dot: se(t3.dot, t3.size), globalDot: se(t3.globalDot, t3.size), dash: ae(t3.dash), lineMode: oe(t3.lineMode, t3.multiple), linePosition: ue(t3.linePosition), emptyLinePosition: ue(t3.emptyLinePosition), animation: ie(t3.animation), loader: fe(t3.loader, t3) });
          }, pe = { name: "VueEllipseProgress", components: { Counter: ne, CircleContainer: Wt }, props: j, data: function() {
            return { legendHeight: null };
          }, watch: { hideLegend: function() {
            this.updateLegendHeight();
          } }, computed: { computedLegend: function() {
            return this.loading || this.noData ? 0 : this.legend ? this.legend : m(this.progress) || 0;
          }, shouldHideLegendValue: function() {
            return !this.isDataAvailable || this.loading || this.hideLegend;
          }, isDataAvailable: function() {
            return h(this.progress) && !this.noData;
          }, isMultiple: function() {
            return this.data.length > 1;
          }, isHTML: function() {
            return /<[a-z/][\s\S]*>/i.test((this.legendFormatter && this.legendFormatter(g) || "").toString().trim());
          }, circlesData: function() {
            var t3 = this;
            return this.isMultiple ? this.data.map(function(e3) {
              return d(d(d({}, t3.$props), e3), {}, { multiple: true, emptyThickness: h(e3.thickness) ? e3.thickness : t3.$props.thickness, data: void 0 });
            }) : [this.$props];
          }, normalizedCircles: function() {
            for (var t3 = [], e3 = [], r3 = 0; r3 < this.circlesData.length; r3++) {
              var n2 = this.circlesData[r3], o2 = le(d(d({ index: r3 }, n2), {}, { globalDot: this.dot, globalGap: this.gap, globalThickness: this.thickness, previousCircles: [].concat(e3) }));
              t3.push(o2);
              var i2 = t3[r3], a2 = i2.gap, s2 = i2.thickness, c2 = i2.dot;
              e3.push({ gap: a2, thickness: s2, dot: c2 });
            }
            return t3;
          } }, methods: { updateLegendHeight: function() {
            var t3 = this;
            this.$nextTick(function() {
              var e3, r3;
              t3.legendHeight = t3.hideLegend ? 0 : null !== (e3 = null === (r3 = t3.$refs.legend) || void 0 === r3 ? void 0 : r3.clientHeight) && void 0 !== e3 ? e3 : 0;
            });
          } }, mounted: function() {
            this.updateLegendHeight();
          } };
          n(5221);
          const de = (0, L.Z)(pe, [["render", f], ["__scopeId", "data-v-a7ff9eba"]]);
          var he = de, ve = function(t3) {
            var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "ve-progress";
            return t3.component(e3, he);
          }, me = ve, ge = me;
        }(), o;
      }();
    });
  }
});
export default require_veprogress_umd_min();
//# sourceMappingURL=vue-ellipse-progress.js.map
